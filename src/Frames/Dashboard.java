package Frames;

import extraclasses.openinweb;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import static java.lang.Integer.parseInt;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JRViewer;
import java.util.Properties;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.*;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.StandardBarPainter;
import org.jfree.data.category.DefaultCategoryDataset;

public class Dashboard extends javax.swing.JFrame {

    static ImageIcon icon;
    String path = null;

    public Dashboard() {
        initComponents();

        new Thread() {
            public void run() {
                while (true) {//get date and time
                    Date timenow = new Date();
                    Date datenow = new Date();
                    Date todaysalenow = new Date();
                    SimpleDateFormat sdft = new SimpleDateFormat("hh:mm:ss a");//set time format to hh:mm:ss
                    SimpleDateFormat sdfd = new SimpleDateFormat("dd / MM / yyyy");//set date format to dd/MM/yyyy
                    SimpleDateFormat sdftodaysales = new SimpleDateFormat("yyyy-MM-dd");//set date format to yyyy-MM-dd
                    String time = "" + sdft.format(timenow);//present time
                    String date = "" + sdfd.format(datenow);//present date
                    String todaysalesdate = "" + sdftodaysales.format(todaysalenow);
                    salesday.setText(todaysalesdate);
                    timelbl.setText(time);
                    datelbl.setText(date);
                }
            }
        }.start();
         Dashboard.this.setExtendedState(JFrame.MAXIMIZED_BOTH); //full screen
        Dashboard.this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE); //do nothing on close
        black.setVisible(true); //open black panel
        sectionlogout.setVisible(false); //close sectionlogout panel
        setIcon();
        lastactivitiesrefresh();
        refreshlogtable();
        generateGRNID();
        refreshstocktable();
        refreshstockupdatetable();
        refreshstocktableinpos();
        refreshlogtable();
        lastactivitiesrefresh();
        settodaysalestable();
        settodaysalesnumber();
        settodaysalesearned();
        generateGRNID();
        generateInvoiceID();
        setmonthlysalestable();
        setactivitytypescombo();
        dateingrn.setText(salesday.getText());//get text at salesday and set it at dateingrn

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new javax.swing.JPanel();
        close = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        logoutsection = new javax.swing.JPanel();
        sectionlogout = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        black = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        footer = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        datelbl = new javax.swing.JLabel();
        timelbl = new javax.swing.JLabel();
        salesday = new javax.swing.JLabel();
        currencyinvisible1 = new javax.swing.JLabel();
        salesday1 = new javax.swing.JLabel();
        leftside = new javax.swing.JPanel();
        lefticon = new javax.swing.JLabel();
        middle = new javax.swing.JPanel();
        hometoggle = new javax.swing.JLabel();
        stockstoggle = new javax.swing.JLabel();
        salestoggle = new javax.swing.JLabel();
        employeetoggle = new javax.swing.JLabel();
        customertoggle = new javax.swing.JLabel();
        logtoggle = new javax.swing.JLabel();
        settingstoggle = new javax.swing.JLabel();
        rightside = new javax.swing.JPanel();
        homepnl = new javax.swing.JPanel();
        lastactivities = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel8 = new javax.swing.JLabel();
        lastactivities4 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lastactivities5 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lastactivities6 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        todayearned = new javax.swing.JLabel();
        lastactivities7 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        todaysaleslbl = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        todaysales = new javax.swing.JTable();
        currencyinvisible = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        monthlysales = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        stockpnl = new javax.swing.JPanel();
        ViewStock = new javax.swing.JLabel();
        AddStock = new javax.swing.JLabel();
        stockupdate = new javax.swing.JLabel();
        PrintStock = new javax.swing.JLabel();
        PrintGRN = new javax.swing.JLabel();
        grnrecordslbl = new javax.swing.JLabel();
        cardonstock = new javax.swing.JPanel();
        Viewstockpanel = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        refresh = new javax.swing.JButton();
        quciksearchviewstock = new javax.swing.JTextField();
        quicksearchitemidlbl = new javax.swing.JLabel();
        detailmodebtn = new javax.swing.JButton();
        holder = new javax.swing.JPanel();
        tableview = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewstocktable = new javax.swing.JTable();
        detailmode = new javax.swing.JPanel();
        jPanel35 = new javax.swing.JPanel();
        itemidfield1 = new javax.swing.JTextField();
        quicksearchitemidlbl33 = new javax.swing.JLabel();
        quicksearchitemidlbl34 = new javax.swing.JLabel();
        itemnamefield1 = new javax.swing.JTextField();
        quicksearchitemidlbl35 = new javax.swing.JLabel();
        itemdescriptionfield1 = new javax.swing.JTextField();
        stocknumberfield1 = new javax.swing.JTextField();
        quicksearchitemidlbl36 = new javax.swing.JLabel();
        sellingpricefield1 = new javax.swing.JTextField();
        quicksearchitemidlbl37 = new javax.swing.JLabel();
        stockpricefield1 = new javax.swing.JTextField();
        quicksearchitemidlbl38 = new javax.swing.JLabel();
        quicksearchitemidlbl39 = new javax.swing.JLabel();
        barcodefield1 = new javax.swing.JTextField();
        quicksearchitemidlbl40 = new javax.swing.JLabel();
        supplieridfield1 = new javax.swing.JTextField();
        brandfield1 = new javax.swing.JTextField();
        quicksearchitemidlbl41 = new javax.swing.JLabel();
        quicksearchitemidlbl42 = new javax.swing.JLabel();
        conditionfield1 = new javax.swing.JTextField();
        quicksearchitemidlbl43 = new javax.swing.JLabel();
        quicksearchitemidlbl44 = new javax.swing.JLabel();
        warrantyfield1 = new javax.swing.JTextField();
        quicksearchitemidlbl45 = new javax.swing.JLabel();
        quantityfield1 = new javax.swing.JTextField();
        quicksearchitemidlbl32 = new javax.swing.JLabel();
        deletethisid = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        ok = new javax.swing.JButton();
        editdetailmodebtn = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        quicksearchitemidlbl49 = new javax.swing.JLabel();
        Addstockpanel = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        quicksearchitemidlbl1 = new javax.swing.JLabel();
        itemidfield = new javax.swing.JTextField();
        itemnamefield = new javax.swing.JTextField();
        stocknumberfield = new javax.swing.JTextField();
        itemdescriptionfield = new javax.swing.JTextField();
        stockpricefield = new javax.swing.JTextField();
        sellingpricefield = new javax.swing.JTextField();
        itemidfieldstate = new javax.swing.JLabel();
        itemnamefieldstate = new javax.swing.JLabel();
        stocknumberfieldstate = new javax.swing.JLabel();
        itemdescriptionfieldstate = new javax.swing.JLabel();
        stockpricefieldstate = new javax.swing.JLabel();
        sellingpricefieldstate = new javax.swing.JLabel();
        quicksearchitemidlbl4 = new javax.swing.JLabel();
        quicksearchitemidlbl5 = new javax.swing.JLabel();
        quicksearchitemidlbl7 = new javax.swing.JLabel();
        quicksearchitemidlbl6 = new javax.swing.JLabel();
        quicksearchitemidlbl9 = new javax.swing.JLabel();
        quicksearchitemidlbl8 = new javax.swing.JLabel();
        quicksearchitemidlbl10 = new javax.swing.JLabel();
        quicksearchitemidlbl11 = new javax.swing.JLabel();
        quicksearchitemidlbl12 = new javax.swing.JLabel();
        quicksearchitemidlbl13 = new javax.swing.JLabel();
        quicksearchitemidlbl15 = new javax.swing.JLabel();
        quicksearchitemidlbl16 = new javax.swing.JLabel();
        quantityfield = new javax.swing.JTextField();
        warrantyfield = new javax.swing.JTextField();
        conditionfield = new javax.swing.JTextField();
        brandfield = new javax.swing.JTextField();
        supplieridfield = new javax.swing.JTextField();
        barcodefield = new javax.swing.JTextField();
        barcodefieldstate = new javax.swing.JLabel();
        supplieridfieldstate = new javax.swing.JLabel();
        brandfieldstate = new javax.swing.JLabel();
        conditionfieldstate = new javax.swing.JLabel();
        warrantyfieldstate = new javax.swing.JLabel();
        quantityfieldstate = new javax.swing.JLabel();
        jPanel43 = new javax.swing.JPanel();
        quicksearchitemidlbl2 = new javax.swing.JLabel();
        quicksearchitemidlbl14 = new javax.swing.JLabel();
        quicksearchitemidlbl20 = new javax.swing.JLabel();
        quicksearchitemidlbl22 = new javax.swing.JLabel();
        cate3 = new javax.swing.JTextField();
        cate2 = new javax.swing.JTextField();
        cate1 = new javax.swing.JTextField();
        quicksearchitemidlbl23 = new javax.swing.JLabel();
        quicksearchitemidlbl24 = new javax.swing.JLabel();
        cate4 = new javax.swing.JTextField();
        cate5 = new javax.swing.JTextField();
        Addstockbtn = new javax.swing.JButton();
        printstockpanel = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        printstocktabbed = new javax.swing.JTabbedPane();
        stockupdatepanel = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        stockupdatetable = new javax.swing.JTable();
        jPanel28 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        quicksearchitemidlbl50 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        quicksearchitemidlbl51 = new javax.swing.JLabel();
        updatestockqbtn = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        quicksearchitemidlbl52 = new javax.swing.JLabel();
        jPanel33 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        quicksearchitemidlbl53 = new javax.swing.JLabel();
        quicksearchitemidlbl54 = new javax.swing.JLabel();
        searchbillbtn = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();
        quicksearchitemidlbl55 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        quicksearchitemidlbl56 = new javax.swing.JLabel();
        updatestockqbtn1 = new javax.swing.JButton();
        printgrnpanel = new javax.swing.JPanel();
        grntabbed = new javax.swing.JTabbedPane();
        jPanel23 = new javax.swing.JPanel();
        printgrnbtn = new javax.swing.JButton();
        quicksearchitemidlbl17 = new javax.swing.JLabel();
        grnnumberfield = new javax.swing.JTextField();
        quicksearchitemidlbl18 = new javax.swing.JLabel();
        suppliergrnfield = new javax.swing.JTextField();
        dateingrn = new javax.swing.JTextField();
        quicksearchitemidlbl19 = new javax.swing.JLabel();
        quicksearchitemidlbl21 = new javax.swing.JLabel();
        billdateingrn = new javax.swing.JTextField();
        invoicenoingrn = new javax.swing.JTextField();
        invoiceamountingrn = new javax.swing.JTextField();
        quicksearchitemidlbl25 = new javax.swing.JLabel();
        quicksearchitemidlbl26 = new javax.swing.JLabel();
        quicksearchitemidlbl30 = new javax.swing.JLabel();
        productquantityingrn = new javax.swing.JTextField();
        productcodeingrn = new javax.swing.JTextField();
        quicksearchitemidlbl31 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        grncountingtable = new javax.swing.JTable();
        quicksearchitemidlbl47 = new javax.swing.JLabel();
        Productnamegrn = new javax.swing.JTextField();
        grnaddtotablebtn = new javax.swing.JButton();
        quicksearchitemidlbl48 = new javax.swing.JLabel();
        productamountingrn = new javax.swing.JTextField();
        quicksearchitemidlbl27 = new javax.swing.JLabel();
        grntotal = new javax.swing.JTextField();
        okbtngrn = new javax.swing.JButton();
        grnrecordspanel = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        grnrecordstable = new javax.swing.JTable();
        previewgrnrecord = new javax.swing.JButton();
        jLabel48 = new javax.swing.JLabel();
        grnrecordfield = new javax.swing.JTextField();
        findbtn1 = new javax.swing.JButton();
        grnrecordstab = new javax.swing.JTabbedPane();
        salespnl = new javax.swing.JPanel();
        poslbl = new javax.swing.JLabel();
        salerecordslbl = new javax.swing.JLabel();
        chartslbl = new javax.swing.JLabel();
        salescard = new javax.swing.JPanel();
        pospanel = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        printinvoicebtn = new javax.swing.JButton();
        poscancelbtn = new javax.swing.JButton();
        sellbtn = new javax.swing.JButton();
        jLabel59 = new javax.swing.JLabel();
        paymentfield = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        totalinpos = new javax.swing.JTextField();
        discountfield = new javax.swing.JTextField();
        jLabel60 = new javax.swing.JLabel();
        vatfield = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        nettotalfield = new javax.swing.JTextField();
        balancefield = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel62 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        jCheckBox3 = new javax.swing.JCheckBox();
        customerid = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        pospanelk = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        cartlisttable = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        stocktableinpostable = new javax.swing.JTable();
        jLabel53 = new javax.swing.JLabel();
        searchinposfield = new javax.swing.JTextField();
        searchcomboinpos = new javax.swing.JComboBox<>();
        jLabel54 = new javax.swing.JLabel();
        quantityinpos = new javax.swing.JTextField();
        additeminpos = new javax.swing.JButton();
        removeitemfromlistbtn = new javax.swing.JButton();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        Sellidfield = new javax.swing.JTextField();
        jLabel63 = new javax.swing.JLabel();
        Billokbtn = new javax.swing.JButton();
        invoice = new javax.swing.JPanel();
        invoicetab = new javax.swing.JTabbedPane();
        backtopos = new javax.swing.JButton();
        sellrecordspanel = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        salesrecordstable = new javax.swing.JTable();
        printinvoicebtninsellrecords = new javax.swing.JButton();
        jLabel47 = new javax.swing.JLabel();
        billbumberfieldinsellrecords = new javax.swing.JTextField();
        findbtn = new javax.swing.JButton();
        sellrecordstab = new javax.swing.JTabbedPane();
        chartspnl = new javax.swing.JPanel();
        chartstab = new javax.swing.JTabbedPane();
        employeepnl = new javax.swing.JPanel();
        manageemplbl = new javax.swing.JLabel();
        empreportlbl = new javax.swing.JLabel();
        empprofileslbl = new javax.swing.JLabel();
        profilereportslbl = new javax.swing.JLabel();
        payrolllbl = new javax.swing.JLabel();
        empseccard = new javax.swing.JPanel();
        mngemppnl = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        employeetable = new javax.swing.JTable();
        jPanel17 = new javax.swing.JPanel();
        deletebtnemp = new javax.swing.JButton();
        addbtnemp = new javax.swing.JButton();
        updatebtnemp = new javax.swing.JButton();
        refreshbtnemp = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox<>();
        updatebtnemp2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        searchbtnemp4 = new javax.swing.JButton();
        searchfiledemp0 = new javax.swing.JTextField();
        jPanel30 = new javax.swing.JPanel();
        empidfield = new javax.swing.JTextField();
        genderemp = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        namefieldemp = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        agefieldemp = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        positionemp = new javax.swing.JTextField();
        salaryemp = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        empreportpnl = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        employeereporttab = new javax.swing.JTabbedPane();
        empprofilepnl = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        empid2 = new javax.swing.JTextField();
        empgender2 = new javax.swing.JComboBox<>();
        jLabel37 = new javax.swing.JLabel();
        empname2 = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        empage2 = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        empposition2 = new javax.swing.JTextField();
        empsallery2 = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        emptable2 = new javax.swing.JTable();
        jPanel29 = new javax.swing.JPanel();
        searchbtnemp1 = new javax.swing.JButton();
        searchfiledemp1 = new javax.swing.JTextField();
        refreshbtnemp1 = new javax.swing.JButton();
        updatebtnemp5 = new javax.swing.JButton();
        empprofilereportpnl = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        empprofileprinttab = new javax.swing.JTabbedPane();
        payrollpnl = new javax.swing.JPanel();
        jPanel49 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel70 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jLabel75 = new javax.swing.JLabel();
        printpayrollsuitempsbtn = new javax.swing.JButton();
        jScrollPane18 = new javax.swing.JScrollPane();
        employeestopaytable = new javax.swing.JTable();
        jLabel90 = new javax.swing.JLabel();
        attendanceneedfrpay = new javax.swing.JTextField();
        jPanel50 = new javax.swing.JPanel();
        jLabel66 = new javax.swing.JLabel();
        paybtn = new javax.swing.JButton();
        printpayedreceiptbtn = new javax.swing.JButton();
        jTextField10 = new javax.swing.JTextField();
        twoinonereportforpayroll = new javax.swing.JTabbedPane();
        customerpnl = new javax.swing.JPanel();
        managecuslbl = new javax.swing.JLabel();
        cusreportlbl = new javax.swing.JLabel();
        cusprofileslbl = new javax.swing.JLabel();
        cusprofilereportslbl = new javax.swing.JLabel();
        membershipmnglbl = new javax.swing.JLabel();
        customercard = new javax.swing.JPanel();
        mngcustomerpnl = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jScrollPane14 = new javax.swing.JScrollPane();
        customertable = new javax.swing.JTable();
        jPanel32 = new javax.swing.JPanel();
        deletecustomerbtn = new javax.swing.JButton();
        addnewcustomerbtn = new javax.swing.JButton();
        updatecustomerbtn = new javax.swing.JButton();
        searchbtnemp2 = new javax.swing.JButton();
        customersearchfield0 = new javax.swing.JTextField();
        customerpnlrefresh = new javax.swing.JButton();
        customerfilterbtn = new javax.swing.JButton();
        customermembershipfiltercombo = new javax.swing.JComboBox<>();
        customerlistprintreportbtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jPanel34 = new javax.swing.JPanel();
        customeridfield = new javax.swing.JTextField();
        customergendercombo = new javax.swing.JComboBox<>();
        jLabel46 = new javax.swing.JLabel();
        customernamefield = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        customeragefield = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        membershipsholder1 = new javax.swing.JPanel();
        copperlogo1 = new javax.swing.JLabel();
        silverlogo1 = new javax.swing.JLabel();
        goldenlogo1 = new javax.swing.JLabel();
        platinumlogo1 = new javax.swing.JLabel();
        diamondlogo1 = new javax.swing.JLabel();
        cusreportpnl = new javax.swing.JPanel();
        jPanel36 = new javax.swing.JPanel();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        cusprofilepnl = new javax.swing.JPanel();
        jPanel37 = new javax.swing.JPanel();
        jPanel41 = new javax.swing.JPanel();
        customerid2 = new javax.swing.JTextField();
        cusgender2 = new javax.swing.JComboBox<>();
        jLabel64 = new javax.swing.JLabel();
        cusnamefield2 = new javax.swing.JTextField();
        jLabel71 = new javax.swing.JLabel();
        cusagefield2 = new javax.swing.JTextField();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        membershipsholder2 = new javax.swing.JPanel();
        copperlogo2 = new javax.swing.JLabel();
        silverlogo2 = new javax.swing.JLabel();
        goldenlogo2 = new javax.swing.JLabel();
        platinumlogo2 = new javax.swing.JLabel();
        diamondlogo2 = new javax.swing.JLabel();
        jScrollPane17 = new javax.swing.JScrollPane();
        customertabl2 = new javax.swing.JTable();
        jPanel39 = new javax.swing.JPanel();
        searchbtnemp3 = new javax.swing.JButton();
        searchcusfield2 = new javax.swing.JTextField();
        refreshbtnemp3 = new javax.swing.JButton();
        printcusprofile = new javax.swing.JButton();
        cusprofilereportpnl = new javax.swing.JPanel();
        jPanel40 = new javax.swing.JPanel();
        customerprofiletabbed = new javax.swing.JTabbedPane();
        membershipmng = new javax.swing.JPanel();
        jPanel42 = new javax.swing.JPanel();
        jLabel76 = new javax.swing.JLabel();
        membershipsholder = new javax.swing.JPanel();
        copperlogo = new javax.swing.JLabel();
        silverlogo = new javax.swing.JLabel();
        goldenlogo = new javax.swing.JLabel();
        platinumlogo = new javax.swing.JLabel();
        diamondlogo = new javax.swing.JLabel();
        membershipcombo = new javax.swing.JComboBox<>();
        jLabel78 = new javax.swing.JLabel();
        ordersneededfield = new javax.swing.JTextField();
        membershipalliinonebtn = new javax.swing.JButton();
        jLabel79 = new javax.swing.JLabel();
        membeshipdiscountfield = new javax.swing.JTextField();
        jPanel44 = new javax.swing.JPanel();
        jScrollPane16 = new javax.swing.JScrollPane();
        membershiptable = new javax.swing.JTable();
        jLabel77 = new javax.swing.JLabel();
        logspnl = new javax.swing.JPanel();
        logcardpnl = new javax.swing.JPanel();
        activitylogpanel = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        refreshinlogbtn = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        filteruserfield = new javax.swing.JComboBox<>();
        activityfieldcombo = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        Activitylogtable = new javax.swing.JTable();
        printlogpanel = new javax.swing.JPanel();
        reportholder = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        attendancereportpnl = new javax.swing.JPanel();
        jPanel54 = new javax.swing.JPanel();
        attendancetabb = new javax.swing.JTabbedPane();
        printloglbl = new javax.swing.JLabel();
        Activityloglbl = new javax.swing.JLabel();
        attendancereportlbl = new javax.swing.JLabel();
        settingspnl = new javax.swing.JPanel();
        accountssettingslbl = new javax.swing.JLabel();
        emaillbl = new javax.swing.JLabel();
        backuprestorelbl = new javax.swing.JLabel();
        aboutlbl = new javax.swing.JLabel();
        settingscard = new javax.swing.JPanel();
        genaral = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        stateofcurrentpasswordadmin2 = new javax.swing.JLabel();
        stateofcurrentpasswordadmin1 = new javax.swing.JLabel();
        stateofcurrentpasswordadmin = new javax.swing.JLabel();
        admincurrentpasswordinsettings = new javax.swing.JPasswordField();
        newadminpasswordfield = new javax.swing.JPasswordField();
        retypenewadminpasswordfield = new javax.swing.JPasswordField();
        jLabel26 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        passwrdchangebtn = new javax.swing.JButton();
        jPanel48 = new javax.swing.JPanel();
        newemppasswordfield = new javax.swing.JPasswordField();
        retypenewemppasswordfield3 = new javax.swing.JPasswordField();
        jLabel84 = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        jLabel87 = new javax.swing.JLabel();
        passwrdchangebtn3 = new javax.swing.JButton();
        jLabel88 = new javax.swing.JLabel();
        employeeusernamestateinsettings1 = new javax.swing.JLabel();
        employeenewpassstateinsettings = new javax.swing.JLabel();
        employeeretypepassstateinsettings = new javax.swing.JLabel();
        usernameforempid = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        Email = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane19 = new javax.swing.JScrollPane();
        emailrecetable = new javax.swing.JTable();
        jLabel69 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        emailfield = new javax.swing.JTextField();
        jLabel82 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        receemailfromtable = new javax.swing.JTextField();
        jLabel89 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPanel7 = new javax.swing.JPanel();
        fromfield = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        tofield = new javax.swing.JTextField();
        jLabel67 = new javax.swing.JLabel();
        restorelocationfield3 = new javax.swing.JTextField();
        jLabel68 = new javax.swing.JLabel();
        sendmailbtn = new javax.swing.JButton();
        jScrollPane15 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        browsepathinrestore2 = new javax.swing.JButton();
        attachpathmail = new javax.swing.JTextField();
        namefrattachment = new javax.swing.JTextField();
        backuprestorepanel = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        Backupbtn = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        backuplocationfield = new javax.swing.JTextField();
        browsepathinbackup = new javax.swing.JButton();
        stateofbackuplbl = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        restorebtn = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        restorelocationfield = new javax.swing.JTextField();
        browsepathinrestore = new javax.swing.JButton();
        stateofrestorelbl = new javax.swing.JLabel();
        about = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Green Food Stores");
        setBackground(new java.awt.Color(255, 255, 255));
        setName("login"); // NOI18N
        setUndecorated(true);
        setResizable(false);

        header.setBackground(new java.awt.Color(1, 17, 1));

        close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FRAMES/images/log-out-symbol.png"))); // NOI18N
        close.setToolTipText("");
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeMouseExited(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Green Food Stores");

        logoutsection.setBackground(new java.awt.Color(1, 17, 1));
        logoutsection.setLayout(new java.awt.CardLayout());

        sectionlogout.setBackground(new java.awt.Color(1, 17, 1));

        jLabel1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Logout Admin ?");

        jButton1.setBackground(new java.awt.Color(0, 204, 0));
        jButton1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("YES");
        jButton1.setContentAreaFilled(false);
        jButton1.setFocusPainted(false);
        jButton1.setOpaque(true);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 51, 0));
        jButton2.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("NO");
        jButton2.setContentAreaFilled(false);
        jButton2.setFocusPainted(false);
        jButton2.setOpaque(true);
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton2MouseExited(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sectionlogoutLayout = new javax.swing.GroupLayout(sectionlogout);
        sectionlogout.setLayout(sectionlogoutLayout);
        sectionlogoutLayout.setHorizontalGroup(
            sectionlogoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sectionlogoutLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap())
        );
        sectionlogoutLayout.setVerticalGroup(
            sectionlogoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sectionlogoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton1)
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
        );

        logoutsection.add(sectionlogout, "card3");

        black.setBackground(new java.awt.Color(1, 17, 1));

        jLabel2.setFont(new java.awt.Font("Microsoft JhengHei", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Admin");

        javax.swing.GroupLayout blackLayout = new javax.swing.GroupLayout(black);
        black.setLayout(blackLayout);
        blackLayout.setHorizontalGroup(
            blackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, blackLayout.createSequentialGroup()
                .addContainerGap(215, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );
        blackLayout.setVerticalGroup(
            blackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        logoutsection.add(black, "card3");

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logoutsection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(close)
                .addContainerGap())
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(close, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(logoutsection, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, headerLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        footer.setBackground(new java.awt.Color(1, 17, 1));

        jLabel7.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Vivex.ml");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        datelbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        datelbl.setForeground(new java.awt.Color(255, 255, 255));
        datelbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        datelbl.setName("timelbl"); // NOI18N

        timelbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        timelbl.setForeground(new java.awt.Color(255, 255, 255));
        timelbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timelbl.setName("timelbl"); // NOI18N

        salesday.setFont(new java.awt.Font("Tahoma", 0, 3)); // NOI18N
        salesday.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        currencyinvisible1.setBackground(new java.awt.Color(73, 145, 255));
        currencyinvisible1.setForeground(new java.awt.Color(73, 145, 255));
        currencyinvisible1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        salesday1.setForeground(new java.awt.Color(73, 145, 255));
        salesday1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout footerLayout = new javax.swing.GroupLayout(footer);
        footer.setLayout(footerLayout);
        footerLayout.setHorizontalGroup(
            footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(footerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(currencyinvisible1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(salesday1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(salesday, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(datelbl, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                    .addComponent(timelbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        footerLayout.setVerticalGroup(
            footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(footerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, footerLayout.createSequentialGroup()
                        .addGroup(footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(salesday, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(footerLayout.createSequentialGroup()
                                .addComponent(timelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(datelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, footerLayout.createSequentialGroup()
                        .addGroup(footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(currencyinvisible1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(salesday1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17))))
        );

        leftside.setBackground(new java.awt.Color(89, 163, 0));

        lefticon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lefticon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/greenfoodslight.png"))); // NOI18N
        lefticon.setName(""); // NOI18N

        javax.swing.GroupLayout leftsideLayout = new javax.swing.GroupLayout(leftside);
        leftside.setLayout(leftsideLayout);
        leftsideLayout.setHorizontalGroup(
            leftsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftsideLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lefticon)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        leftsideLayout.setVerticalGroup(
            leftsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lefticon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        middle.setBackground(new java.awt.Color(100, 183, 0));

        hometoggle.setBackground(new java.awt.Color(206, 252, 151));
        hometoggle.setFont(new java.awt.Font("Microsoft JhengHei", 0, 24)); // NOI18N
        hometoggle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hometoggle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/home-icon-silhouette (1).png"))); // NOI18N
        hometoggle.setOpaque(true);
        hometoggle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hometoggleMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hometoggleMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hometoggleMouseExited(evt);
            }
        });

        stockstoggle.setBackground(new java.awt.Color(111, 204, 0));
        stockstoggle.setFont(new java.awt.Font("Microsoft JhengHei", 0, 24)); // NOI18N
        stockstoggle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stockstoggle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/factory-stock-house (1).png"))); // NOI18N
        stockstoggle.setOpaque(true);
        stockstoggle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stockstoggleMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                stockstoggleMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                stockstoggleMouseExited(evt);
            }
        });

        salestoggle.setBackground(new java.awt.Color(111, 204, 0));
        salestoggle.setFont(new java.awt.Font("Microsoft JhengHei", 0, 24)); // NOI18N
        salestoggle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        salestoggle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/tag (1).png"))); // NOI18N
        salestoggle.setOpaque(true);
        salestoggle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salestoggleMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                salestoggleMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                salestoggleMouseExited(evt);
            }
        });

        employeetoggle.setBackground(new java.awt.Color(111, 204, 0));
        employeetoggle.setFont(new java.awt.Font("Microsoft JhengHei", 0, 24)); // NOI18N
        employeetoggle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        employeetoggle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/businessmen-having-a-meeting (1).png"))); // NOI18N
        employeetoggle.setOpaque(true);
        employeetoggle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeetoggleMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                employeetoggleMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                employeetoggleMouseExited(evt);
            }
        });

        customertoggle.setBackground(new java.awt.Color(111, 204, 0));
        customertoggle.setFont(new java.awt.Font("Microsoft JhengHei", 0, 24)); // NOI18N
        customertoggle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        customertoggle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/customer (1).png"))); // NOI18N
        customertoggle.setOpaque(true);
        customertoggle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customertoggleMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                customertoggleMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                customertoggleMouseExited(evt);
            }
        });

        logtoggle.setBackground(new java.awt.Color(111, 204, 0));
        logtoggle.setFont(new java.awt.Font("Microsoft JhengHei", 0, 24)); // NOI18N
        logtoggle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logtoggle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/log-file-format (1).png"))); // NOI18N
        logtoggle.setOpaque(true);
        logtoggle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logtoggleMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logtoggleMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logtoggleMouseExited(evt);
            }
        });

        settingstoggle.setBackground(new java.awt.Color(111, 204, 0));
        settingstoggle.setFont(new java.awt.Font("Microsoft JhengHei", 0, 24)); // NOI18N
        settingstoggle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        settingstoggle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/settings-gears (1).png"))); // NOI18N
        settingstoggle.setOpaque(true);
        settingstoggle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingstoggleMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                settingstoggleMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                settingstoggleMouseExited(evt);
            }
        });

        javax.swing.GroupLayout middleLayout = new javax.swing.GroupLayout(middle);
        middle.setLayout(middleLayout);
        middleLayout.setHorizontalGroup(
            middleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(hometoggle, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
            .addComponent(stockstoggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(salestoggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(employeetoggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(customertoggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(logtoggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(settingstoggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        middleLayout.setVerticalGroup(
            middleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(middleLayout.createSequentialGroup()
                .addComponent(hometoggle, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stockstoggle, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(salestoggle, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(employeetoggle, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(customertoggle, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logtoggle, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(settingstoggle, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        rightside.setBackground(new java.awt.Color(206, 252, 151));
        rightside.setLayout(new java.awt.CardLayout());

        homepnl.setBackground(new java.awt.Color(206, 252, 151));
        homepnl.setFocusTraversalPolicyProvider(true);

        lastactivities.setBackground(new java.awt.Color(100, 183, 0));

        jList1.setBackground(new java.awt.Color(0, 50, 0));
        jList1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jList1.setForeground(new java.awt.Color(255, 255, 255));
        jList1.setFocusable(false);
        jList1.setSelectionBackground(new java.awt.Color(204, 204, 204));
        jList1.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane9.setViewportView(jList1);

        jLabel8.setBackground(new java.awt.Color(100, 183, 0));
        jLabel8.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Last Activities");

        javax.swing.GroupLayout lastactivitiesLayout = new javax.swing.GroupLayout(lastactivities);
        lastactivities.setLayout(lastactivitiesLayout);
        lastactivitiesLayout.setHorizontalGroup(
            lastactivitiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        lastactivitiesLayout.setVerticalGroup(
            lastactivitiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lastactivitiesLayout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        lastactivities4.setBackground(new java.awt.Color(100, 183, 0));

        jLabel14.setBackground(new java.awt.Color(100, 183, 0));
        jLabel14.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Total Monthly Earning");

        jLabel11.setBackground(new java.awt.Color(0, 50, 0));
        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setOpaque(true);

        javax.swing.GroupLayout lastactivities4Layout = new javax.swing.GroupLayout(lastactivities4);
        lastactivities4.setLayout(lastactivities4Layout);
        lastactivities4Layout.setHorizontalGroup(
            lastactivities4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        lastactivities4Layout.setVerticalGroup(
            lastactivities4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lastactivities4Layout.createSequentialGroup()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        lastactivities5.setBackground(new java.awt.Color(100, 183, 0));

        jLabel15.setBackground(new java.awt.Color(100, 183, 0));
        jLabel15.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Total Monthly Sales");

        jLabel12.setBackground(new java.awt.Color(0, 50, 0));
        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setOpaque(true);

        javax.swing.GroupLayout lastactivities5Layout = new javax.swing.GroupLayout(lastactivities5);
        lastactivities5.setLayout(lastactivities5Layout);
        lastactivities5Layout.setHorizontalGroup(
            lastactivities5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
        );
        lastactivities5Layout.setVerticalGroup(
            lastactivities5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lastactivities5Layout.createSequentialGroup()
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        lastactivities6.setBackground(new java.awt.Color(100, 183, 0));

        jLabel16.setBackground(new java.awt.Color(100, 183, 0));
        jLabel16.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Today Sales Earning");

        todayearned.setBackground(new java.awt.Color(0, 50, 0));
        todayearned.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        todayearned.setForeground(new java.awt.Color(255, 255, 255));
        todayearned.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        todayearned.setOpaque(true);

        javax.swing.GroupLayout lastactivities6Layout = new javax.swing.GroupLayout(lastactivities6);
        lastactivities6.setLayout(lastactivities6Layout);
        lastactivities6Layout.setHorizontalGroup(
            lastactivities6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(todayearned, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
        );
        lastactivities6Layout.setVerticalGroup(
            lastactivities6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lastactivities6Layout.createSequentialGroup()
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(todayearned, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        lastactivities7.setBackground(new java.awt.Color(100, 183, 0));

        jLabel18.setBackground(new java.awt.Color(100, 183, 0));
        jLabel18.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Today Sales");

        todaysaleslbl.setBackground(new java.awt.Color(0, 50, 0));
        todaysaleslbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        todaysaleslbl.setForeground(new java.awt.Color(255, 255, 255));
        todaysaleslbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        todaysaleslbl.setOpaque(true);

        javax.swing.GroupLayout lastactivities7Layout = new javax.swing.GroupLayout(lastactivities7);
        lastactivities7.setLayout(lastactivities7Layout);
        lastactivities7Layout.setHorizontalGroup(
            lastactivities7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(todaysaleslbl, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        lastactivities7Layout.setVerticalGroup(
            lastactivities7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lastactivities7Layout.createSequentialGroup()
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(todaysaleslbl, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jPanel1.setBackground(new java.awt.Color(0, 50, 0));

        jLabel20.setBackground(new java.awt.Color(100, 183, 0));
        jLabel20.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Today Sales Details");
        jLabel20.setOpaque(true);

        todaysales.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        todaysales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bill Number", "Item Ids and Quantities", "Sale Earnings", "Date Time", "Billed By"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        todaysales.setGridColor(new java.awt.Color(255, 255, 255));
        todaysales.setOpaque(false);
        todaysales.setRowHeight(22);
        todaysales.setSelectionBackground(new java.awt.Color(100, 183, 0));
        jScrollPane5.setViewportView(todaysales);

        currencyinvisible.setBackground(new java.awt.Color(73, 145, 255));
        currencyinvisible.setForeground(new java.awt.Color(73, 145, 255));
        currencyinvisible.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        monthlysales.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        monthlysales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bill Number", "Item Ids and Quantities", "Sale Earnings", "Date Time", "Billed By"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        monthlysales.setGridColor(new java.awt.Color(255, 255, 255));
        monthlysales.setOpaque(false);
        monthlysales.setRowHeight(22);
        monthlysales.setSelectionBackground(new java.awt.Color(100, 183, 0));
        jScrollPane11.setViewportView(monthlysales);

        jLabel21.setBackground(new java.awt.Color(100, 183, 0));
        jLabel21.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Monthly Sales Details");
        jLabel21.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 739, Short.MAX_VALUE)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 739, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(153, 153, 153)
                    .addComponent(currencyinvisible, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(527, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(currencyinvisible, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(605, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout homepnlLayout = new javax.swing.GroupLayout(homepnl);
        homepnl.setLayout(homepnlLayout);
        homepnlLayout.setHorizontalGroup(
            homepnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homepnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(homepnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lastactivities5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastactivities7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastactivities6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastactivities, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastactivities4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        homepnlLayout.setVerticalGroup(
            homepnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homepnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(homepnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(homepnlLayout.createSequentialGroup()
                        .addComponent(lastactivities7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lastactivities6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lastactivities5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lastactivities4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lastactivities, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        rightside.add(homepnl, "card2");

        stockpnl.setBackground(new java.awt.Color(206, 252, 151));
        stockpnl.setFocusTraversalPolicyProvider(true);

        ViewStock.setBackground(new java.awt.Color(0, 50, 0));
        ViewStock.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        ViewStock.setForeground(new java.awt.Color(255, 255, 255));
        ViewStock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ViewStock.setText("View Stock");
        ViewStock.setOpaque(true);
        ViewStock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ViewStockMouseClicked(evt);
            }
        });

        AddStock.setBackground(new java.awt.Color(100, 183, 0));
        AddStock.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        AddStock.setForeground(new java.awt.Color(255, 255, 255));
        AddStock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AddStock.setText("Add New Stock");
        AddStock.setOpaque(true);
        AddStock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddStockMouseClicked(evt);
            }
        });

        stockupdate.setBackground(new java.awt.Color(100, 183, 0));
        stockupdate.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        stockupdate.setForeground(new java.awt.Color(255, 255, 255));
        stockupdate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stockupdate.setText("Stock Update");
        stockupdate.setOpaque(true);
        stockupdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stockupdateMouseClicked(evt);
            }
        });

        PrintStock.setBackground(new java.awt.Color(100, 183, 0));
        PrintStock.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        PrintStock.setForeground(new java.awt.Color(255, 255, 255));
        PrintStock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PrintStock.setText("Print Stock");
        PrintStock.setOpaque(true);
        PrintStock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PrintStockMouseClicked(evt);
            }
        });

        PrintGRN.setBackground(new java.awt.Color(100, 183, 0));
        PrintGRN.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        PrintGRN.setForeground(new java.awt.Color(255, 255, 255));
        PrintGRN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PrintGRN.setText("Print GRN");
        PrintGRN.setOpaque(true);
        PrintGRN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PrintGRNMouseClicked(evt);
            }
        });

        grnrecordslbl.setBackground(new java.awt.Color(100, 183, 0));
        grnrecordslbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        grnrecordslbl.setForeground(new java.awt.Color(255, 255, 255));
        grnrecordslbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        grnrecordslbl.setText("GRN Records");
        grnrecordslbl.setOpaque(true);
        grnrecordslbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grnrecordslblMouseClicked(evt);
            }
        });

        cardonstock.setBackground(new java.awt.Color(0, 50, 0));
        cardonstock.setLayout(new java.awt.CardLayout());

        Viewstockpanel.setBackground(new java.awt.Color(0, 50, 0));

        jPanel18.setBackground(new java.awt.Color(100, 183, 0));

        refresh.setBackground(new java.awt.Color(0, 50, 0));
        refresh.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        refresh.setForeground(new java.awt.Color(255, 255, 255));
        refresh.setText("Refresh");
        refresh.setContentAreaFilled(false);
        refresh.setFocusPainted(false);
        refresh.setOpaque(true);
        refresh.setPreferredSize(new java.awt.Dimension(140, 40));
        refresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                refreshMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                refreshMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                refreshMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                refreshMouseReleased(evt);
            }
        });
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        quciksearchviewstock.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quciksearchviewstock.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        quciksearchviewstock.setSelectionColor(new java.awt.Color(100, 183, 0));
        quciksearchviewstock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quciksearchviewstockActionPerformed(evt);
            }
        });
        quciksearchviewstock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                quciksearchviewstockKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quciksearchviewstockKeyReleased(evt);
            }
        });

        quicksearchitemidlbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl.setText("Quick search Item ID");

        detailmodebtn.setBackground(new java.awt.Color(0, 50, 0));
        detailmodebtn.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        detailmodebtn.setForeground(new java.awt.Color(255, 255, 255));
        detailmodebtn.setText("Edit Details");
        detailmodebtn.setContentAreaFilled(false);
        detailmodebtn.setFocusPainted(false);
        detailmodebtn.setOpaque(true);
        detailmodebtn.setPreferredSize(new java.awt.Dimension(140, 40));
        detailmodebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                detailmodebtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                detailmodebtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                detailmodebtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                detailmodebtnMouseReleased(evt);
            }
        });
        detailmodebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailmodebtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(quicksearchitemidlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(quciksearchviewstock)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(detailmodebtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(detailmodebtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(quciksearchviewstock, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(quicksearchitemidlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        holder.setBackground(new java.awt.Color(51, 153, 255));
        holder.setLayout(new java.awt.CardLayout());

        tableview.setBackground(new java.awt.Color(100, 183, 0));

        viewstocktable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Id", "Item Name", "Stock Number", "Item Description", "Stock Price", "Selling Price", "Barcode", "Supplier Id", "Brand", "Condition", "Warranty", "Quantity", "category1", "category2", "category3", "category4", "category5l"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        viewstocktable.setGridColor(new java.awt.Color(255, 255, 255));
        viewstocktable.setRowHeight(22);
        viewstocktable.setSelectionBackground(new java.awt.Color(100, 183, 0));
        viewstocktable.getTableHeader().setReorderingAllowed(false);
        viewstocktable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewstocktableMouseClicked(evt);
            }
        });
        viewstocktable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                viewstocktableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(viewstocktable);

        javax.swing.GroupLayout tableviewLayout = new javax.swing.GroupLayout(tableview);
        tableview.setLayout(tableviewLayout);
        tableviewLayout.setHorizontalGroup(
            tableviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tableviewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 961, Short.MAX_VALUE)
                .addContainerGap())
        );
        tableviewLayout.setVerticalGroup(
            tableviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tableviewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
                .addContainerGap())
        );

        holder.add(tableview, "card4");

        detailmode.setBackground(new java.awt.Color(100, 183, 0));

        jPanel35.setBackground(new java.awt.Color(100, 183, 0));

        itemidfield1.setEditable(false);
        itemidfield1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        itemidfield1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        itemidfield1.setSelectionColor(new java.awt.Color(100, 183, 0));
        itemidfield1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                itemidfield1FocusLost(evt);
            }
        });
        itemidfield1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemidfield1ActionPerformed(evt);
            }
        });

        quicksearchitemidlbl33.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl33.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl33.setText("Item ID");

        quicksearchitemidlbl34.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl34.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl34.setText("Item Name");

        itemnamefield1.setEditable(false);
        itemnamefield1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        itemnamefield1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        itemnamefield1.setSelectionColor(new java.awt.Color(100, 183, 0));
        itemnamefield1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                itemnamefield1FocusLost(evt);
            }
        });
        itemnamefield1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemnamefield1ActionPerformed(evt);
            }
        });

        quicksearchitemidlbl35.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl35.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl35.setText("Item Description");

        itemdescriptionfield1.setEditable(false);
        itemdescriptionfield1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        itemdescriptionfield1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        itemdescriptionfield1.setSelectionColor(new java.awt.Color(100, 183, 0));
        itemdescriptionfield1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                itemdescriptionfield1FocusLost(evt);
            }
        });
        itemdescriptionfield1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemdescriptionfield1ActionPerformed(evt);
            }
        });

        stocknumberfield1.setEditable(false);
        stocknumberfield1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        stocknumberfield1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        stocknumberfield1.setSelectionColor(new java.awt.Color(100, 183, 0));
        stocknumberfield1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                stocknumberfield1FocusLost(evt);
            }
        });
        stocknumberfield1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stocknumberfield1ActionPerformed(evt);
            }
        });

        quicksearchitemidlbl36.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl36.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl36.setText("Stock Number");

        sellingpricefield1.setEditable(false);
        sellingpricefield1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        sellingpricefield1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        sellingpricefield1.setSelectionColor(new java.awt.Color(100, 183, 0));
        sellingpricefield1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                sellingpricefield1FocusLost(evt);
            }
        });
        sellingpricefield1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellingpricefield1ActionPerformed(evt);
            }
        });

        quicksearchitemidlbl37.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl37.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl37.setText("Selling Price");

        stockpricefield1.setEditable(false);
        stockpricefield1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        stockpricefield1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        stockpricefield1.setSelectionColor(new java.awt.Color(100, 183, 0));
        stockpricefield1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                stockpricefield1FocusLost(evt);
            }
        });
        stockpricefield1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockpricefield1ActionPerformed(evt);
            }
        });

        quicksearchitemidlbl38.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl38.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl38.setText("Stock Price");

        quicksearchitemidlbl39.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl39.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl39.setText("Barcode");

        barcodefield1.setEditable(false);
        barcodefield1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        barcodefield1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        barcodefield1.setSelectionColor(new java.awt.Color(100, 183, 0));
        barcodefield1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                barcodefield1FocusLost(evt);
            }
        });
        barcodefield1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barcodefield1ActionPerformed(evt);
            }
        });

        quicksearchitemidlbl40.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl40.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl40.setText("Supplier Id");

        supplieridfield1.setEditable(false);
        supplieridfield1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        supplieridfield1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        supplieridfield1.setSelectionColor(new java.awt.Color(100, 183, 0));
        supplieridfield1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                supplieridfield1FocusLost(evt);
            }
        });
        supplieridfield1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplieridfield1ActionPerformed(evt);
            }
        });

        brandfield1.setEditable(false);
        brandfield1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        brandfield1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        brandfield1.setSelectionColor(new java.awt.Color(100, 183, 0));
        brandfield1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                brandfield1FocusLost(evt);
            }
        });
        brandfield1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brandfield1ActionPerformed(evt);
            }
        });

        quicksearchitemidlbl41.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl41.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl41.setText("Brand");

        quicksearchitemidlbl42.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl42.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl42.setText("Condition");

        conditionfield1.setEditable(false);
        conditionfield1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        conditionfield1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        conditionfield1.setSelectionColor(new java.awt.Color(100, 183, 0));
        conditionfield1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                conditionfield1FocusLost(evt);
            }
        });
        conditionfield1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conditionfield1ActionPerformed(evt);
            }
        });

        quicksearchitemidlbl43.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N

        quicksearchitemidlbl44.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl44.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl44.setText("Warranty");

        warrantyfield1.setEditable(false);
        warrantyfield1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        warrantyfield1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        warrantyfield1.setSelectionColor(new java.awt.Color(100, 183, 0));
        warrantyfield1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                warrantyfield1FocusLost(evt);
            }
        });
        warrantyfield1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                warrantyfield1ActionPerformed(evt);
            }
        });

        quicksearchitemidlbl45.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl45.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl45.setText("Quantity");

        quantityfield1.setEditable(false);
        quantityfield1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quantityfield1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        quantityfield1.setSelectionColor(new java.awt.Color(100, 183, 0));
        quantityfield1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                quantityfield1FocusLost(evt);
            }
        });
        quantityfield1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityfield1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(quicksearchitemidlbl37)
                    .addComponent(quicksearchitemidlbl38)
                    .addComponent(quicksearchitemidlbl35)
                    .addComponent(quicksearchitemidlbl36)
                    .addComponent(quicksearchitemidlbl34)
                    .addComponent(quicksearchitemidlbl33))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itemidfield1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemnamefield1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stocknumberfield1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemdescriptionfield1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stockpricefield1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sellingpricefield1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(quicksearchitemidlbl43, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel35Layout.createSequentialGroup()
                        .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quicksearchitemidlbl45, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quicksearchitemidlbl44)
                            .addComponent(quicksearchitemidlbl42)
                            .addComponent(quicksearchitemidlbl41)
                            .addComponent(quicksearchitemidlbl40)
                            .addComponent(quicksearchitemidlbl39))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(warrantyfield1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(conditionfield1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(brandfield1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(supplieridfield1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(barcodefield1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quantityfield1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addComponent(quicksearchitemidlbl43)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(barcodefield1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quicksearchitemidlbl39)
                    .addComponent(itemidfield1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quicksearchitemidlbl33))
                .addGap(8, 8, 8)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(supplieridfield1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quicksearchitemidlbl40)
                    .addComponent(itemnamefield1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quicksearchitemidlbl34))
                .addGap(8, 8, 8)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(brandfield1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quicksearchitemidlbl41)
                    .addComponent(stocknumberfield1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quicksearchitemidlbl36))
                .addGap(8, 8, 8)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(quicksearchitemidlbl42)
                    .addComponent(conditionfield1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemdescriptionfield1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quicksearchitemidlbl35))
                .addGap(8, 8, 8)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(quicksearchitemidlbl44)
                    .addComponent(warrantyfield1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stockpricefield1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quicksearchitemidlbl38))
                .addGap(8, 8, 8)
                .addGroup(jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(quicksearchitemidlbl45)
                    .addComponent(quantityfield1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sellingpricefield1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quicksearchitemidlbl37))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        quicksearchitemidlbl32.setFont(new java.awt.Font("Microsoft JhengHei", 0, 18)); // NOI18N
        quicksearchitemidlbl32.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl32.setText("Detail Mode");

        deletethisid.setBackground(new java.awt.Color(0, 50, 0));
        deletethisid.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        deletethisid.setForeground(new java.awt.Color(255, 255, 255));
        deletethisid.setText("Delete Item");
        deletethisid.setContentAreaFilled(false);
        deletethisid.setFocusPainted(false);
        deletethisid.setOpaque(true);
        deletethisid.setPreferredSize(new java.awt.Dimension(140, 40));
        deletethisid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deletethisidMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deletethisidMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                deletethisidMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                deletethisidMouseReleased(evt);
            }
        });
        deletethisid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletethisidActionPerformed(evt);
            }
        });

        jPanel2.setLayout(new java.awt.CardLayout());

        ok.setBackground(new java.awt.Color(0, 50, 0));
        ok.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        ok.setForeground(new java.awt.Color(255, 255, 255));
        ok.setText("Ok");
        ok.setContentAreaFilled(false);
        ok.setFocusPainted(false);
        ok.setOpaque(true);
        ok.setPreferredSize(new java.awt.Dimension(140, 40));
        ok.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                okMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                okMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                okMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                okMouseReleased(evt);
            }
        });
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });
        jPanel2.add(ok, "card2");

        editdetailmodebtn.setBackground(new java.awt.Color(0, 50, 0));
        editdetailmodebtn.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        editdetailmodebtn.setForeground(new java.awt.Color(255, 255, 255));
        editdetailmodebtn.setText("Edit Details");
        editdetailmodebtn.setContentAreaFilled(false);
        editdetailmodebtn.setFocusPainted(false);
        editdetailmodebtn.setOpaque(true);
        editdetailmodebtn.setPreferredSize(new java.awt.Dimension(140, 40));
        editdetailmodebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                editdetailmodebtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                editdetailmodebtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                editdetailmodebtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                editdetailmodebtnMouseReleased(evt);
            }
        });
        editdetailmodebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editdetailmodebtnActionPerformed(evt);
            }
        });
        jPanel2.add(editdetailmodebtn, "card2");

        jComboBox1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Reason to Edit", "Stock Price Change", "Selling Price Change", "Item Description Change", "Condition of Item Change", "Barcode Change", "Supplier ID Change", "Brand Change", "Warranty Change" }));

        quicksearchitemidlbl49.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl49.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl49.setText("Select");

        javax.swing.GroupLayout detailmodeLayout = new javax.swing.GroupLayout(detailmode);
        detailmode.setLayout(detailmodeLayout);
        detailmodeLayout.setHorizontalGroup(
            detailmodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(detailmodeLayout.createSequentialGroup()
                .addGroup(detailmodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(detailmodeLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(detailmodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(detailmodeLayout.createSequentialGroup()
                                .addComponent(quicksearchitemidlbl32)
                                .addGap(714, 841, Short.MAX_VALUE))
                            .addGroup(detailmodeLayout.createSequentialGroup()
                                .addComponent(quicksearchitemidlbl49, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(detailmodeLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deletethisid, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        detailmodeLayout.setVerticalGroup(
            detailmodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailmodeLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(quicksearchitemidlbl32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(detailmodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(detailmodeLayout.createSequentialGroup()
                        .addGroup(detailmodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quicksearchitemidlbl49)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(deletethisid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        holder.add(detailmode, "card3");

        javax.swing.GroupLayout ViewstockpanelLayout = new javax.swing.GroupLayout(Viewstockpanel);
        Viewstockpanel.setLayout(ViewstockpanelLayout);
        ViewstockpanelLayout.setHorizontalGroup(
            ViewstockpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewstockpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ViewstockpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(holder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        ViewstockpanelLayout.setVerticalGroup(
            ViewstockpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewstockpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(holder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        cardonstock.add(Viewstockpanel, "card2");

        Addstockpanel.setBackground(new java.awt.Color(0, 50, 0));

        jPanel4.setBackground(new java.awt.Color(100, 183, 0));

        quicksearchitemidlbl1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 18)); // NOI18N
        quicksearchitemidlbl1.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl1.setText("Add New stock Item");

        itemidfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        itemidfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        itemidfield.setSelectionColor(new java.awt.Color(100, 183, 0));
        itemidfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemidfieldActionPerformed(evt);
            }
        });

        itemnamefield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        itemnamefield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        itemnamefield.setSelectionColor(new java.awt.Color(100, 183, 0));
        itemnamefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemnamefieldActionPerformed(evt);
            }
        });

        stocknumberfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        stocknumberfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        stocknumberfield.setSelectionColor(new java.awt.Color(100, 183, 0));
        stocknumberfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stocknumberfieldActionPerformed(evt);
            }
        });

        itemdescriptionfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        itemdescriptionfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        itemdescriptionfield.setSelectionColor(new java.awt.Color(100, 183, 0));
        itemdescriptionfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemdescriptionfieldActionPerformed(evt);
            }
        });

        stockpricefield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        stockpricefield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        stockpricefield.setSelectionColor(new java.awt.Color(100, 183, 0));
        stockpricefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockpricefieldActionPerformed(evt);
            }
        });
        stockpricefield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                stockpricefieldKeyTyped(evt);
            }
        });

        sellingpricefield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        sellingpricefield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        sellingpricefield.setSelectionColor(new java.awt.Color(100, 183, 0));
        sellingpricefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellingpricefieldActionPerformed(evt);
            }
        });
        sellingpricefield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sellingpricefieldKeyTyped(evt);
            }
        });

        quicksearchitemidlbl4.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl4.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl4.setText("Item ID");

        quicksearchitemidlbl5.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl5.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl5.setText("Item Name");

        quicksearchitemidlbl7.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl7.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl7.setText("Stock Number");

        quicksearchitemidlbl6.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl6.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl6.setText("Item Description");

        quicksearchitemidlbl9.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl9.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl9.setText("Stock Price");

        quicksearchitemidlbl8.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl8.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl8.setText("Selling Price");

        quicksearchitemidlbl10.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl10.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl10.setText("Barcode");

        quicksearchitemidlbl11.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl11.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl11.setText("Supplier Id");

        quicksearchitemidlbl12.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl12.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl12.setText("Brand");

        quicksearchitemidlbl13.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl13.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl13.setText("Condition");

        quicksearchitemidlbl15.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl15.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl15.setText("Warranty");

        quicksearchitemidlbl16.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl16.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl16.setText("Quantity");

        quantityfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quantityfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        quantityfield.setSelectionColor(new java.awt.Color(100, 183, 0));
        quantityfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityfieldActionPerformed(evt);
            }
        });
        quantityfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                quantityfieldKeyTyped(evt);
            }
        });

        warrantyfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        warrantyfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        warrantyfield.setSelectionColor(new java.awt.Color(100, 183, 0));
        warrantyfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                warrantyfieldActionPerformed(evt);
            }
        });

        conditionfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        conditionfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        conditionfield.setSelectionColor(new java.awt.Color(100, 183, 0));
        conditionfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conditionfieldActionPerformed(evt);
            }
        });

        brandfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        brandfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        brandfield.setSelectionColor(new java.awt.Color(100, 183, 0));
        brandfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brandfieldActionPerformed(evt);
            }
        });

        supplieridfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        supplieridfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        supplieridfield.setSelectionColor(new java.awt.Color(100, 183, 0));
        supplieridfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplieridfieldActionPerformed(evt);
            }
        });

        barcodefield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        barcodefield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        barcodefield.setSelectionColor(new java.awt.Color(100, 183, 0));
        barcodefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barcodefieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(quicksearchitemidlbl1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quicksearchitemidlbl9)
                            .addComponent(quicksearchitemidlbl8)
                            .addComponent(quicksearchitemidlbl6)
                            .addComponent(quicksearchitemidlbl7)
                            .addComponent(quicksearchitemidlbl4)
                            .addComponent(quicksearchitemidlbl5))
                        .addGap(102, 102, 102)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itemidfield, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itemnamefield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stocknumberfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itemdescriptionfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sellingpricefield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stockpricefield, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(itemidfieldstate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(itemnamefieldstate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(stocknumberfieldstate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(itemdescriptionfieldstate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(stockpricefieldstate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sellingpricefieldstate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quicksearchitemidlbl16)
                            .addComponent(quicksearchitemidlbl15)
                            .addComponent(quicksearchitemidlbl13)
                            .addComponent(quicksearchitemidlbl12)
                            .addComponent(quicksearchitemidlbl11)
                            .addComponent(quicksearchitemidlbl10))
                        .addGap(81, 81, 81)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(warrantyfield, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(conditionfield, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(brandfield, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(supplieridfield, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(barcodefield, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(quantityfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(barcodefieldstate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(supplieridfieldstate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(brandfieldstate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(conditionfieldstate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(warrantyfieldstate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(quantityfieldstate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(quicksearchitemidlbl1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(quicksearchitemidlbl4)
                    .addComponent(itemidfield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemidfieldstate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quicksearchitemidlbl10, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(barcodefield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(barcodefieldstate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(quicksearchitemidlbl5)
                    .addComponent(itemnamefield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemnamefieldstate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quicksearchitemidlbl11)
                    .addComponent(supplieridfield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(supplieridfieldstate, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(quicksearchitemidlbl7)
                    .addComponent(stocknumberfield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stocknumberfieldstate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quicksearchitemidlbl12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(brandfield, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(brandfieldstate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(7, 7, 7)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(quicksearchitemidlbl6)
                    .addComponent(itemdescriptionfield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemdescriptionfieldstate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quicksearchitemidlbl13, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(conditionfield, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(conditionfieldstate, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(quicksearchitemidlbl9)
                    .addComponent(stockpricefield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stockpricefieldstate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quicksearchitemidlbl15)
                    .addComponent(warrantyfield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(warrantyfieldstate, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(quicksearchitemidlbl8)
                    .addComponent(sellingpricefield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sellingpricefieldstate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quicksearchitemidlbl16)
                    .addComponent(quantityfield, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantityfieldstate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        jPanel43.setBackground(new java.awt.Color(100, 183, 0));

        quicksearchitemidlbl2.setFont(new java.awt.Font("Microsoft JhengHei", 0, 16)); // NOI18N
        quicksearchitemidlbl2.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl2.setText("Set Categories");

        quicksearchitemidlbl14.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl14.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl14.setText("Category 1");

        quicksearchitemidlbl20.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl20.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl20.setText("Category 2");

        quicksearchitemidlbl22.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl22.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl22.setText("Category 3");

        cate3.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        cate3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cate3.setSelectionColor(new java.awt.Color(100, 183, 0));
        cate3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cate3ActionPerformed(evt);
            }
        });
        cate3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cate3KeyTyped(evt);
            }
        });

        cate2.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        cate2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cate2.setSelectionColor(new java.awt.Color(100, 183, 0));
        cate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cate2ActionPerformed(evt);
            }
        });
        cate2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cate2KeyTyped(evt);
            }
        });

        cate1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        cate1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cate1.setSelectionColor(new java.awt.Color(100, 183, 0));
        cate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cate1ActionPerformed(evt);
            }
        });
        cate1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cate1KeyTyped(evt);
            }
        });

        quicksearchitemidlbl23.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl23.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl23.setText("Category 4");

        quicksearchitemidlbl24.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl24.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl24.setText("Category 5");

        cate4.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        cate4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cate4.setSelectionColor(new java.awt.Color(100, 183, 0));
        cate4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cate4ActionPerformed(evt);
            }
        });
        cate4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cate4KeyTyped(evt);
            }
        });

        cate5.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        cate5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        cate5.setSelectionColor(new java.awt.Color(100, 183, 0));
        cate5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cate5ActionPerformed(evt);
            }
        });
        cate5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cate5KeyTyped(evt);
            }
        });

        Addstockbtn.setBackground(new java.awt.Color(0, 50, 0));
        Addstockbtn.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        Addstockbtn.setForeground(new java.awt.Color(255, 255, 255));
        Addstockbtn.setText("Add");
        Addstockbtn.setContentAreaFilled(false);
        Addstockbtn.setFocusPainted(false);
        Addstockbtn.setOpaque(true);
        Addstockbtn.setPreferredSize(new java.awt.Dimension(140, 40));
        Addstockbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AddstockbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AddstockbtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                AddstockbtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                AddstockbtnMouseReleased(evt);
            }
        });
        Addstockbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddstockbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel43Layout = new javax.swing.GroupLayout(jPanel43);
        jPanel43.setLayout(jPanel43Layout);
        jPanel43Layout.setHorizontalGroup(
            jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel43Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel43Layout.createSequentialGroup()
                        .addComponent(quicksearchitemidlbl2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel43Layout.createSequentialGroup()
                        .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cate2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel43Layout.createSequentialGroup()
                                .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(quicksearchitemidlbl14)
                                    .addComponent(quicksearchitemidlbl20)
                                    .addComponent(quicksearchitemidlbl22))
                                .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel43Layout.createSequentialGroup()
                                        .addGap(142, 142, 142)
                                        .addComponent(cate1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel43Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cate3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(218, 218, 218)
                        .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(quicksearchitemidlbl23)
                            .addComponent(quicksearchitemidlbl24))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cate5, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cate4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54))))
            .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel43Layout.createSequentialGroup()
                    .addGap(0, 27, Short.MAX_VALUE)
                    .addComponent(Addstockbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(27, 27, 27)))
        );
        jPanel43Layout.setVerticalGroup(
            jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel43Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(quicksearchitemidlbl2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel43Layout.createSequentialGroup()
                        .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cate1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quicksearchitemidlbl14)
                            .addComponent(quicksearchitemidlbl23))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cate2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quicksearchitemidlbl20)
                            .addComponent(quicksearchitemidlbl24))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cate3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quicksearchitemidlbl22)))
                    .addGroup(jPanel43Layout.createSequentialGroup()
                        .addComponent(cate4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cate5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(103, Short.MAX_VALUE))
            .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel43Layout.createSequentialGroup()
                    .addGap(170, 170, 170)
                    .addComponent(Addstockbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(55, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout AddstockpanelLayout = new javax.swing.GroupLayout(Addstockpanel);
        Addstockpanel.setLayout(AddstockpanelLayout);
        AddstockpanelLayout.setHorizontalGroup(
            AddstockpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddstockpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AddstockpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        AddstockpanelLayout.setVerticalGroup(
            AddstockpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddstockpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        cardonstock.add(Addstockpanel, "card3");

        printstockpanel.setBackground(new java.awt.Color(0, 50, 0));

        jPanel25.setBackground(new java.awt.Color(100, 183, 0));

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(printstocktabbed, javax.swing.GroupLayout.DEFAULT_SIZE, 961, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(printstocktabbed, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout printstockpanelLayout = new javax.swing.GroupLayout(printstockpanel);
        printstockpanel.setLayout(printstockpanelLayout);
        printstockpanelLayout.setHorizontalGroup(
            printstockpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, printstockpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        printstockpanelLayout.setVerticalGroup(
            printstockpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, printstockpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        cardonstock.add(printstockpanel, "card4");

        stockupdatepanel.setBackground(new java.awt.Color(0, 50, 0));

        jPanel13.setBackground(new java.awt.Color(100, 183, 0));

        stockupdatetable.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        stockupdatetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Id", "Item Name", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        stockupdatetable.setRowHeight(22);
        stockupdatetable.setSelectionBackground(new java.awt.Color(100, 183, 0));
        stockupdatetable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stockupdatetableMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(stockupdatetable);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane10)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel28.setBackground(new java.awt.Color(100, 183, 0));

        jLabel3.setFont(new java.awt.Font("Microsoft JhengHei", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Update Quantity of Items");

        quicksearchitemidlbl50.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl50.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl50.setText("Select Reason");

        jComboBox2.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Supplier Stock", "Customer Returns" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        quicksearchitemidlbl51.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl51.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl51.setText("Quantity");

        updatestockqbtn.setBackground(new java.awt.Color(0, 50, 0));
        updatestockqbtn.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        updatestockqbtn.setForeground(new java.awt.Color(255, 255, 255));
        updatestockqbtn.setText("Update");
        updatestockqbtn.setContentAreaFilled(false);
        updatestockqbtn.setFocusPainted(false);
        updatestockqbtn.setOpaque(true);
        updatestockqbtn.setPreferredSize(new java.awt.Dimension(140, 40));
        updatestockqbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updatestockqbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updatestockqbtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                updatestockqbtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                updatestockqbtnMouseReleased(evt);
            }
        });
        updatestockqbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatestockqbtnActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jTextField1.setSelectionColor(new java.awt.Color(100, 183, 0));

        jTextField2.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jTextField2.setSelectionColor(new java.awt.Color(100, 183, 0));
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        quicksearchitemidlbl52.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl52.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl52.setText("Item Id");

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(updatestockqbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(quicksearchitemidlbl51, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(quicksearchitemidlbl50, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(quicksearchitemidlbl52, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField2)
                            .addComponent(jTextField1)
                            .addComponent(jComboBox2, 0, 259, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quicksearchitemidlbl50))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(quicksearchitemidlbl52)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(quicksearchitemidlbl51)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(updatestockqbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        jPanel33.setBackground(new java.awt.Color(100, 183, 0));

        jLabel9.setFont(new java.awt.Font("Microsoft JhengHei", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Bill Search");

        jTextField3.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jTextField3.setEnabled(false);
        jTextField3.setSelectionColor(new java.awt.Color(100, 183, 0));
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField3KeyReleased(evt);
            }
        });

        jTextField4.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jTextField4.setEnabled(false);
        jTextField4.setSelectionColor(new java.awt.Color(100, 183, 0));

        quicksearchitemidlbl53.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl53.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl53.setText("Quantity in invoice");

        quicksearchitemidlbl54.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl54.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl54.setText("Search Invoice Id");

        searchbillbtn.setBackground(new java.awt.Color(0, 50, 0));
        searchbillbtn.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        searchbillbtn.setForeground(new java.awt.Color(255, 255, 255));
        searchbillbtn.setText("Search");
        searchbillbtn.setContentAreaFilled(false);
        searchbillbtn.setFocusPainted(false);
        searchbillbtn.setOpaque(true);
        searchbillbtn.setPreferredSize(new java.awt.Dimension(140, 40));
        searchbillbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchbillbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                searchbillbtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                searchbillbtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                searchbillbtnMouseReleased(evt);
            }
        });
        searchbillbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbillbtnActionPerformed(evt);
            }
        });

        jTextField5.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jTextField5.setEnabled(false);
        jTextField5.setSelectionColor(new java.awt.Color(100, 183, 0));
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        quicksearchitemidlbl55.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl55.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl55.setText("Return Quantity");

        jTextField6.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jTextField6.setEnabled(false);
        jTextField6.setSelectionColor(new java.awt.Color(100, 183, 0));

        quicksearchitemidlbl56.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl56.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl56.setText("Item Id");

        updatestockqbtn1.setBackground(new java.awt.Color(0, 50, 0));
        updatestockqbtn1.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        updatestockqbtn1.setForeground(new java.awt.Color(255, 255, 255));
        updatestockqbtn1.setText("Return to Stock");
        updatestockqbtn1.setContentAreaFilled(false);
        updatestockqbtn1.setEnabled(false);
        updatestockqbtn1.setFocusPainted(false);
        updatestockqbtn1.setOpaque(true);
        updatestockqbtn1.setPreferredSize(new java.awt.Dimension(140, 40));
        updatestockqbtn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updatestockqbtn1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updatestockqbtn1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                updatestockqbtn1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                updatestockqbtn1MouseReleased(evt);
            }
        });
        updatestockqbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatestockqbtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel33Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(updatestockqbtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel33Layout.createSequentialGroup()
                            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(quicksearchitemidlbl54, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(quicksearchitemidlbl56)
                                .addComponent(jLabel9))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(0, 0, 0)
                            .addComponent(searchbillbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel33Layout.createSequentialGroup()
                            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(quicksearchitemidlbl53)
                                .addComponent(quicksearchitemidlbl55))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                                .addComponent(jTextField5)))))
                .addContainerGap())
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(11, 11, 11)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel33Layout.createSequentialGroup()
                        .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(quicksearchitemidlbl54, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel33Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(quicksearchitemidlbl56))
                            .addGroup(jPanel33Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(searchbillbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quicksearchitemidlbl53))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(quicksearchitemidlbl55)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updatestockqbtn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout stockupdatepanelLayout = new javax.swing.GroupLayout(stockupdatepanel);
        stockupdatepanel.setLayout(stockupdatepanelLayout);
        stockupdatepanelLayout.setHorizontalGroup(
            stockupdatepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stockupdatepanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(stockupdatepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(stockupdatepanelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        stockupdatepanelLayout.setVerticalGroup(
            stockupdatepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stockupdatepanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(stockupdatepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, 243, Short.MAX_VALUE))
                .addContainerGap())
        );

        cardonstock.add(stockupdatepanel, "card5");

        printgrnpanel.setBackground(new java.awt.Color(0, 50, 0));

        grntabbed.setBackground(new java.awt.Color(100, 183, 0));

        jPanel23.setBackground(new java.awt.Color(100, 183, 0));

        printgrnbtn.setBackground(new java.awt.Color(0, 50, 0));
        printgrnbtn.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        printgrnbtn.setForeground(new java.awt.Color(255, 255, 255));
        printgrnbtn.setText("Preview");
        printgrnbtn.setContentAreaFilled(false);
        printgrnbtn.setEnabled(false);
        printgrnbtn.setFocusPainted(false);
        printgrnbtn.setOpaque(true);
        printgrnbtn.setPreferredSize(new java.awt.Dimension(140, 40));
        printgrnbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                printgrnbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                printgrnbtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                printgrnbtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                printgrnbtnMouseReleased(evt);
            }
        });
        printgrnbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printgrnbtnActionPerformed(evt);
            }
        });

        quicksearchitemidlbl17.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl17.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl17.setText("GRN Number");

        grnnumberfield.setEditable(false);
        grnnumberfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        grnnumberfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        grnnumberfield.setSelectionColor(new java.awt.Color(100, 183, 0));

        quicksearchitemidlbl18.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl18.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl18.setText("Supplier");

        suppliergrnfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        suppliergrnfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        suppliergrnfield.setSelectionColor(new java.awt.Color(100, 183, 0));
        suppliergrnfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suppliergrnfieldActionPerformed(evt);
            }
        });

        dateingrn.setEditable(false);
        dateingrn.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        dateingrn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        dateingrn.setSelectionColor(new java.awt.Color(100, 183, 0));

        quicksearchitemidlbl19.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl19.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl19.setText("Date");

        quicksearchitemidlbl21.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl21.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl21.setText("Invoice Date");

        billdateingrn.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        billdateingrn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        billdateingrn.setSelectionColor(new java.awt.Color(100, 183, 0));
        billdateingrn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billdateingrnActionPerformed(evt);
            }
        });

        invoicenoingrn.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        invoicenoingrn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        invoicenoingrn.setSelectionColor(new java.awt.Color(100, 183, 0));
        invoicenoingrn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoicenoingrnActionPerformed(evt);
            }
        });

        invoiceamountingrn.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        invoiceamountingrn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        invoiceamountingrn.setSelectionColor(new java.awt.Color(100, 183, 0));
        invoiceamountingrn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoiceamountingrnActionPerformed(evt);
            }
        });

        quicksearchitemidlbl25.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl25.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl25.setText("Invoice Amount");

        quicksearchitemidlbl26.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl26.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl26.setText("Invoice No");

        quicksearchitemidlbl30.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl30.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl30.setText("Product Quantity");

        productquantityingrn.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        productquantityingrn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        productquantityingrn.setSelectionColor(new java.awt.Color(100, 183, 0));
        productquantityingrn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productquantityingrnActionPerformed(evt);
            }
        });

        productcodeingrn.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        productcodeingrn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        productcodeingrn.setSelectionColor(new java.awt.Color(100, 183, 0));
        productcodeingrn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productcodeingrnActionPerformed(evt);
            }
        });

        quicksearchitemidlbl31.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl31.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl31.setText("Product Code");

        grncountingtable.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        grncountingtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Index", "Product Code", "Product Name", "Product Quantity", "Per Product Amount", "Total Amount"
            }
        ));
        grncountingtable.setGridColor(new java.awt.Color(255, 255, 255));
        grncountingtable.setRowHeight(22);
        grncountingtable.setSelectionBackground(new java.awt.Color(100, 183, 0));
        jScrollPane3.setViewportView(grncountingtable);

        quicksearchitemidlbl47.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl47.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl47.setText("Product Name");

        Productnamegrn.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        Productnamegrn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        Productnamegrn.setSelectionColor(new java.awt.Color(100, 183, 0));
        Productnamegrn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductnamegrnActionPerformed(evt);
            }
        });

        grnaddtotablebtn.setBackground(new java.awt.Color(0, 50, 0));
        grnaddtotablebtn.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        grnaddtotablebtn.setForeground(new java.awt.Color(255, 255, 255));
        grnaddtotablebtn.setText("Add to list");
        grnaddtotablebtn.setContentAreaFilled(false);
        grnaddtotablebtn.setFocusPainted(false);
        grnaddtotablebtn.setOpaque(true);
        grnaddtotablebtn.setPreferredSize(new java.awt.Dimension(140, 40));
        grnaddtotablebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                grnaddtotablebtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                grnaddtotablebtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                grnaddtotablebtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                grnaddtotablebtnMouseReleased(evt);
            }
        });
        grnaddtotablebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grnaddtotablebtnActionPerformed(evt);
            }
        });

        quicksearchitemidlbl48.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl48.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl48.setText("Per Product Amount");

        productamountingrn.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        productamountingrn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        productamountingrn.setSelectionColor(new java.awt.Color(100, 183, 0));
        productamountingrn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productamountingrnActionPerformed(evt);
            }
        });

        quicksearchitemidlbl27.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quicksearchitemidlbl27.setForeground(new java.awt.Color(255, 255, 255));
        quicksearchitemidlbl27.setText("Generated Total");

        grntotal.setEditable(false);
        grntotal.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        grntotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        grntotal.setSelectionColor(new java.awt.Color(100, 183, 0));

        okbtngrn.setBackground(new java.awt.Color(0, 50, 0));
        okbtngrn.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        okbtngrn.setForeground(new java.awt.Color(255, 255, 255));
        okbtngrn.setText("Ok");
        okbtngrn.setContentAreaFilled(false);
        okbtngrn.setFocusPainted(false);
        okbtngrn.setOpaque(true);
        okbtngrn.setPreferredSize(new java.awt.Dimension(140, 40));
        okbtngrn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                okbtngrnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                okbtngrnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                okbtngrnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                okbtngrnMouseReleased(evt);
            }
        });
        okbtngrn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okbtngrnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel23Layout.createSequentialGroup()
                                    .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(quicksearchitemidlbl30)
                                        .addComponent(quicksearchitemidlbl47))
                                    .addGap(63, 63, 63))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                                    .addComponent(quicksearchitemidlbl31, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(81, 81, 81)))
                            .addGroup(jPanel23Layout.createSequentialGroup()
                                .addComponent(quicksearchitemidlbl48)
                                .addGap(41, 41, 41)))
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(productamountingrn, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                            .addComponent(productquantityingrn)
                            .addComponent(Productnamegrn)
                            .addComponent(productcodeingrn, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(quicksearchitemidlbl17)
                                    .addComponent(quicksearchitemidlbl18)
                                    .addComponent(quicksearchitemidlbl19)
                                    .addComponent(quicksearchitemidlbl21)
                                    .addComponent(quicksearchitemidlbl26)
                                    .addComponent(quicksearchitemidlbl25)
                                    .addComponent(quicksearchitemidlbl27))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(invoiceamountingrn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                    .addComponent(billdateingrn, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(invoicenoingrn, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dateingrn, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(suppliergrnfield, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(grnnumberfield, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(grntotal)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(grnaddtotablebtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                .addComponent(okbtngrn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(printgrnbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quicksearchitemidlbl17)
                            .addComponent(grnnumberfield))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(suppliergrnfield, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel23Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(quicksearchitemidlbl18)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(quicksearchitemidlbl19)
                            .addComponent(dateingrn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(quicksearchitemidlbl26)
                            .addComponent(invoicenoingrn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(billdateingrn, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quicksearchitemidlbl21))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(invoiceamountingrn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quicksearchitemidlbl25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quicksearchitemidlbl27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(grntotal))
                        .addGap(49, 49, 49)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quicksearchitemidlbl31)
                            .addComponent(productcodeingrn))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quicksearchitemidlbl47)
                            .addComponent(Productnamegrn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quicksearchitemidlbl30)
                            .addComponent(productquantityingrn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quicksearchitemidlbl48)
                            .addComponent(productamountingrn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addComponent(grnaddtotablebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(okbtngrn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(printgrnbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        grntabbed.addTab("New GRN", jPanel23);

        javax.swing.GroupLayout printgrnpanelLayout = new javax.swing.GroupLayout(printgrnpanel);
        printgrnpanel.setLayout(printgrnpanelLayout);
        printgrnpanelLayout.setHorizontalGroup(
            printgrnpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(printgrnpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(grntabbed)
                .addContainerGap())
        );
        printgrnpanelLayout.setVerticalGroup(
            printgrnpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(printgrnpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(grntabbed)
                .addContainerGap())
        );

        cardonstock.add(printgrnpanel, "card6");

        grnrecordspanel.setBackground(new java.awt.Color(0, 50, 0));

        jPanel24.setBackground(new java.awt.Color(100, 183, 0));

        grnrecordstable.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        grnrecordstable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Code", "Product Name", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grnrecordstable.setGridColor(new java.awt.Color(255, 255, 255));
        grnrecordstable.setRowHeight(22);
        grnrecordstable.setSelectionBackground(new java.awt.Color(100, 183, 0));
        grnrecordstable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grnrecordstableMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(grnrecordstable);

        previewgrnrecord.setBackground(new java.awt.Color(0, 50, 0));
        previewgrnrecord.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        previewgrnrecord.setForeground(new java.awt.Color(255, 255, 255));
        previewgrnrecord.setText("Preview GRN");
        previewgrnrecord.setContentAreaFilled(false);
        previewgrnrecord.setFocusPainted(false);
        previewgrnrecord.setOpaque(true);
        previewgrnrecord.setPreferredSize(new java.awt.Dimension(140, 40));
        previewgrnrecord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                previewgrnrecordMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                previewgrnrecordMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                previewgrnrecordMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                previewgrnrecordMouseReleased(evt);
            }
        });
        previewgrnrecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previewgrnrecordActionPerformed(evt);
            }
        });

        jLabel48.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(255, 255, 255));
        jLabel48.setText("GRN Number");

        grnrecordfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        grnrecordfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grnrecordfieldActionPerformed(evt);
            }
        });

        findbtn1.setBackground(new java.awt.Color(0, 50, 0));
        findbtn1.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        findbtn1.setForeground(new java.awt.Color(255, 255, 255));
        findbtn1.setText("Find");
        findbtn1.setContentAreaFilled(false);
        findbtn1.setFocusPainted(false);
        findbtn1.setOpaque(true);
        findbtn1.setPreferredSize(new java.awt.Dimension(140, 40));
        findbtn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                findbtn1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                findbtn1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                findbtn1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                findbtn1MouseReleased(evt);
            }
        });
        findbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findbtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(previewgrnrecord, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel24Layout.createSequentialGroup()
                        .addComponent(jLabel48)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(grnrecordfield)
                            .addComponent(findbtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48)
                    .addComponent(grnrecordfield, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(findbtn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(previewgrnrecord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout grnrecordspanelLayout = new javax.swing.GroupLayout(grnrecordspanel);
        grnrecordspanel.setLayout(grnrecordspanelLayout);
        grnrecordspanelLayout.setHorizontalGroup(
            grnrecordspanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(grnrecordspanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(624, Short.MAX_VALUE))
            .addGroup(grnrecordspanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, grnrecordspanelLayout.createSequentialGroup()
                    .addGap(387, 387, 387)
                    .addComponent(grnrecordstab, javax.swing.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        grnrecordspanelLayout.setVerticalGroup(
            grnrecordspanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(grnrecordspanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(grnrecordspanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(grnrecordspanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(grnrecordstab, javax.swing.GroupLayout.DEFAULT_SIZE, 562, Short.MAX_VALUE)
                    .addGap(10, 10, 10)))
        );

        cardonstock.add(grnrecordspanel, "card7");

        javax.swing.GroupLayout stockpnlLayout = new javax.swing.GroupLayout(stockpnl);
        stockpnl.setLayout(stockpnlLayout);
        stockpnlLayout.setHorizontalGroup(
            stockpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stockpnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(stockpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cardonstock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(stockpnlLayout.createSequentialGroup()
                        .addComponent(ViewStock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(0, 0, 0)
                        .addComponent(AddStock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(0, 0, 0)
                        .addComponent(stockupdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(0, 0, 0)
                        .addComponent(PrintStock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(0, 0, 0)
                        .addComponent(PrintGRN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(0, 0, 0)
                        .addComponent(grnrecordslbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        stockpnlLayout.setVerticalGroup(
            stockpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stockpnlLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(stockpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(ViewStock, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddStock, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stockupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PrintStock, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PrintGRN, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grnrecordslbl, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(cardonstock, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
                .addGap(11, 11, 11))
        );

        rightside.add(stockpnl, "card3");

        salespnl.setBackground(new java.awt.Color(206, 252, 151));
        salespnl.setFocusTraversalPolicyProvider(true);

        poslbl.setBackground(new java.awt.Color(0, 50, 0));
        poslbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        poslbl.setForeground(new java.awt.Color(255, 255, 255));
        poslbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        poslbl.setText("Point of Sale");
        poslbl.setOpaque(true);
        poslbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                poslblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                poslblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                poslblMouseExited(evt);
            }
        });

        salerecordslbl.setBackground(new java.awt.Color(100, 183, 0));
        salerecordslbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        salerecordslbl.setForeground(new java.awt.Color(255, 255, 255));
        salerecordslbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        salerecordslbl.setText("Sales Records");
        salerecordslbl.setOpaque(true);
        salerecordslbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salerecordslblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                salerecordslblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                salerecordslblMouseExited(evt);
            }
        });

        chartslbl.setBackground(new java.awt.Color(100, 183, 0));
        chartslbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        chartslbl.setForeground(new java.awt.Color(255, 255, 255));
        chartslbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        chartslbl.setText("Charts");
        chartslbl.setOpaque(true);
        chartslbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chartslblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                chartslblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                chartslblMouseExited(evt);
            }
        });

        salescard.setBackground(new java.awt.Color(0, 50, 0));
        salescard.setLayout(new java.awt.CardLayout());

        pospanel.setBackground(new java.awt.Color(0, 50, 0));
        pospanel.setForeground(new java.awt.Color(255, 255, 255));

        jPanel14.setBackground(new java.awt.Color(100, 183, 0));

        printinvoicebtn.setBackground(new java.awt.Color(0, 50, 0));
        printinvoicebtn.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        printinvoicebtn.setForeground(new java.awt.Color(255, 255, 255));
        printinvoicebtn.setText("Print Invoice");
        printinvoicebtn.setContentAreaFilled(false);
        printinvoicebtn.setFocusPainted(false);
        printinvoicebtn.setOpaque(true);
        printinvoicebtn.setPreferredSize(new java.awt.Dimension(140, 40));
        printinvoicebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                printinvoicebtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                printinvoicebtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                printinvoicebtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                printinvoicebtnMouseReleased(evt);
            }
        });
        printinvoicebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printinvoicebtnActionPerformed(evt);
            }
        });

        poscancelbtn.setBackground(new java.awt.Color(0, 50, 0));
        poscancelbtn.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        poscancelbtn.setForeground(new java.awt.Color(255, 255, 255));
        poscancelbtn.setText("Cancel/Next");
        poscancelbtn.setContentAreaFilled(false);
        poscancelbtn.setFocusPainted(false);
        poscancelbtn.setOpaque(true);
        poscancelbtn.setPreferredSize(new java.awt.Dimension(140, 40));
        poscancelbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                poscancelbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                poscancelbtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                poscancelbtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                poscancelbtnMouseReleased(evt);
            }
        });
        poscancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poscancelbtnActionPerformed(evt);
            }
        });

        sellbtn.setBackground(new java.awt.Color(0, 50, 0));
        sellbtn.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        sellbtn.setForeground(new java.awt.Color(255, 255, 255));
        sellbtn.setText("Sell");
        sellbtn.setContentAreaFilled(false);
        sellbtn.setFocusPainted(false);
        sellbtn.setOpaque(true);
        sellbtn.setPreferredSize(new java.awt.Dimension(140, 40));
        sellbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                sellbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                sellbtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                sellbtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                sellbtnMouseReleased(evt);
            }
        });
        sellbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellbtnActionPerformed(evt);
            }
        });

        jLabel59.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel59.setForeground(new java.awt.Color(255, 255, 255));
        jLabel59.setText("Balance");

        paymentfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        paymentfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        paymentfield.setSelectionColor(new java.awt.Color(100, 183, 0));
        paymentfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentfieldActionPerformed(evt);
            }
        });
        paymentfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                paymentfieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                paymentfieldKeyTyped(evt);
            }
        });

        jLabel58.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(255, 255, 255));
        jLabel58.setText("Payment");

        jLabel57.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel57.setForeground(new java.awt.Color(255, 255, 255));
        jLabel57.setText("Total");

        totalinpos.setEditable(false);
        totalinpos.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        totalinpos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        totalinpos.setSelectionColor(new java.awt.Color(100, 183, 0));

        discountfield.setEditable(false);
        discountfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        discountfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        discountfield.setText("0");
        discountfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        discountfield.setSelectionColor(new java.awt.Color(100, 183, 0));
        discountfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountfieldActionPerformed(evt);
            }
        });

        jLabel60.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(255, 255, 255));
        jLabel60.setText("-%");

        vatfield.setEditable(false);
        vatfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        vatfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        vatfield.setText("0");
        vatfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        vatfield.setSelectionColor(new java.awt.Color(100, 183, 0));
        vatfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vatfieldActionPerformed(evt);
            }
        });

        jLabel61.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(255, 255, 255));
        jLabel61.setText("+%");

        nettotalfield.setEditable(false);
        nettotalfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 24)); // NOI18N
        nettotalfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        nettotalfield.setSelectionColor(new java.awt.Color(100, 183, 0));
        nettotalfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nettotalfieldActionPerformed(evt);
            }
        });

        balancefield.setEditable(false);
        balancefield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 24)); // NOI18N
        balancefield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        balancefield.setSelectionColor(new java.awt.Color(100, 183, 0));
        balancefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                balancefieldActionPerformed(evt);
            }
        });

        jCheckBox1.setBackground(new java.awt.Color(100, 183, 0));
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setBackground(new java.awt.Color(100, 183, 0));
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jLabel62.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel62.setForeground(new java.awt.Color(255, 255, 255));
        jLabel62.setText("Net Total");

        jLabel81.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel81.setForeground(new java.awt.Color(255, 255, 255));
        jLabel81.setText("Customer");

        jCheckBox3.setBackground(new java.awt.Color(100, 183, 0));
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        customerid.setEditable(false);
        customerid.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        customerid.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        customerid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        customerid.setSelectionColor(new java.awt.Color(100, 183, 0));
        customerid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customeridActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel58)
                    .addComponent(jLabel59)
                    .addComponent(jLabel62)
                    .addComponent(jLabel81)
                    .addComponent(jLabel61)
                    .addComponent(jLabel60)
                    .addComponent(jLabel57))
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jCheckBox2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(discountfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vatfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customerid, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(balancefield)
                                    .addComponent(paymentfield, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE))
                                .addGap(10, 10, 10))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                                .addComponent(nettotalfield, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                                .addComponent(totalinpos, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(poscancelbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                    .addComponent(printinvoicebtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sellbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalinpos, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(discountfield, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(vatfield, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(customerid, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel81, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCheckBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nettotalfield)
                    .addComponent(jLabel62, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(paymentfield)
                    .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(balancefield, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(sellbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(poscancelbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(printinvoicebtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setLayout(new java.awt.CardLayout());

        pospanelk.setBackground(new java.awt.Color(100, 183, 0));

        cartlisttable.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        cartlisttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Id", "Item Name", "Per Price", "Quantity", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        cartlisttable.setGridColor(new java.awt.Color(255, 255, 255));
        cartlisttable.setRowHeight(22);
        cartlisttable.setSelectionBackground(new java.awt.Color(100, 183, 0));
        cartlisttable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cartlisttableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(cartlisttable);

        stocktableinpostable.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        stocktableinpostable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Id", "Item Name", "Stock Count", "Per Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        stocktableinpostable.setGridColor(new java.awt.Color(255, 255, 255));
        stocktableinpostable.setRowHeight(22);
        stocktableinpostable.setSelectionBackground(new java.awt.Color(100, 183, 0));
        stocktableinpostable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stocktableinpostableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(stocktableinpostable);

        jLabel53.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(255, 255, 255));
        jLabel53.setText("Search");

        searchinposfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        searchinposfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        searchinposfield.setSelectionColor(new java.awt.Color(100, 183, 0));
        searchinposfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchinposfieldActionPerformed(evt);
            }
        });
        searchinposfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchinposfieldKeyReleased(evt);
            }
        });

        searchcomboinpos.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        searchcomboinpos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item Id", "Item Name" }));
        searchcomboinpos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchcomboinposActionPerformed(evt);
            }
        });

        jLabel54.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(255, 255, 255));
        jLabel54.setText("Quantity");

        quantityinpos.setEditable(false);
        quantityinpos.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        quantityinpos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        quantityinpos.setSelectionColor(new java.awt.Color(100, 183, 0));
        quantityinpos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityinposActionPerformed(evt);
            }
        });
        quantityinpos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantityinposKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                quantityinposKeyTyped(evt);
            }
        });

        additeminpos.setBackground(new java.awt.Color(0, 50, 0));
        additeminpos.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        additeminpos.setForeground(new java.awt.Color(255, 255, 255));
        additeminpos.setText("Add Item");
        additeminpos.setContentAreaFilled(false);
        additeminpos.setFocusPainted(false);
        additeminpos.setOpaque(true);
        additeminpos.setPreferredSize(new java.awt.Dimension(140, 40));
        additeminpos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                additeminposMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                additeminposMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                additeminposMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                additeminposMouseReleased(evt);
            }
        });
        additeminpos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                additeminposActionPerformed(evt);
            }
        });

        removeitemfromlistbtn.setBackground(new java.awt.Color(0, 50, 0));
        removeitemfromlistbtn.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        removeitemfromlistbtn.setForeground(new java.awt.Color(255, 255, 255));
        removeitemfromlistbtn.setText("Remove Item");
        removeitemfromlistbtn.setContentAreaFilled(false);
        removeitemfromlistbtn.setFocusPainted(false);
        removeitemfromlistbtn.setOpaque(true);
        removeitemfromlistbtn.setPreferredSize(new java.awt.Dimension(140, 40));
        removeitemfromlistbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                removeitemfromlistbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                removeitemfromlistbtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                removeitemfromlistbtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                removeitemfromlistbtnMouseReleased(evt);
            }
        });
        removeitemfromlistbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeitemfromlistbtnActionPerformed(evt);
            }
        });

        jLabel55.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(255, 255, 255));
        jLabel55.setText("Producs Available");

        jLabel56.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(255, 255, 255));
        jLabel56.setText("List");

        Sellidfield.setEditable(false);
        Sellidfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        Sellidfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        Sellidfield.setSelectionColor(new java.awt.Color(100, 183, 0));
        Sellidfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SellidfieldActionPerformed(evt);
            }
        });
        Sellidfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SellidfieldKeyReleased(evt);
            }
        });

        jLabel63.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(255, 255, 255));
        jLabel63.setText("Sell/Invoice Id");

        Billokbtn.setBackground(new java.awt.Color(0, 50, 0));
        Billokbtn.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        Billokbtn.setForeground(new java.awt.Color(255, 255, 255));
        Billokbtn.setText("OK");
        Billokbtn.setContentAreaFilled(false);
        Billokbtn.setFocusPainted(false);
        Billokbtn.setOpaque(true);
        Billokbtn.setPreferredSize(new java.awt.Dimension(140, 40));
        Billokbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BillokbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BillokbtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BillokbtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BillokbtnMouseReleased(evt);
            }
        });
        Billokbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BillokbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pospanelkLayout = new javax.swing.GroupLayout(pospanelk);
        pospanelk.setLayout(pospanelkLayout);
        pospanelkLayout.setHorizontalGroup(
            pospanelkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pospanelkLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pospanelkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pospanelkLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Billokbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(removeitemfromlistbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(additeminpos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pospanelkLayout.createSequentialGroup()
                        .addComponent(jLabel63)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Sellidfield, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel53)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchinposfield, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(searchcomboinpos, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel54)
                        .addGap(18, 18, 18)
                        .addComponent(quantityinpos, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4)
                    .addComponent(jLabel55)
                    .addComponent(jLabel56)
                    .addComponent(jScrollPane6))
                .addContainerGap())
        );
        pospanelkLayout.setVerticalGroup(
            pospanelkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pospanelkLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(pospanelkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(searchcomboinpos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchinposfield, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantityinpos, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Sellidfield, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel63, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pospanelkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(additeminpos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeitemfromlistbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Billokbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11))
        );

        jPanel6.add(pospanelk, "card2");

        invoice.setBackground(new java.awt.Color(100, 183, 0));

        backtopos.setBackground(new java.awt.Color(0, 50, 0));
        backtopos.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        backtopos.setForeground(new java.awt.Color(255, 255, 255));
        backtopos.setText("Back");
        backtopos.setContentAreaFilled(false);
        backtopos.setFocusPainted(false);
        backtopos.setOpaque(true);
        backtopos.setPreferredSize(new java.awt.Dimension(140, 40));
        backtopos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backtoposMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backtoposMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backtoposMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                backtoposMouseReleased(evt);
            }
        });
        backtopos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backtoposActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout invoiceLayout = new javax.swing.GroupLayout(invoice);
        invoice.setLayout(invoiceLayout);
        invoiceLayout.setHorizontalGroup(
            invoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, invoiceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(invoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(invoicetab)
                    .addGroup(invoiceLayout.createSequentialGroup()
                        .addGap(0, 511, Short.MAX_VALUE)
                        .addComponent(backtopos, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        invoiceLayout.setVerticalGroup(
            invoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(invoiceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(invoicetab, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(backtopos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel6.add(invoice, "card3");

        javax.swing.GroupLayout pospanelLayout = new javax.swing.GroupLayout(pospanel);
        pospanel.setLayout(pospanelLayout);
        pospanelLayout.setHorizontalGroup(
            pospanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pospanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 744, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pospanelLayout.setVerticalGroup(
            pospanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pospanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pospanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        salescard.add(pospanel, "card2");

        sellrecordspanel.setBackground(new java.awt.Color(0, 50, 0));

        jPanel16.setBackground(new java.awt.Color(100, 183, 0));

        salesrecordstable.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        salesrecordstable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Itm Name", "Item Ids x Quantities", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        salesrecordstable.setGridColor(new java.awt.Color(255, 255, 255));
        salesrecordstable.setRowHeight(22);
        salesrecordstable.setSelectionBackground(new java.awt.Color(100, 183, 0));
        salesrecordstable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salesrecordstableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(salesrecordstable);

        printinvoicebtninsellrecords.setBackground(new java.awt.Color(0, 50, 0));
        printinvoicebtninsellrecords.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        printinvoicebtninsellrecords.setForeground(new java.awt.Color(255, 255, 255));
        printinvoicebtninsellrecords.setText("Preview Invoice");
        printinvoicebtninsellrecords.setContentAreaFilled(false);
        printinvoicebtninsellrecords.setFocusPainted(false);
        printinvoicebtninsellrecords.setOpaque(true);
        printinvoicebtninsellrecords.setPreferredSize(new java.awt.Dimension(140, 40));
        printinvoicebtninsellrecords.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                printinvoicebtninsellrecordsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                printinvoicebtninsellrecordsMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                printinvoicebtninsellrecordsMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                printinvoicebtninsellrecordsMouseReleased(evt);
            }
        });
        printinvoicebtninsellrecords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printinvoicebtninsellrecordsActionPerformed(evt);
            }
        });

        jLabel47.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));
        jLabel47.setText("Bill Number");

        billbumberfieldinsellrecords.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        billbumberfieldinsellrecords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billbumberfieldinsellrecordsActionPerformed(evt);
            }
        });

        findbtn.setBackground(new java.awt.Color(0, 50, 0));
        findbtn.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        findbtn.setForeground(new java.awt.Color(255, 255, 255));
        findbtn.setText("Find");
        findbtn.setContentAreaFilled(false);
        findbtn.setFocusPainted(false);
        findbtn.setOpaque(true);
        findbtn.setPreferredSize(new java.awt.Dimension(140, 40));
        findbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                findbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                findbtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                findbtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                findbtnMouseReleased(evt);
            }
        });
        findbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(printinvoicebtninsellrecords, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel16Layout.createSequentialGroup()
                            .addComponent(jLabel47)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                            .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(billbumberfieldinsellrecords)
                                .addComponent(findbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(14, 14, 14))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(billbumberfieldinsellrecords, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(findbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(printinvoicebtninsellrecords, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout sellrecordspanelLayout = new javax.swing.GroupLayout(sellrecordspanel);
        sellrecordspanel.setLayout(sellrecordspanelLayout);
        sellrecordspanelLayout.setHorizontalGroup(
            sellrecordspanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sellrecordspanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sellrecordstab, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        sellrecordspanelLayout.setVerticalGroup(
            sellrecordspanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sellrecordspanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sellrecordspanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sellrecordstab)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );

        salescard.add(sellrecordspanel, "card3");

        chartspnl.setBackground(new java.awt.Color(0, 50, 0));

        javax.swing.GroupLayout chartspnlLayout = new javax.swing.GroupLayout(chartspnl);
        chartspnl.setLayout(chartspnlLayout);
        chartspnlLayout.setHorizontalGroup(
            chartspnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chartspnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chartstab, javax.swing.GroupLayout.DEFAULT_SIZE, 982, Short.MAX_VALUE)
                .addContainerGap())
        );
        chartspnlLayout.setVerticalGroup(
            chartspnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chartspnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chartstab, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                .addContainerGap())
        );

        salescard.add(chartspnl, "card5");

        javax.swing.GroupLayout salespnlLayout = new javax.swing.GroupLayout(salespnl);
        salespnl.setLayout(salespnlLayout);
        salespnlLayout.setHorizontalGroup(
            salespnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salespnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(poslbl, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(salerecordslbl, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(chartslbl, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(397, Short.MAX_VALUE))
            .addGroup(salespnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(salespnlLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(salescard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        salespnlLayout.setVerticalGroup(
            salespnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salespnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(salespnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(salerecordslbl, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(poslbl, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chartslbl, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
            .addGroup(salespnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, salespnlLayout.createSequentialGroup()
                    .addContainerGap(59, Short.MAX_VALUE)
                    .addComponent(salescard, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        rightside.add(salespnl, "card4");

        employeepnl.setBackground(new java.awt.Color(206, 252, 151));
        employeepnl.setFocusTraversalPolicyProvider(true);

        manageemplbl.setBackground(new java.awt.Color(0, 50, 0));
        manageemplbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        manageemplbl.setForeground(new java.awt.Color(255, 255, 255));
        manageemplbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        manageemplbl.setText("Manage Employees");
        manageemplbl.setOpaque(true);
        manageemplbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                manageemplblMouseClicked(evt);
            }
        });

        empreportlbl.setBackground(new java.awt.Color(100, 183, 0));
        empreportlbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        empreportlbl.setForeground(new java.awt.Color(255, 255, 255));
        empreportlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        empreportlbl.setText("Employee Report");
        empreportlbl.setOpaque(true);
        empreportlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                empreportlblMouseClicked(evt);
            }
        });

        empprofileslbl.setBackground(new java.awt.Color(100, 183, 0));
        empprofileslbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        empprofileslbl.setForeground(new java.awt.Color(255, 255, 255));
        empprofileslbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        empprofileslbl.setText("Employee Profiles");
        empprofileslbl.setOpaque(true);
        empprofileslbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                empprofileslblMouseClicked(evt);
            }
        });

        profilereportslbl.setBackground(new java.awt.Color(100, 183, 0));
        profilereportslbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        profilereportslbl.setForeground(new java.awt.Color(255, 255, 255));
        profilereportslbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        profilereportslbl.setText("Profile Reports");
        profilereportslbl.setOpaque(true);
        profilereportslbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profilereportslblMouseClicked(evt);
            }
        });

        payrolllbl.setBackground(new java.awt.Color(100, 183, 0));
        payrolllbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        payrolllbl.setForeground(new java.awt.Color(255, 255, 255));
        payrolllbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        payrolllbl.setText("Manage Payroll");
        payrolllbl.setOpaque(true);
        payrolllbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                payrolllblMouseClicked(evt);
            }
        });

        empseccard.setLayout(new java.awt.CardLayout());

        mngemppnl.setBackground(new java.awt.Color(0, 50, 0));

        jPanel20.setBackground(new java.awt.Color(100, 183, 0));
        jPanel20.setEnabled(false);

        employeetable.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        employeetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee Id", "Name", "Age", "Gender", "Position", "Sallary"
            }
        ));
        employeetable.setGridColor(new java.awt.Color(255, 255, 255));
        employeetable.setRowHeight(22);
        employeetable.setSelectionBackground(new java.awt.Color(100, 183, 0));
        employeetable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeetableMouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(employeetable);
        if (employeetable.getColumnModel().getColumnCount() > 0) {
            employeetable.getColumnModel().getColumn(0).setHeaderValue("Employee Id");
            employeetable.getColumnModel().getColumn(1).setHeaderValue("Name");
            employeetable.getColumnModel().getColumn(2).setHeaderValue("Age");
            employeetable.getColumnModel().getColumn(3).setHeaderValue("Gender");
            employeetable.getColumnModel().getColumn(4).setHeaderValue("Position");
            employeetable.getColumnModel().getColumn(5).setHeaderValue("Sallary");
        }

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 751, Short.MAX_VALUE)
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
        );

        jPanel17.setBackground(new java.awt.Color(100, 183, 0));

        deletebtnemp.setBackground(new java.awt.Color(0, 50, 0));
        deletebtnemp.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        deletebtnemp.setForeground(new java.awt.Color(255, 255, 255));
        deletebtnemp.setText("Delete");
        deletebtnemp.setContentAreaFilled(false);
        deletebtnemp.setFocusPainted(false);
        deletebtnemp.setOpaque(true);
        deletebtnemp.setPreferredSize(new java.awt.Dimension(140, 40));
        deletebtnemp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deletebtnempMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deletebtnempMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                deletebtnempMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                deletebtnempMouseReleased(evt);
            }
        });
        deletebtnemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnempActionPerformed(evt);
            }
        });

        addbtnemp.setBackground(new java.awt.Color(0, 50, 0));
        addbtnemp.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        addbtnemp.setForeground(new java.awt.Color(255, 255, 255));
        addbtnemp.setText("Add");
        addbtnemp.setContentAreaFilled(false);
        addbtnemp.setFocusPainted(false);
        addbtnemp.setOpaque(true);
        addbtnemp.setPreferredSize(new java.awt.Dimension(140, 40));
        addbtnemp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addbtnempMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addbtnempMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                addbtnempMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                addbtnempMouseReleased(evt);
            }
        });
        addbtnemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnempActionPerformed(evt);
            }
        });

        updatebtnemp.setBackground(new java.awt.Color(0, 50, 0));
        updatebtnemp.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        updatebtnemp.setForeground(new java.awt.Color(255, 255, 255));
        updatebtnemp.setText("Update");
        updatebtnemp.setContentAreaFilled(false);
        updatebtnemp.setFocusPainted(false);
        updatebtnemp.setOpaque(true);
        updatebtnemp.setPreferredSize(new java.awt.Dimension(140, 40));
        updatebtnemp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updatebtnempMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updatebtnempMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                updatebtnempMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                updatebtnempMouseReleased(evt);
            }
        });
        updatebtnemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnempActionPerformed(evt);
            }
        });

        refreshbtnemp.setBackground(new java.awt.Color(0, 50, 0));
        refreshbtnemp.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        refreshbtnemp.setForeground(new java.awt.Color(255, 255, 255));
        refreshbtnemp.setText("Refresh");
        refreshbtnemp.setContentAreaFilled(false);
        refreshbtnemp.setFocusPainted(false);
        refreshbtnemp.setOpaque(true);
        refreshbtnemp.setPreferredSize(new java.awt.Dimension(140, 40));
        refreshbtnemp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                refreshbtnempMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                refreshbtnempMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                refreshbtnempMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                refreshbtnempMouseReleased(evt);
            }
        });
        refreshbtnemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshbtnempActionPerformed(evt);
            }
        });

        jComboBox3.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        updatebtnemp2.setBackground(new java.awt.Color(0, 50, 0));
        updatebtnemp2.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        updatebtnemp2.setForeground(new java.awt.Color(255, 255, 255));
        updatebtnemp2.setText("Print Report");
        updatebtnemp2.setContentAreaFilled(false);
        updatebtnemp2.setFocusPainted(false);
        updatebtnemp2.setOpaque(true);
        updatebtnemp2.setPreferredSize(new java.awt.Dimension(140, 40));
        updatebtnemp2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updatebtnemp2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updatebtnemp2MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                updatebtnemp2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                updatebtnemp2MouseReleased(evt);
            }
        });
        updatebtnemp2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnemp2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Employee Position");

        searchbtnemp4.setBackground(new java.awt.Color(0, 50, 0));
        searchbtnemp4.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        searchbtnemp4.setForeground(new java.awt.Color(255, 255, 255));
        searchbtnemp4.setText("Search");
        searchbtnemp4.setContentAreaFilled(false);
        searchbtnemp4.setFocusPainted(false);
        searchbtnemp4.setOpaque(true);
        searchbtnemp4.setPreferredSize(new java.awt.Dimension(140, 40));
        searchbtnemp4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchbtnemp4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                searchbtnemp4MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                searchbtnemp4MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                searchbtnemp4MouseReleased(evt);
            }
        });
        searchbtnemp4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnemp4ActionPerformed(evt);
            }
        });

        searchfiledemp0.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        searchfiledemp0.setSelectionColor(new java.awt.Color(100, 183, 0));

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updatebtnemp2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(addbtnemp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                .addComponent(deletebtnemp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(updatebtnemp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(refreshbtnemp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel4)
                            .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(searchbtnemp4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(searchfiledemp0, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchfiledemp0, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(searchbtnemp4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(addbtnemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deletebtnemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updatebtnemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updatebtnemp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(refreshbtnemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel30.setBackground(new java.awt.Color(100, 183, 0));

        empidfield.setEditable(false);
        empidfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        empidfield.setSelectionColor(new java.awt.Color(100, 183, 0));

        genderemp.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        genderemp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        genderemp.setOpaque(false);

        jLabel30.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Employee Id");

        namefieldemp.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        namefieldemp.setSelectionColor(new java.awt.Color(100, 183, 0));
        namefieldemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namefieldempActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("Name");

        agefieldemp.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        agefieldemp.setSelectionColor(new java.awt.Color(100, 183, 0));

        jLabel33.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("Age");

        jLabel34.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Gender");

        jLabel35.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("Position");

        positionemp.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        positionemp.setSelectionColor(new java.awt.Color(100, 183, 0));

        salaryemp.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        salaryemp.setSelectionColor(new java.awt.Color(100, 183, 0));

        jLabel36.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("Sallary");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30)
                    .addComponent(jLabel31)
                    .addComponent(jLabel33)
                    .addComponent(jLabel34))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(empidfield)
                    .addComponent(agefieldemp, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                    .addComponent(namefieldemp, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                    .addComponent(genderemp, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(150, 150, 150)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel36)
                    .addComponent(jLabel35))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(positionemp)
                    .addComponent(salaryemp, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel30)
                    .addComponent(empidfield, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addComponent(positionemp, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(salaryemp, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36)
                    .addComponent(namefieldemp, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(agefieldemp, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(genderemp, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mngemppnlLayout = new javax.swing.GroupLayout(mngemppnl);
        mngemppnl.setLayout(mngemppnlLayout);
        mngemppnlLayout.setHorizontalGroup(
            mngemppnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mngemppnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mngemppnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        mngemppnlLayout.setVerticalGroup(
            mngemppnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mngemppnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mngemppnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(mngemppnlLayout.createSequentialGroup()
                        .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        empseccard.add(mngemppnl, "card3");

        empreportpnl.setBackground(new java.awt.Color(0, 50, 0));

        jPanel8.setBackground(new java.awt.Color(100, 183, 0));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 981, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(employeereporttab, javax.swing.GroupLayout.DEFAULT_SIZE, 961, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 557, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(employeereporttab, javax.swing.GroupLayout.DEFAULT_SIZE, 547, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout empreportpnlLayout = new javax.swing.GroupLayout(empreportpnl);
        empreportpnl.setLayout(empreportpnlLayout);
        empreportpnlLayout.setHorizontalGroup(
            empreportpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(empreportpnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        empreportpnlLayout.setVerticalGroup(
            empreportpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(empreportpnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        empseccard.add(empreportpnl, "card3");

        empprofilepnl.setBackground(new java.awt.Color(0, 50, 0));

        jPanel26.setBackground(new java.awt.Color(100, 183, 0));

        jPanel31.setBackground(new java.awt.Color(100, 183, 0));

        empid2.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        empid2.setSelectionColor(new java.awt.Color(100, 183, 0));

        empgender2.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        empgender2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        empgender2.setOpaque(false);

        jLabel37.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("Employee Id");

        empname2.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        empname2.setSelectionColor(new java.awt.Color(100, 183, 0));

        jLabel40.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setText("Name");

        empage2.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        empage2.setSelectionColor(new java.awt.Color(100, 183, 0));

        jLabel41.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(255, 255, 255));
        jLabel41.setText("Age");

        jLabel42.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setText("Gender");

        jLabel43.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(255, 255, 255));
        jLabel43.setText("Position");

        empposition2.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        empposition2.setSelectionColor(new java.awt.Color(100, 183, 0));

        empsallery2.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        empsallery2.setSelectionColor(new java.awt.Color(100, 183, 0));

        jLabel44.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(255, 255, 255));
        jLabel44.setText("Sallary");

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel37)
                    .addComponent(jLabel40)
                    .addComponent(jLabel41)
                    .addComponent(jLabel42))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(empid2)
                    .addComponent(empage2)
                    .addComponent(empname2)
                    .addComponent(empgender2, 0, 211, Short.MAX_VALUE))
                .addGap(121, 121, 121)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel44)
                    .addComponent(jLabel43))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(empposition2)
                    .addComponent(empsallery2, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel37)
                    .addComponent(empid2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel43)
                    .addComponent(empposition2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(empsallery2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44)
                    .addComponent(empname2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(empage2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(empgender2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        emptable2.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        emptable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee Id", "Name", "Age", "Gender", "Position", "Sallary"
            }
        ));
        emptable2.setGridColor(new java.awt.Color(255, 255, 255));
        emptable2.setRowHeight(22);
        emptable2.setSelectionBackground(new java.awt.Color(100, 183, 0));
        jScrollPane13.setViewportView(emptable2);

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 731, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel29.setBackground(new java.awt.Color(100, 183, 0));

        searchbtnemp1.setBackground(new java.awt.Color(0, 50, 0));
        searchbtnemp1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        searchbtnemp1.setForeground(new java.awt.Color(255, 255, 255));
        searchbtnemp1.setText("Search");
        searchbtnemp1.setContentAreaFilled(false);
        searchbtnemp1.setFocusPainted(false);
        searchbtnemp1.setOpaque(true);
        searchbtnemp1.setPreferredSize(new java.awt.Dimension(140, 40));
        searchbtnemp1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchbtnemp1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                searchbtnemp1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                searchbtnemp1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                searchbtnemp1MouseReleased(evt);
            }
        });
        searchbtnemp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnemp1ActionPerformed(evt);
            }
        });
        searchbtnemp1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchbtnemp1KeyReleased(evt);
            }
        });

        searchfiledemp1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        searchfiledemp1.setSelectionColor(new java.awt.Color(100, 183, 0));

        refreshbtnemp1.setBackground(new java.awt.Color(0, 50, 0));
        refreshbtnemp1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        refreshbtnemp1.setForeground(new java.awt.Color(255, 255, 255));
        refreshbtnemp1.setText("Refresh");
        refreshbtnemp1.setContentAreaFilled(false);
        refreshbtnemp1.setFocusPainted(false);
        refreshbtnemp1.setOpaque(true);
        refreshbtnemp1.setPreferredSize(new java.awt.Dimension(140, 40));
        refreshbtnemp1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                refreshbtnemp1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                refreshbtnemp1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                refreshbtnemp1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                refreshbtnemp1MouseReleased(evt);
            }
        });
        refreshbtnemp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshbtnemp1ActionPerformed(evt);
            }
        });

        updatebtnemp5.setBackground(new java.awt.Color(0, 50, 0));
        updatebtnemp5.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        updatebtnemp5.setForeground(new java.awt.Color(255, 255, 255));
        updatebtnemp5.setText("Print Profile Report");
        updatebtnemp5.setContentAreaFilled(false);
        updatebtnemp5.setFocusPainted(false);
        updatebtnemp5.setOpaque(true);
        updatebtnemp5.setPreferredSize(new java.awt.Dimension(140, 40));
        updatebtnemp5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updatebtnemp5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updatebtnemp5MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                updatebtnemp5MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                updatebtnemp5MouseReleased(evt);
            }
        });
        updatebtnemp5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnemp5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updatebtnemp5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel29Layout.createSequentialGroup()
                        .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchbtnemp1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(refreshbtnemp1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(searchfiledemp1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(searchfiledemp1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(searchbtnemp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updatebtnemp5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 374, Short.MAX_VALUE)
                .addComponent(refreshbtnemp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout empprofilepnlLayout = new javax.swing.GroupLayout(empprofilepnl);
        empprofilepnl.setLayout(empprofilepnlLayout);
        empprofilepnlLayout.setHorizontalGroup(
            empprofilepnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(empprofilepnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        empprofilepnlLayout.setVerticalGroup(
            empprofilepnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(empprofilepnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(empprofilepnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        empseccard.add(empprofilepnl, "card4");

        empprofilereportpnl.setBackground(new java.awt.Color(0, 50, 0));

        jPanel9.setBackground(new java.awt.Color(100, 183, 0));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 981, Short.MAX_VALUE)
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(empprofileprinttab, javax.swing.GroupLayout.DEFAULT_SIZE, 961, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 557, Short.MAX_VALUE)
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(empprofileprinttab, javax.swing.GroupLayout.DEFAULT_SIZE, 547, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout empprofilereportpnlLayout = new javax.swing.GroupLayout(empprofilereportpnl);
        empprofilereportpnl.setLayout(empprofilereportpnlLayout);
        empprofilereportpnlLayout.setHorizontalGroup(
            empprofilereportpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(empprofilereportpnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        empprofilereportpnlLayout.setVerticalGroup(
            empprofilereportpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(empprofilereportpnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        empseccard.add(empprofilereportpnl, "card5");

        payrollpnl.setBackground(new java.awt.Color(0, 50, 0));

        jPanel49.setBackground(new java.awt.Color(100, 183, 0));
        jPanel49.setForeground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Total Payment");

        jTextField7.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jTextField7.setSelectionColor(new java.awt.Color(100, 183, 0));

        jLabel70.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel70.setForeground(new java.awt.Color(255, 255, 255));
        jLabel70.setText("Cash Bank Total");

        jTextField8.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jTextField8.setSelectionColor(new java.awt.Color(100, 183, 0));

        jTextField9.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jTextField9.setSelectionColor(new java.awt.Color(100, 183, 0));

        jLabel75.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel75.setForeground(new java.awt.Color(255, 255, 255));
        jLabel75.setText("Cash Balance");

        printpayrollsuitempsbtn.setBackground(new java.awt.Color(0, 50, 0));
        printpayrollsuitempsbtn.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        printpayrollsuitempsbtn.setForeground(new java.awt.Color(255, 255, 255));
        printpayrollsuitempsbtn.setText("Print Report");
        printpayrollsuitempsbtn.setContentAreaFilled(false);
        printpayrollsuitempsbtn.setFocusPainted(false);
        printpayrollsuitempsbtn.setOpaque(true);
        printpayrollsuitempsbtn.setPreferredSize(new java.awt.Dimension(140, 40));
        printpayrollsuitempsbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                printpayrollsuitempsbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                printpayrollsuitempsbtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                printpayrollsuitempsbtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                printpayrollsuitempsbtnMouseReleased(evt);
            }
        });
        printpayrollsuitempsbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printpayrollsuitempsbtnActionPerformed(evt);
            }
        });

        employeestopaytable.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        employeestopaytable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee Id", "Name", "Month", "Payment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        employeestopaytable.setGridColor(new java.awt.Color(255, 255, 255));
        employeestopaytable.setRowHeight(22);
        employeestopaytable.setSelectionBackground(new java.awt.Color(100, 183, 0));
        employeestopaytable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeestopaytableMouseClicked(evt);
            }
        });
        jScrollPane18.setViewportView(employeestopaytable);

        jLabel90.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel90.setForeground(new java.awt.Color(255, 255, 255));
        jLabel90.setText("Attendance");

        attendanceneedfrpay.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        attendanceneedfrpay.setSelectionColor(new java.awt.Color(100, 183, 0));
        attendanceneedfrpay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendanceneedfrpayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel49Layout = new javax.swing.GroupLayout(jPanel49);
        jPanel49.setLayout(jPanel49Layout);
        jPanel49Layout.setHorizontalGroup(
            jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel49Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel49Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel49Layout.createSequentialGroup()
                        .addComponent(jLabel70)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel49Layout.createSequentialGroup()
                        .addComponent(jLabel75)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(printpayrollsuitempsbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel49Layout.createSequentialGroup()
                        .addComponent(jLabel90)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(attendanceneedfrpay, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel49Layout.setVerticalGroup(
            jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel49Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane18, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel90)
                    .addComponent(attendanceneedfrpay, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel70)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel75)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(printpayrollsuitempsbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel50.setBackground(new java.awt.Color(100, 183, 0));

        jLabel66.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(255, 255, 255));
        jLabel66.setText("Employee Id");

        paybtn.setBackground(new java.awt.Color(0, 50, 0));
        paybtn.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        paybtn.setForeground(new java.awt.Color(255, 255, 255));
        paybtn.setText("Pay");
        paybtn.setContentAreaFilled(false);
        paybtn.setFocusPainted(false);
        paybtn.setOpaque(true);
        paybtn.setPreferredSize(new java.awt.Dimension(140, 40));
        paybtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                paybtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                paybtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                paybtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                paybtnMouseReleased(evt);
            }
        });
        paybtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paybtnActionPerformed(evt);
            }
        });

        printpayedreceiptbtn.setBackground(new java.awt.Color(0, 50, 0));
        printpayedreceiptbtn.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        printpayedreceiptbtn.setForeground(new java.awt.Color(255, 255, 255));
        printpayedreceiptbtn.setText("Print Receipt");
        printpayedreceiptbtn.setContentAreaFilled(false);
        printpayedreceiptbtn.setFocusPainted(false);
        printpayedreceiptbtn.setOpaque(true);
        printpayedreceiptbtn.setPreferredSize(new java.awt.Dimension(140, 40));
        printpayedreceiptbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                printpayedreceiptbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                printpayedreceiptbtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                printpayedreceiptbtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                printpayedreceiptbtnMouseReleased(evt);
            }
        });
        printpayedreceiptbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printpayedreceiptbtnActionPerformed(evt);
            }
        });

        jTextField10.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jTextField10.setSelectionColor(new java.awt.Color(100, 183, 0));

        javax.swing.GroupLayout jPanel50Layout = new javax.swing.GroupLayout(jPanel50);
        jPanel50.setLayout(jPanel50Layout);
        jPanel50Layout.setHorizontalGroup(
            jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel50Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel50Layout.createSequentialGroup()
                        .addComponent(jLabel66)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel50Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(paybtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(printpayedreceiptbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel50Layout.setVerticalGroup(
            jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel50Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel66)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(printpayedreceiptbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paybtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout payrollpnlLayout = new javax.swing.GroupLayout(payrollpnl);
        payrollpnl.setLayout(payrollpnlLayout);
        payrollpnlLayout.setHorizontalGroup(
            payrollpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, payrollpnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(payrollpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel50, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel49, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(twoinonereportforpayroll, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
                .addContainerGap())
        );
        payrollpnlLayout.setVerticalGroup(
            payrollpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, payrollpnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(payrollpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(twoinonereportforpayroll)
                    .addGroup(payrollpnlLayout.createSequentialGroup()
                        .addComponent(jPanel49, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel50, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        empseccard.add(payrollpnl, "card6");

        javax.swing.GroupLayout employeepnlLayout = new javax.swing.GroupLayout(employeepnl);
        employeepnl.setLayout(employeepnlLayout);
        employeepnlLayout.setHorizontalGroup(
            employeepnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(employeepnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(manageemplbl, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(empreportlbl, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(empprofileslbl, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(profilereportslbl, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(payrolllbl, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(employeepnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, employeepnlLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(empseccard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        employeepnlLayout.setVerticalGroup(
            employeepnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(employeepnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(employeepnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(manageemplbl, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(empreportlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(empprofileslbl, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profilereportslbl, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(payrolllbl, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(590, Short.MAX_VALUE))
            .addGroup(employeepnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(employeepnlLayout.createSequentialGroup()
                    .addGap(63, 63, 63)
                    .addComponent(empseccard, javax.swing.GroupLayout.DEFAULT_SIZE, 579, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        rightside.add(employeepnl, "card5");

        customerpnl.setBackground(new java.awt.Color(206, 252, 151));
        customerpnl.setFocusTraversalPolicyProvider(true);

        managecuslbl.setBackground(new java.awt.Color(0, 50, 0));
        managecuslbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        managecuslbl.setForeground(new java.awt.Color(255, 255, 255));
        managecuslbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        managecuslbl.setText("Manage Customers");
        managecuslbl.setOpaque(true);
        managecuslbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                managecuslblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                managecuslblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                managecuslblMouseExited(evt);
            }
        });

        cusreportlbl.setBackground(new java.awt.Color(100, 183, 0));
        cusreportlbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        cusreportlbl.setForeground(new java.awt.Color(255, 255, 255));
        cusreportlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cusreportlbl.setText("Customer Report");
        cusreportlbl.setOpaque(true);
        cusreportlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cusreportlblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cusreportlblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cusreportlblMouseExited(evt);
            }
        });

        cusprofileslbl.setBackground(new java.awt.Color(100, 183, 0));
        cusprofileslbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        cusprofileslbl.setForeground(new java.awt.Color(255, 255, 255));
        cusprofileslbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cusprofileslbl.setText("Customer Profiles");
        cusprofileslbl.setOpaque(true);
        cusprofileslbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cusprofileslblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cusprofileslblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cusprofileslblMouseExited(evt);
            }
        });

        cusprofilereportslbl.setBackground(new java.awt.Color(100, 183, 0));
        cusprofilereportslbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        cusprofilereportslbl.setForeground(new java.awt.Color(255, 255, 255));
        cusprofilereportslbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cusprofilereportslbl.setText("Customer Profile Reports");
        cusprofilereportslbl.setOpaque(true);
        cusprofilereportslbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cusprofilereportslblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cusprofilereportslblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cusprofilereportslblMouseExited(evt);
            }
        });

        membershipmnglbl.setBackground(new java.awt.Color(100, 183, 0));
        membershipmnglbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        membershipmnglbl.setForeground(new java.awt.Color(255, 255, 255));
        membershipmnglbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        membershipmnglbl.setText("Membership Settings");
        membershipmnglbl.setOpaque(true);
        membershipmnglbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                membershipmnglblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                membershipmnglblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                membershipmnglblMouseExited(evt);
            }
        });

        customercard.setLayout(new java.awt.CardLayout());

        mngcustomerpnl.setBackground(new java.awt.Color(0, 50, 0));

        jPanel27.setBackground(new java.awt.Color(100, 183, 0));
        jPanel27.setEnabled(false);

        customertable.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        customertable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer Id", "Name", "Age", "Gender", "Membership"
            }
        ));
        customertable.setGridColor(new java.awt.Color(255, 255, 255));
        customertable.setRowHeight(22);
        customertable.setSelectionBackground(new java.awt.Color(100, 183, 0));
        jScrollPane14.setViewportView(customertable);

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 751, Short.MAX_VALUE)
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jPanel32.setBackground(new java.awt.Color(100, 183, 0));

        deletecustomerbtn.setBackground(new java.awt.Color(0, 50, 0));
        deletecustomerbtn.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        deletecustomerbtn.setForeground(new java.awt.Color(255, 255, 255));
        deletecustomerbtn.setText("Delete");
        deletecustomerbtn.setContentAreaFilled(false);
        deletecustomerbtn.setFocusPainted(false);
        deletecustomerbtn.setOpaque(true);
        deletecustomerbtn.setPreferredSize(new java.awt.Dimension(140, 40));
        deletecustomerbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deletecustomerbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deletecustomerbtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                deletecustomerbtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                deletecustomerbtnMouseReleased(evt);
            }
        });
        deletecustomerbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletecustomerbtnActionPerformed(evt);
            }
        });

        addnewcustomerbtn.setBackground(new java.awt.Color(0, 50, 0));
        addnewcustomerbtn.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        addnewcustomerbtn.setForeground(new java.awt.Color(255, 255, 255));
        addnewcustomerbtn.setText("Add");
        addnewcustomerbtn.setContentAreaFilled(false);
        addnewcustomerbtn.setFocusPainted(false);
        addnewcustomerbtn.setOpaque(true);
        addnewcustomerbtn.setPreferredSize(new java.awt.Dimension(140, 40));
        addnewcustomerbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addnewcustomerbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addnewcustomerbtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                addnewcustomerbtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                addnewcustomerbtnMouseReleased(evt);
            }
        });
        addnewcustomerbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addnewcustomerbtnActionPerformed(evt);
            }
        });

        updatecustomerbtn.setBackground(new java.awt.Color(0, 50, 0));
        updatecustomerbtn.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        updatecustomerbtn.setForeground(new java.awt.Color(255, 255, 255));
        updatecustomerbtn.setText("Update");
        updatecustomerbtn.setContentAreaFilled(false);
        updatecustomerbtn.setFocusPainted(false);
        updatecustomerbtn.setOpaque(true);
        updatecustomerbtn.setPreferredSize(new java.awt.Dimension(140, 40));
        updatecustomerbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updatecustomerbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updatecustomerbtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                updatecustomerbtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                updatecustomerbtnMouseReleased(evt);
            }
        });
        updatecustomerbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatecustomerbtnActionPerformed(evt);
            }
        });

        searchbtnemp2.setBackground(new java.awt.Color(0, 50, 0));
        searchbtnemp2.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        searchbtnemp2.setForeground(new java.awt.Color(255, 255, 255));
        searchbtnemp2.setText("Search");
        searchbtnemp2.setContentAreaFilled(false);
        searchbtnemp2.setFocusPainted(false);
        searchbtnemp2.setOpaque(true);
        searchbtnemp2.setPreferredSize(new java.awt.Dimension(140, 40));
        searchbtnemp2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchbtnemp2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                searchbtnemp2MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                searchbtnemp2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                searchbtnemp2MouseReleased(evt);
            }
        });
        searchbtnemp2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnemp2ActionPerformed(evt);
            }
        });

        customersearchfield0.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        customersearchfield0.setSelectionColor(new java.awt.Color(100, 183, 0));

        customerpnlrefresh.setBackground(new java.awt.Color(0, 50, 0));
        customerpnlrefresh.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        customerpnlrefresh.setForeground(new java.awt.Color(255, 255, 255));
        customerpnlrefresh.setText("Refresh");
        customerpnlrefresh.setContentAreaFilled(false);
        customerpnlrefresh.setFocusPainted(false);
        customerpnlrefresh.setOpaque(true);
        customerpnlrefresh.setPreferredSize(new java.awt.Dimension(140, 40));
        customerpnlrefresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                customerpnlrefreshMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                customerpnlrefreshMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                customerpnlrefreshMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                customerpnlrefreshMouseReleased(evt);
            }
        });
        customerpnlrefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerpnlrefreshActionPerformed(evt);
            }
        });

        customerfilterbtn.setBackground(new java.awt.Color(0, 50, 0));
        customerfilterbtn.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        customerfilterbtn.setForeground(new java.awt.Color(255, 255, 255));
        customerfilterbtn.setText("Filter");
        customerfilterbtn.setContentAreaFilled(false);
        customerfilterbtn.setFocusPainted(false);
        customerfilterbtn.setOpaque(true);
        customerfilterbtn.setPreferredSize(new java.awt.Dimension(140, 40));
        customerfilterbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                customerfilterbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                customerfilterbtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                customerfilterbtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                customerfilterbtnMouseReleased(evt);
            }
        });
        customerfilterbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerfilterbtnActionPerformed(evt);
            }
        });

        customermembershipfiltercombo.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        customermembershipfiltercombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Copper", "Silver", "Gold", "Platinum", "Diamond" }));

        customerlistprintreportbtn.setBackground(new java.awt.Color(0, 50, 0));
        customerlistprintreportbtn.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        customerlistprintreportbtn.setForeground(new java.awt.Color(255, 255, 255));
        customerlistprintreportbtn.setText("Print Report");
        customerlistprintreportbtn.setContentAreaFilled(false);
        customerlistprintreportbtn.setFocusPainted(false);
        customerlistprintreportbtn.setOpaque(true);
        customerlistprintreportbtn.setPreferredSize(new java.awt.Dimension(140, 40));
        customerlistprintreportbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                customerlistprintreportbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                customerlistprintreportbtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                customerlistprintreportbtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                customerlistprintreportbtnMouseReleased(evt);
            }
        });
        customerlistprintreportbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerlistprintreportbtnActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Membership");

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(customerfilterbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(customerlistprintreportbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(customermembershipfiltercombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel32Layout.createSequentialGroup()
                        .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(searchbtnemp2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                .addComponent(addnewcustomerbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(deletecustomerbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(updatecustomerbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(customerpnlrefresh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(customersearchfield0))
                            .addComponent(jLabel10))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel32Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(customersearchfield0, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(searchbtnemp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addnewcustomerbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deletecustomerbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updatecustomerbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jLabel10)
                .addGap(4, 4, 4)
                .addComponent(customermembershipfiltercombo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(customerfilterbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(customerlistprintreportbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(customerpnlrefresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel34.setBackground(new java.awt.Color(100, 183, 0));

        customeridfield.setEditable(false);
        customeridfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        customeridfield.setSelectionColor(new java.awt.Color(100, 183, 0));

        customergendercombo.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        customergendercombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        customergendercombo.setOpaque(false);

        jLabel46.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(255, 255, 255));
        jLabel46.setText("Customer Id");

        customernamefield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        customernamefield.setSelectionColor(new java.awt.Color(100, 183, 0));

        jLabel49.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(255, 255, 255));
        jLabel49.setText("Name");

        customeragefield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        customeragefield.setSelectionColor(new java.awt.Color(100, 183, 0));

        jLabel50.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(255, 255, 255));
        jLabel50.setText("Age");

        jLabel51.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(255, 255, 255));
        jLabel51.setText("Gender");

        jLabel52.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(255, 255, 255));
        jLabel52.setText("Membership");

        membershipsholder1.setBackground(new java.awt.Color(100, 183, 0));
        membershipsholder1.setLayout(new java.awt.CardLayout());

        copperlogo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        copperlogo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/coppermembership.jpg"))); // NOI18N
        membershipsholder1.add(copperlogo1, "card2");

        silverlogo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        silverlogo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/silvermembership.jpg"))); // NOI18N
        membershipsholder1.add(silverlogo1, "card3");

        goldenlogo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        goldenlogo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/goldmembership.jpg"))); // NOI18N
        membershipsholder1.add(goldenlogo1, "card4");

        platinumlogo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        platinumlogo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/platinummembership.jpg"))); // NOI18N
        membershipsholder1.add(platinumlogo1, "card5");

        diamondlogo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        diamondlogo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/diamondmembership.jpg"))); // NOI18N
        membershipsholder1.add(diamondlogo1, "card6");

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel46)
                    .addComponent(jLabel49)
                    .addComponent(jLabel50)
                    .addComponent(jLabel51))
                .addGap(40, 40, 40)
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(customeridfield)
                    .addComponent(customeragefield)
                    .addComponent(customernamefield)
                    .addComponent(customergendercombo, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel52)
                .addGap(248, 248, 248))
            .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel34Layout.createSequentialGroup()
                    .addContainerGap(439, Short.MAX_VALUE)
                    .addComponent(membershipsholder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(123, 123, 123)))
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel34Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel46)
                            .addComponent(customeridfield, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(customernamefield, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel49))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(customeragefield, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel50))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(customergendercombo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel51)))
                    .addGroup(jPanel34Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel52)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel34Layout.createSequentialGroup()
                    .addContainerGap(44, Short.MAX_VALUE)
                    .addComponent(membershipsholder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(34, 34, 34)))
        );

        javax.swing.GroupLayout mngcustomerpnlLayout = new javax.swing.GroupLayout(mngcustomerpnl);
        mngcustomerpnl.setLayout(mngcustomerpnlLayout);
        mngcustomerpnlLayout.setHorizontalGroup(
            mngcustomerpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mngcustomerpnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mngcustomerpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        mngcustomerpnlLayout.setVerticalGroup(
            mngcustomerpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mngcustomerpnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mngcustomerpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(mngcustomerpnlLayout.createSequentialGroup()
                        .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        customercard.add(mngcustomerpnl, "card3");

        cusreportpnl.setBackground(new java.awt.Color(0, 50, 0));

        jPanel36.setBackground(new java.awt.Color(100, 183, 0));

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 981, Short.MAX_VALUE)
            .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel36Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jTabbedPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 961, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 557, Short.MAX_VALUE)
            .addGroup(jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel36Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jTabbedPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 547, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout cusreportpnlLayout = new javax.swing.GroupLayout(cusreportpnl);
        cusreportpnl.setLayout(cusreportpnlLayout);
        cusreportpnlLayout.setHorizontalGroup(
            cusreportpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cusreportpnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        cusreportpnlLayout.setVerticalGroup(
            cusreportpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cusreportpnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        customercard.add(cusreportpnl, "card3");

        cusprofilepnl.setBackground(new java.awt.Color(0, 50, 0));

        jPanel37.setBackground(new java.awt.Color(100, 183, 0));

        jPanel41.setBackground(new java.awt.Color(100, 183, 0));

        customerid2.setEditable(false);
        customerid2.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        customerid2.setSelectionColor(new java.awt.Color(100, 183, 0));

        cusgender2.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        cusgender2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        cusgender2.setOpaque(false);

        jLabel64.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel64.setForeground(new java.awt.Color(255, 255, 255));
        jLabel64.setText("Customer Id");

        cusnamefield2.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        cusnamefield2.setSelectionColor(new java.awt.Color(100, 183, 0));

        jLabel71.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel71.setForeground(new java.awt.Color(255, 255, 255));
        jLabel71.setText("Name");

        cusagefield2.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        cusagefield2.setSelectionColor(new java.awt.Color(100, 183, 0));

        jLabel72.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel72.setForeground(new java.awt.Color(255, 255, 255));
        jLabel72.setText("Age");

        jLabel73.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel73.setForeground(new java.awt.Color(255, 255, 255));
        jLabel73.setText("Gender");

        jLabel74.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel74.setForeground(new java.awt.Color(255, 255, 255));
        jLabel74.setText("Membership");

        membershipsholder2.setBackground(new java.awt.Color(100, 183, 0));
        membershipsholder2.setLayout(new java.awt.CardLayout());

        copperlogo2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        copperlogo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/coppermembership.jpg"))); // NOI18N
        membershipsholder2.add(copperlogo2, "card2");

        silverlogo2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        silverlogo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/silvermembership.jpg"))); // NOI18N
        membershipsholder2.add(silverlogo2, "card3");

        goldenlogo2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        goldenlogo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/goldmembership.jpg"))); // NOI18N
        membershipsholder2.add(goldenlogo2, "card4");

        platinumlogo2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        platinumlogo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/platinummembership.jpg"))); // NOI18N
        membershipsholder2.add(platinumlogo2, "card5");

        diamondlogo2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        diamondlogo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/diamondmembership.jpg"))); // NOI18N
        membershipsholder2.add(diamondlogo2, "card6");

        javax.swing.GroupLayout jPanel41Layout = new javax.swing.GroupLayout(jPanel41);
        jPanel41.setLayout(jPanel41Layout);
        jPanel41Layout.setHorizontalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel41Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel64)
                    .addComponent(jLabel71)
                    .addComponent(jLabel72)
                    .addComponent(jLabel73))
                .addGap(40, 40, 40)
                .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(customerid2)
                    .addComponent(cusagefield2)
                    .addComponent(cusnamefield2)
                    .addComponent(cusgender2, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel74)
                .addGap(248, 248, 248))
            .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel41Layout.createSequentialGroup()
                    .addContainerGap(419, Short.MAX_VALUE)
                    .addComponent(membershipsholder2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(123, 123, 123)))
        );
        jPanel41Layout.setVerticalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel41Layout.createSequentialGroup()
                .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel41Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel64)
                            .addComponent(customerid2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(cusnamefield2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel71))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(cusagefield2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel72))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(cusgender2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel73)))
                    .addGroup(jPanel41Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel74)))
                .addContainerGap(17, Short.MAX_VALUE))
            .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel41Layout.createSequentialGroup()
                    .addContainerGap(50, Short.MAX_VALUE)
                    .addComponent(membershipsholder2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(34, 34, 34)))
        );

        customertabl2.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        customertabl2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer Id", "Name", "Age", "Gender", "Membership"
            }
        ));
        customertabl2.setGridColor(new java.awt.Color(255, 255, 255));
        customertabl2.setRowHeight(22);
        customertabl2.setSelectionBackground(new java.awt.Color(100, 183, 0));
        jScrollPane17.setViewportView(customertabl2);

        javax.swing.GroupLayout jPanel37Layout = new javax.swing.GroupLayout(jPanel37);
        jPanel37.setLayout(jPanel37Layout);
        jPanel37Layout.setHorizontalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel37Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane17, javax.swing.GroupLayout.DEFAULT_SIZE, 731, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel37Layout.setVerticalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addComponent(jPanel41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel39.setBackground(new java.awt.Color(100, 183, 0));

        searchbtnemp3.setBackground(new java.awt.Color(0, 50, 0));
        searchbtnemp3.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        searchbtnemp3.setForeground(new java.awt.Color(255, 255, 255));
        searchbtnemp3.setText("Search");
        searchbtnemp3.setContentAreaFilled(false);
        searchbtnemp3.setFocusPainted(false);
        searchbtnemp3.setOpaque(true);
        searchbtnemp3.setPreferredSize(new java.awt.Dimension(140, 40));
        searchbtnemp3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchbtnemp3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                searchbtnemp3MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                searchbtnemp3MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                searchbtnemp3MouseReleased(evt);
            }
        });
        searchbtnemp3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnemp3ActionPerformed(evt);
            }
        });

        searchcusfield2.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        searchcusfield2.setSelectionColor(new java.awt.Color(100, 183, 0));

        refreshbtnemp3.setBackground(new java.awt.Color(0, 50, 0));
        refreshbtnemp3.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        refreshbtnemp3.setForeground(new java.awt.Color(255, 255, 255));
        refreshbtnemp3.setText("Refresh");
        refreshbtnemp3.setContentAreaFilled(false);
        refreshbtnemp3.setFocusPainted(false);
        refreshbtnemp3.setOpaque(true);
        refreshbtnemp3.setPreferredSize(new java.awt.Dimension(140, 40));
        refreshbtnemp3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                refreshbtnemp3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                refreshbtnemp3MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                refreshbtnemp3MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                refreshbtnemp3MouseReleased(evt);
            }
        });
        refreshbtnemp3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshbtnemp3ActionPerformed(evt);
            }
        });

        printcusprofile.setBackground(new java.awt.Color(0, 50, 0));
        printcusprofile.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        printcusprofile.setForeground(new java.awt.Color(255, 255, 255));
        printcusprofile.setText("Print Profile Report");
        printcusprofile.setContentAreaFilled(false);
        printcusprofile.setFocusPainted(false);
        printcusprofile.setOpaque(true);
        printcusprofile.setPreferredSize(new java.awt.Dimension(140, 40));
        printcusprofile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                printcusprofileMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                printcusprofileMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                printcusprofileMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                printcusprofileMouseReleased(evt);
            }
        });
        printcusprofile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printcusprofileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel39Layout = new javax.swing.GroupLayout(jPanel39);
        jPanel39.setLayout(jPanel39Layout);
        jPanel39Layout.setHorizontalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel39Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(printcusprofile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel39Layout.createSequentialGroup()
                        .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchbtnemp3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(refreshbtnemp3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(searchcusfield2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel39Layout.setVerticalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel39Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(searchcusfield2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(searchbtnemp3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(printcusprofile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(refreshbtnemp3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout cusprofilepnlLayout = new javax.swing.GroupLayout(cusprofilepnl);
        cusprofilepnl.setLayout(cusprofilepnlLayout);
        cusprofilepnlLayout.setHorizontalGroup(
            cusprofilepnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cusprofilepnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        cusprofilepnlLayout.setVerticalGroup(
            cusprofilepnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cusprofilepnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cusprofilepnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        customercard.add(cusprofilepnl, "card4");

        cusprofilereportpnl.setBackground(new java.awt.Color(0, 50, 0));

        jPanel40.setBackground(new java.awt.Color(100, 183, 0));

        javax.swing.GroupLayout jPanel40Layout = new javax.swing.GroupLayout(jPanel40);
        jPanel40.setLayout(jPanel40Layout);
        jPanel40Layout.setHorizontalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 981, Short.MAX_VALUE)
            .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel40Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(customerprofiletabbed, javax.swing.GroupLayout.DEFAULT_SIZE, 961, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel40Layout.setVerticalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 557, Short.MAX_VALUE)
            .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel40Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(customerprofiletabbed, javax.swing.GroupLayout.DEFAULT_SIZE, 547, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout cusprofilereportpnlLayout = new javax.swing.GroupLayout(cusprofilereportpnl);
        cusprofilereportpnl.setLayout(cusprofilereportpnlLayout);
        cusprofilereportpnlLayout.setHorizontalGroup(
            cusprofilereportpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cusprofilereportpnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        cusprofilereportpnlLayout.setVerticalGroup(
            cusprofilereportpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cusprofilereportpnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        customercard.add(cusprofilereportpnl, "card5");

        membershipmng.setBackground(new java.awt.Color(0, 50, 0));

        jPanel42.setBackground(new java.awt.Color(100, 183, 0));

        jLabel76.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel76.setForeground(new java.awt.Color(255, 255, 255));
        jLabel76.setText("Membership Points");

        membershipsholder.setBackground(new java.awt.Color(100, 183, 0));
        membershipsholder.setLayout(new java.awt.CardLayout());

        copperlogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        copperlogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/coppermembership.jpg"))); // NOI18N
        membershipsholder.add(copperlogo, "card2");

        silverlogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        silverlogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/silvermembership.jpg"))); // NOI18N
        membershipsholder.add(silverlogo, "card3");

        goldenlogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        goldenlogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/goldmembership.jpg"))); // NOI18N
        membershipsholder.add(goldenlogo, "card4");

        platinumlogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        platinumlogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/platinummembership.jpg"))); // NOI18N
        membershipsholder.add(platinumlogo, "card5");

        diamondlogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        diamondlogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/diamondmembership.jpg"))); // NOI18N
        membershipsholder.add(diamondlogo, "card6");

        membershipcombo.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        membershipcombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Copper", "Silver", "Gold", "Platinum", "Diamond" }));
        membershipcombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                membershipcomboActionPerformed(evt);
            }
        });

        jLabel78.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel78.setForeground(new java.awt.Color(255, 255, 255));
        jLabel78.setText("Number of Orders Needed");

        ordersneededfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        ordersneededfield.setSelectionColor(new java.awt.Color(100, 183, 0));

        membershipalliinonebtn.setBackground(new java.awt.Color(0, 50, 0));
        membershipalliinonebtn.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        membershipalliinonebtn.setForeground(new java.awt.Color(255, 255, 255));
        membershipalliinonebtn.setText("Change");
        membershipalliinonebtn.setContentAreaFilled(false);
        membershipalliinonebtn.setFocusPainted(false);
        membershipalliinonebtn.setOpaque(true);
        membershipalliinonebtn.setPreferredSize(new java.awt.Dimension(140, 40));
        membershipalliinonebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                membershipalliinonebtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                membershipalliinonebtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                membershipalliinonebtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                membershipalliinonebtnMouseReleased(evt);
            }
        });
        membershipalliinonebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                membershipalliinonebtnActionPerformed(evt);
            }
        });

        jLabel79.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel79.setForeground(new java.awt.Color(255, 255, 255));
        jLabel79.setText("Membership Discount");

        membeshipdiscountfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        membeshipdiscountfield.setSelectionColor(new java.awt.Color(100, 183, 0));

        javax.swing.GroupLayout jPanel42Layout = new javax.swing.GroupLayout(jPanel42);
        jPanel42.setLayout(jPanel42Layout);
        jPanel42Layout.setHorizontalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel42Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(membershipcombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(membershipsholder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(membershipalliinonebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ordersneededfield, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(membeshipdiscountfield, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel42Layout.createSequentialGroup()
                        .addGroup(jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel76)
                            .addComponent(jLabel78)
                            .addComponent(jLabel79))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel42Layout.setVerticalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel42Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel76)
                .addGap(18, 18, 18)
                .addComponent(membershipcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(membershipsholder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel78)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ordersneededfield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel79)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(membeshipdiscountfield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(membershipalliinonebtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel44.setBackground(new java.awt.Color(100, 183, 0));

        membershiptable.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        membershiptable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer Id", "Name", "Membership", "Number of Orders", "Membership Discount"
            }
        ));
        membershiptable.setGridColor(new java.awt.Color(255, 255, 255));
        membershiptable.setRowHeight(22);
        membershiptable.setSelectionBackground(new java.awt.Color(100, 183, 0));
        jScrollPane16.setViewportView(membershiptable);

        jLabel77.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel77.setForeground(new java.awt.Color(255, 255, 255));
        jLabel77.setText("Customers in Selected Membership");

        javax.swing.GroupLayout jPanel44Layout = new javax.swing.GroupLayout(jPanel44);
        jPanel44.setLayout(jPanel44Layout);
        jPanel44Layout.setHorizontalGroup(
            jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel44Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.DEFAULT_SIZE, 722, Short.MAX_VALUE)
                    .addGroup(jPanel44Layout.createSequentialGroup()
                        .addComponent(jLabel77)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel44Layout.setVerticalGroup(
            jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel44Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel77)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane16, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout membershipmngLayout = new javax.swing.GroupLayout(membershipmng);
        membershipmng.setLayout(membershipmngLayout);
        membershipmngLayout.setHorizontalGroup(
            membershipmngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(membershipmngLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel44, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        membershipmngLayout.setVerticalGroup(
            membershipmngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(membershipmngLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(membershipmngLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel44, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        customercard.add(membershipmng, "card6");

        javax.swing.GroupLayout customerpnlLayout = new javax.swing.GroupLayout(customerpnl);
        customerpnl.setLayout(customerpnlLayout);
        customerpnlLayout.setHorizontalGroup(
            customerpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerpnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managecuslbl, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(cusreportlbl, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(cusprofileslbl, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(cusprofilereportslbl, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(membershipmnglbl, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(customerpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, customerpnlLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(customercard, javax.swing.GroupLayout.DEFAULT_SIZE, 1001, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        customerpnlLayout.setVerticalGroup(
            customerpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerpnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(customerpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(managecuslbl, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cusreportlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cusprofileslbl, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cusprofilereportslbl, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(membershipmnglbl, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(590, Short.MAX_VALUE))
            .addGroup(customerpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(customerpnlLayout.createSequentialGroup()
                    .addGap(63, 63, 63)
                    .addComponent(customercard, javax.swing.GroupLayout.DEFAULT_SIZE, 579, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        rightside.add(customerpnl, "card5");

        logspnl.setBackground(new java.awt.Color(206, 252, 151));
        logspnl.setFocusTraversalPolicyProvider(true);

        logcardpnl.setBackground(new java.awt.Color(0, 50, 0));
        logcardpnl.setLayout(new java.awt.CardLayout());

        activitylogpanel.setBackground(new java.awt.Color(0, 50, 0));

        jPanel21.setBackground(new java.awt.Color(100, 183, 0));

        jLabel32.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Filter Log");

        refreshinlogbtn.setBackground(new java.awt.Color(0, 50, 0));
        refreshinlogbtn.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        refreshinlogbtn.setForeground(new java.awt.Color(255, 255, 255));
        refreshinlogbtn.setText("Refresh");
        refreshinlogbtn.setContentAreaFilled(false);
        refreshinlogbtn.setFocusPainted(false);
        refreshinlogbtn.setOpaque(true);
        refreshinlogbtn.setPreferredSize(new java.awt.Dimension(140, 40));
        refreshinlogbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                refreshinlogbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                refreshinlogbtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                refreshinlogbtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                refreshinlogbtnMouseReleased(evt);
            }
        });
        refreshinlogbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshinlogbtnActionPerformed(evt);
            }
        });

        jLabel38.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setText("User");

        jLabel39.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText("Activity");

        filteruserfield.setBackground(new java.awt.Color(0, 153, 255));
        filteruserfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 18)); // NOI18N
        filteruserfield.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Member" }));
        filteruserfield.setOpaque(false);
        filteruserfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filteruserfieldActionPerformed(evt);
            }
        });

        activityfieldcombo.setBackground(new java.awt.Color(0, 153, 255));
        activityfieldcombo.setFont(new java.awt.Font("Microsoft JhengHei", 0, 18)); // NOI18N
        activityfieldcombo.setOpaque(false);
        activityfieldcombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activityfieldcomboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel39)
                            .addComponent(jLabel38))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(activityfieldcombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(filteruserfield, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 306, Short.MAX_VALUE)
                        .addComponent(refreshinlogbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel32)
                        .addGap(9, 9, 9)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(activityfieldcombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel39))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(filteruserfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel38)))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(refreshinlogbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(100, 183, 0));

        Activitylogtable.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        Activitylogtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date Time", "User", "Activity Type", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Activitylogtable.setGridColor(new java.awt.Color(255, 255, 255));
        Activitylogtable.setRowHeight(22);
        Activitylogtable.setSelectionBackground(new java.awt.Color(100, 183, 0));
        Activitylogtable.getTableHeader().setReorderingAllowed(false);
        jScrollPane7.setViewportView(Activitylogtable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout activitylogpanelLayout = new javax.swing.GroupLayout(activitylogpanel);
        activitylogpanel.setLayout(activitylogpanelLayout);
        activitylogpanelLayout.setHorizontalGroup(
            activitylogpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(activitylogpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(activitylogpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        activitylogpanelLayout.setVerticalGroup(
            activitylogpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(activitylogpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        logcardpnl.add(activitylogpanel, "card2");

        printlogpanel.setBackground(new java.awt.Color(0, 50, 0));

        reportholder.setBackground(new java.awt.Color(100, 183, 0));

        javax.swing.GroupLayout reportholderLayout = new javax.swing.GroupLayout(reportholder);
        reportholder.setLayout(reportholderLayout);
        reportholderLayout.setHorizontalGroup(
            reportholderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportholderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 906, Short.MAX_VALUE)
                .addContainerGap())
        );
        reportholderLayout.setVerticalGroup(
            reportholderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reportholderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout printlogpanelLayout = new javax.swing.GroupLayout(printlogpanel);
        printlogpanel.setLayout(printlogpanelLayout);
        printlogpanelLayout.setHorizontalGroup(
            printlogpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(printlogpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(reportholder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        printlogpanelLayout.setVerticalGroup(
            printlogpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(printlogpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(reportholder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        logcardpnl.add(printlogpanel, "card3");

        attendancereportpnl.setBackground(new java.awt.Color(0, 50, 0));

        jPanel54.setBackground(new java.awt.Color(100, 183, 0));

        javax.swing.GroupLayout jPanel54Layout = new javax.swing.GroupLayout(jPanel54);
        jPanel54.setLayout(jPanel54Layout);
        jPanel54Layout.setHorizontalGroup(
            jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel54Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(attendancetabb, javax.swing.GroupLayout.DEFAULT_SIZE, 906, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel54Layout.setVerticalGroup(
            jPanel54Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel54Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(attendancetabb, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout attendancereportpnlLayout = new javax.swing.GroupLayout(attendancereportpnl);
        attendancereportpnl.setLayout(attendancereportpnlLayout);
        attendancereportpnlLayout.setHorizontalGroup(
            attendancereportpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(attendancereportpnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel54, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        attendancereportpnlLayout.setVerticalGroup(
            attendancereportpnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(attendancereportpnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel54, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        logcardpnl.add(attendancereportpnl, "card5");

        printloglbl.setBackground(new java.awt.Color(100, 183, 0));
        printloglbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        printloglbl.setForeground(new java.awt.Color(255, 255, 255));
        printloglbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        printloglbl.setText("Print Log");
        printloglbl.setOpaque(true);
        printloglbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                printloglblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                printloglblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                printloglblMouseExited(evt);
            }
        });

        Activityloglbl.setBackground(new java.awt.Color(0, 50, 0));
        Activityloglbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        Activityloglbl.setForeground(new java.awt.Color(255, 255, 255));
        Activityloglbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Activityloglbl.setText("Activity Log");
        Activityloglbl.setOpaque(true);
        Activityloglbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ActivityloglblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ActivityloglblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ActivityloglblMouseExited(evt);
            }
        });

        attendancereportlbl.setBackground(new java.awt.Color(100, 183, 0));
        attendancereportlbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        attendancereportlbl.setForeground(new java.awt.Color(255, 255, 255));
        attendancereportlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        attendancereportlbl.setText("Attendance Report");
        attendancereportlbl.setOpaque(true);
        attendancereportlbl.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                attendancereportlblAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        attendancereportlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendancereportlblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                attendancereportlblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                attendancereportlblMouseExited(evt);
            }
        });

        javax.swing.GroupLayout logspnlLayout = new javax.swing.GroupLayout(logspnl);
        logspnl.setLayout(logspnlLayout);
        logspnlLayout.setHorizontalGroup(
            logspnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logspnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(logspnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logcardpnl, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(logspnlLayout.createSequentialGroup()
                        .addComponent(Activityloglbl, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(printloglbl, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(attendancereportlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(378, 378, 378)))
                .addContainerGap())
        );
        logspnlLayout.setVerticalGroup(
            logspnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, logspnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(logspnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Activityloglbl, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addGroup(logspnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(printloglbl, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                        .addComponent(attendancereportlbl, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)))
                .addGap(0, 0, 0)
                .addComponent(logcardpnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        rightside.add(logspnl, "card7");

        settingspnl.setBackground(new java.awt.Color(206, 252, 151));
        settingspnl.setFocusTraversalPolicyProvider(true);

        accountssettingslbl.setBackground(new java.awt.Color(0, 50, 0));
        accountssettingslbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        accountssettingslbl.setForeground(new java.awt.Color(255, 255, 255));
        accountssettingslbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        accountssettingslbl.setText("Account Settings");
        accountssettingslbl.setOpaque(true);
        accountssettingslbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                accountssettingslblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                accountssettingslblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                accountssettingslblMouseExited(evt);
            }
        });

        emaillbl.setBackground(new java.awt.Color(100, 183, 0));
        emaillbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        emaillbl.setForeground(new java.awt.Color(255, 255, 255));
        emaillbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emaillbl.setText("Email Client");
        emaillbl.setOpaque(true);
        emaillbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emaillblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                emaillblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                emaillblMouseExited(evt);
            }
        });

        backuprestorelbl.setBackground(new java.awt.Color(100, 183, 0));
        backuprestorelbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        backuprestorelbl.setForeground(new java.awt.Color(255, 255, 255));
        backuprestorelbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backuprestorelbl.setText("Backup and Restore");
        backuprestorelbl.setOpaque(true);
        backuprestorelbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backuprestorelblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backuprestorelblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backuprestorelblMouseExited(evt);
            }
        });

        aboutlbl.setBackground(new java.awt.Color(100, 183, 0));
        aboutlbl.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        aboutlbl.setForeground(new java.awt.Color(255, 255, 255));
        aboutlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        aboutlbl.setText("About");
        aboutlbl.setOpaque(true);
        aboutlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aboutlblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                aboutlblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                aboutlblMouseExited(evt);
            }
        });

        settingscard.setBackground(new java.awt.Color(0, 50, 0));
        settingscard.setLayout(new java.awt.CardLayout());

        genaral.setBackground(new java.awt.Color(0, 50, 0));
        genaral.setEnabled(false);

        jPanel11.setBackground(new java.awt.Color(100, 183, 0));

        admincurrentpasswordinsettings.setFont(new java.awt.Font("Microsoft JhengHei", 0, 18)); // NOI18N
        admincurrentpasswordinsettings.setSelectionColor(new java.awt.Color(100, 183, 0));
        admincurrentpasswordinsettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admincurrentpasswordinsettingsActionPerformed(evt);
            }
        });

        newadminpasswordfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 18)); // NOI18N
        newadminpasswordfield.setEnabled(false);
        newadminpasswordfield.setSelectionColor(new java.awt.Color(100, 183, 0));
        newadminpasswordfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newadminpasswordfieldActionPerformed(evt);
            }
        });

        retypenewadminpasswordfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 18)); // NOI18N
        retypenewadminpasswordfield.setEnabled(false);
        retypenewadminpasswordfield.setSelectionColor(new java.awt.Color(100, 183, 0));
        retypenewadminpasswordfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retypenewadminpasswordfieldActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Re-type New Password");

        jLabel25.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("New Password");

        jLabel24.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Current Password");

        jLabel23.setBackground(new java.awt.Color(0, 50, 0));
        jLabel23.setFont(new java.awt.Font("Microsoft JhengHei", 0, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Change Admin Password");

        passwrdchangebtn.setBackground(new java.awt.Color(0, 50, 0));
        passwrdchangebtn.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        passwrdchangebtn.setForeground(new java.awt.Color(255, 255, 255));
        passwrdchangebtn.setText("Change");
        passwrdchangebtn.setContentAreaFilled(false);
        passwrdchangebtn.setFocusPainted(false);
        passwrdchangebtn.setOpaque(true);
        passwrdchangebtn.setPreferredSize(new java.awt.Dimension(140, 40));
        passwrdchangebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                passwrdchangebtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                passwrdchangebtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                passwrdchangebtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                passwrdchangebtnMouseReleased(evt);
            }
        });
        passwrdchangebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwrdchangebtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addComponent(admincurrentpasswordinsettings, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stateofcurrentpasswordadmin, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addComponent(jLabel25))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(newadminpasswordfield, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                            .addComponent(retypenewadminpasswordfield))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stateofcurrentpasswordadmin2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stateofcurrentpasswordadmin1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(passwrdchangebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel25)
                    .addComponent(newadminpasswordfield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stateofcurrentpasswordadmin1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(admincurrentpasswordinsettings, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(stateofcurrentpasswordadmin, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(retypenewadminpasswordfield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stateofcurrentpasswordadmin2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26))
                .addGap(18, 18, 18)
                .addComponent(passwrdchangebtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel48.setBackground(new java.awt.Color(100, 183, 0));

        newemppasswordfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 18)); // NOI18N
        newemppasswordfield.setEnabled(false);
        newemppasswordfield.setSelectionColor(new java.awt.Color(100, 183, 0));
        newemppasswordfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newemppasswordfieldActionPerformed(evt);
            }
        });

        retypenewemppasswordfield3.setFont(new java.awt.Font("Microsoft JhengHei", 0, 18)); // NOI18N
        retypenewemppasswordfield3.setEnabled(false);
        retypenewemppasswordfield3.setSelectionColor(new java.awt.Color(100, 183, 0));
        retypenewemppasswordfield3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retypenewemppasswordfield3ActionPerformed(evt);
            }
        });

        jLabel84.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel84.setForeground(new java.awt.Color(255, 255, 255));
        jLabel84.setText("Re-type New Password");

        jLabel85.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel85.setForeground(new java.awt.Color(255, 255, 255));
        jLabel85.setText("New Password");

        jLabel86.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel86.setForeground(new java.awt.Color(255, 255, 255));
        jLabel86.setText("Employee Id");

        jLabel87.setBackground(new java.awt.Color(0, 50, 0));
        jLabel87.setFont(new java.awt.Font("Microsoft JhengHei", 0, 18)); // NOI18N
        jLabel87.setForeground(new java.awt.Color(255, 255, 255));
        jLabel87.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel87.setText("Manage Employee Account");

        passwrdchangebtn3.setBackground(new java.awt.Color(0, 50, 0));
        passwrdchangebtn3.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        passwrdchangebtn3.setForeground(new java.awt.Color(255, 255, 255));
        passwrdchangebtn3.setText("Add");
        passwrdchangebtn3.setContentAreaFilled(false);
        passwrdchangebtn3.setFocusPainted(false);
        passwrdchangebtn3.setOpaque(true);
        passwrdchangebtn3.setPreferredSize(new java.awt.Dimension(140, 40));
        passwrdchangebtn3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                passwrdchangebtn3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                passwrdchangebtn3MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                passwrdchangebtn3MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                passwrdchangebtn3MouseReleased(evt);
            }
        });
        passwrdchangebtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwrdchangebtn3ActionPerformed(evt);
            }
        });

        jLabel88.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel88.setForeground(new java.awt.Color(255, 255, 255));
        jLabel88.setText("Username");

        usernameforempid.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        usernameforempid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameforempidActionPerformed(evt);
            }
        });

        jTextField11.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        jTextField11.setSelectionColor(new java.awt.Color(100, 183, 0));

        javax.swing.GroupLayout jPanel48Layout = new javax.swing.GroupLayout(jPanel48);
        jPanel48.setLayout(jPanel48Layout);
        jPanel48Layout.setHorizontalGroup(
            jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel48Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel48Layout.createSequentialGroup()
                        .addComponent(jLabel87)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel48Layout.createSequentialGroup()
                        .addComponent(jLabel86)
                        .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel48Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 668, Short.MAX_VALUE)
                                .addComponent(passwrdchangebtn3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel48Layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel48Layout.createSequentialGroup()
                                        .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel84)
                                            .addComponent(jLabel85))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(newemppasswordfield, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(retypenewemppasswordfield3, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel48Layout.createSequentialGroup()
                                        .addComponent(jLabel88)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(usernameforempid, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(employeeusernamestateinsettings1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(employeenewpassstateinsettings, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(employeeretypepassstateinsettings, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        jPanel48Layout.setVerticalGroup(
            jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel48Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel87, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel88)
                    .addComponent(jLabel86)
                    .addComponent(employeeusernamestateinsettings1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameforempid)
                    .addComponent(jTextField11, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel85)
                    .addComponent(newemppasswordfield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(employeenewpassstateinsettings, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(retypenewemppasswordfield3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel84)
                    .addComponent(employeeretypepassstateinsettings, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(passwrdchangebtn3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout genaralLayout = new javax.swing.GroupLayout(genaral);
        genaral.setLayout(genaralLayout);
        genaralLayout.setHorizontalGroup(
            genaralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(genaralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(genaralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        genaralLayout.setVerticalGroup(
            genaralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(genaralLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel48, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        settingscard.add(genaral, "card2");

        Email.setBackground(new java.awt.Color(0, 50, 0));

        jPanel5.setBackground(new java.awt.Color(100, 183, 0));

        emailrecetable.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        emailrecetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee id", "Name", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        emailrecetable.setGridColor(new java.awt.Color(255, 255, 255));
        emailrecetable.setRowHeight(22);
        emailrecetable.setSelectionBackground(new java.awt.Color(100, 183, 0));
        emailrecetable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emailrecetableMouseClicked(evt);
            }
        });
        jScrollPane19.setViewportView(emailrecetable);

        jLabel69.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel69.setForeground(new java.awt.Color(255, 255, 255));
        jLabel69.setText("Recipients");

        jLabel80.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel80.setForeground(new java.awt.Color(255, 255, 255));
        jLabel80.setText("Email");

        emailfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        emailfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        emailfield.setSelectionColor(new java.awt.Color(100, 183, 0));
        emailfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                emailfieldKeyPressed(evt);
            }
        });

        jLabel82.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel82.setForeground(new java.awt.Color(255, 255, 255));
        jLabel82.setText("Email Password");

        jLabel83.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel83.setForeground(new java.awt.Color(255, 255, 255));
        jLabel83.setText("Recipient Email");

        receemailfromtable.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        receemailfromtable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        receemailfromtable.setSelectionColor(new java.awt.Color(100, 183, 0));

        jLabel89.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel89.setForeground(new java.awt.Color(255, 255, 255));
        jLabel89.setText("Authentication");

        jPasswordField1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane19, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel80)
                            .addComponent(jLabel82))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emailfield)
                            .addComponent(jPasswordField1)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel83)
                        .addGap(23, 23, 23)
                        .addComponent(receemailfromtable))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel89, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel89)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(emailfield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel80))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel82)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel83)
                    .addComponent(receemailfromtable, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jLabel69)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel7.setBackground(new java.awt.Color(100, 183, 0));

        fromfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        fromfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        fromfield.setSelectionColor(new java.awt.Color(100, 183, 0));

        jLabel45.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(255, 255, 255));
        jLabel45.setText("From");

        jLabel65.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel65.setForeground(new java.awt.Color(255, 255, 255));
        jLabel65.setText("Mail Client");

        tofield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        tofield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        tofield.setSelectionColor(new java.awt.Color(100, 183, 0));

        jLabel67.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel67.setForeground(new java.awt.Color(255, 255, 255));
        jLabel67.setText("To");

        restorelocationfield3.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        restorelocationfield3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        restorelocationfield3.setSelectionColor(new java.awt.Color(100, 183, 0));

        jLabel68.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel68.setForeground(new java.awt.Color(255, 255, 255));
        jLabel68.setText("Subject");

        sendmailbtn.setBackground(new java.awt.Color(0, 50, 0));
        sendmailbtn.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        sendmailbtn.setForeground(new java.awt.Color(255, 255, 255));
        sendmailbtn.setText("Send");
        sendmailbtn.setContentAreaFilled(false);
        sendmailbtn.setFocusPainted(false);
        sendmailbtn.setOpaque(true);
        sendmailbtn.setPreferredSize(new java.awt.Dimension(140, 40));
        sendmailbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                sendmailbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                sendmailbtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                sendmailbtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                sendmailbtnMouseReleased(evt);
            }
        });
        sendmailbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendmailbtnActionPerformed(evt);
            }
        });

        jTextPane1.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jTextPane1.setSelectionColor(new java.awt.Color(100, 183, 0));
        jScrollPane15.setViewportView(jTextPane1);

        browsepathinrestore2.setBackground(new java.awt.Color(0, 50, 0));
        browsepathinrestore2.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        browsepathinrestore2.setForeground(new java.awt.Color(255, 255, 255));
        browsepathinrestore2.setText("Attach File");
        browsepathinrestore2.setContentAreaFilled(false);
        browsepathinrestore2.setFocusPainted(false);
        browsepathinrestore2.setOpaque(true);
        browsepathinrestore2.setPreferredSize(new java.awt.Dimension(140, 40));
        browsepathinrestore2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                browsepathinrestore2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                browsepathinrestore2MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                browsepathinrestore2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                browsepathinrestore2MouseReleased(evt);
            }
        });
        browsepathinrestore2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browsepathinrestore2ActionPerformed(evt);
            }
        });

        attachpathmail.setEditable(false);
        attachpathmail.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        attachpathmail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        attachpathmail.setSelectionColor(new java.awt.Color(100, 183, 0));

        namefrattachment.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        namefrattachment.setText("attachment");
        namefrattachment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        namefrattachment.setSelectionColor(new java.awt.Color(100, 183, 0));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane15)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel45)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fromfield, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel67)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tofield, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel68)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                        .addComponent(restorelocationfield3, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(attachpathmail)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel65)
                            .addComponent(sendmailbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(browsepathinrestore2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(namefrattachment)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel65)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(fromfield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(tofield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel67))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(restorelocationfield3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel68))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(attachpathmail, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(browsepathinrestore2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(namefrattachment, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(sendmailbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout EmailLayout = new javax.swing.GroupLayout(Email);
        Email.setLayout(EmailLayout);
        EmailLayout.setHorizontalGroup(
            EmailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EmailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        EmailLayout.setVerticalGroup(
            EmailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EmailLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EmailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        settingscard.add(Email, "card5");

        backuprestorepanel.setBackground(new java.awt.Color(0, 50, 0));

        jPanel12.setBackground(new java.awt.Color(100, 183, 0));

        jLabel17.setFont(new java.awt.Font("Microsoft JhengHei", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Backup Database");

        Backupbtn.setBackground(new java.awt.Color(0, 50, 0));
        Backupbtn.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        Backupbtn.setForeground(new java.awt.Color(255, 255, 255));
        Backupbtn.setText("Backup");
        Backupbtn.setContentAreaFilled(false);
        Backupbtn.setFocusPainted(false);
        Backupbtn.setOpaque(true);
        Backupbtn.setPreferredSize(new java.awt.Dimension(140, 40));
        Backupbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BackupbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BackupbtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BackupbtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BackupbtnMouseReleased(evt);
            }
        });
        Backupbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackupbtnActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Select location");

        backuplocationfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        backuplocationfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        backuplocationfield.setSelectionColor(new java.awt.Color(100, 183, 0));

        browsepathinbackup.setBackground(new java.awt.Color(0, 50, 0));
        browsepathinbackup.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        browsepathinbackup.setForeground(new java.awt.Color(255, 255, 255));
        browsepathinbackup.setText("Browse Path");
        browsepathinbackup.setContentAreaFilled(false);
        browsepathinbackup.setFocusPainted(false);
        browsepathinbackup.setOpaque(true);
        browsepathinbackup.setPreferredSize(new java.awt.Dimension(140, 40));
        browsepathinbackup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                browsepathinbackupMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                browsepathinbackupMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                browsepathinbackupMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                browsepathinbackupMouseReleased(evt);
            }
        });
        browsepathinbackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browsepathinbackupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jLabel17)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(backuplocationfield, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(stateofbackuplbl, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Backupbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browsepathinbackup, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addGap(11, 11, 11)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(backuplocationfield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(browsepathinbackup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(stateofbackuplbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Backupbtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jPanel22.setBackground(new java.awt.Color(100, 183, 0));

        jLabel28.setFont(new java.awt.Font("Microsoft JhengHei", 0, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Restore Database");

        restorebtn.setBackground(new java.awt.Color(0, 50, 0));
        restorebtn.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        restorebtn.setForeground(new java.awt.Color(255, 255, 255));
        restorebtn.setText("Restore");
        restorebtn.setContentAreaFilled(false);
        restorebtn.setFocusPainted(false);
        restorebtn.setOpaque(true);
        restorebtn.setPreferredSize(new java.awt.Dimension(140, 40));
        restorebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                restorebtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                restorebtnMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                restorebtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                restorebtnMouseReleased(evt);
            }
        });
        restorebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restorebtnActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Open location");

        restorelocationfield.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        restorelocationfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        restorelocationfield.setSelectionColor(new java.awt.Color(100, 183, 0));

        browsepathinrestore.setBackground(new java.awt.Color(0, 50, 0));
        browsepathinrestore.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        browsepathinrestore.setForeground(new java.awt.Color(255, 255, 255));
        browsepathinrestore.setText("Browse Path");
        browsepathinrestore.setContentAreaFilled(false);
        browsepathinrestore.setFocusPainted(false);
        browsepathinrestore.setOpaque(true);
        browsepathinrestore.setPreferredSize(new java.awt.Dimension(140, 40));
        browsepathinrestore.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                browsepathinrestoreMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                browsepathinrestoreMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                browsepathinrestoreMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                browsepathinrestoreMouseReleased(evt);
            }
        });
        browsepathinrestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browsepathinrestoreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29)
                    .addComponent(jLabel28)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(restorelocationfield, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(stateofrestorelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 210, Short.MAX_VALUE)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(restorebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browsepathinrestore, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel28)
                .addGap(11, 11, 11)
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(restorelocationfield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(browsepathinrestore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(stateofrestorelbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(restorebtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout backuprestorepanelLayout = new javax.swing.GroupLayout(backuprestorepanel);
        backuprestorepanel.setLayout(backuprestorepanelLayout);
        backuprestorepanelLayout.setHorizontalGroup(
            backuprestorepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backuprestorepanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(backuprestorepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        backuprestorepanelLayout.setVerticalGroup(
            backuprestorepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backuprestorepanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(136, Short.MAX_VALUE))
        );

        settingscard.add(backuprestorepanel, "card5");

        about.setBackground(new java.awt.Color(0, 50, 0));

        jPanel15.setBackground(new java.awt.Color(100, 183, 0));

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frames/images/vivex.png"))); // NOI18N
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel22MouseClicked(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Microsoft JhengHei", 0, 18)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("vivex.ml");
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Microsoft JhengHei", 0, 18)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("@StudioSnowflake");
        jLabel27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel27MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, 961, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout aboutLayout = new javax.swing.GroupLayout(about);
        about.setLayout(aboutLayout);
        aboutLayout.setHorizontalGroup(
            aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        aboutLayout.setVerticalGroup(
            aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        settingscard.add(about, "card6");

        javax.swing.GroupLayout settingspnlLayout = new javax.swing.GroupLayout(settingspnl);
        settingspnl.setLayout(settingspnlLayout);
        settingspnlLayout.setHorizontalGroup(
            settingspnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingspnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(settingspnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(settingspnlLayout.createSequentialGroup()
                        .addComponent(accountssettingslbl, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(emaillbl, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(backuprestorelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(aboutlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(settingscard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        settingspnlLayout.setVerticalGroup(
            settingspnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingspnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(settingspnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(accountssettingslbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(backuprestorelbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addGroup(settingspnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(aboutlbl, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                        .addComponent(emaillbl, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)))
                .addGap(0, 0, 0)
                .addComponent(settingscard, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        rightside.add(settingspnl, "card8");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(leftside, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(middle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(rightside, javax.swing.GroupLayout.PREFERRED_SIZE, 1021, Short.MAX_VALUE))
            .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(footer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(middle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rightside, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 653, Short.MAX_VALUE)
                    .addComponent(leftside, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(footer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("images/mainicon.png")));
    }

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked

        sectionlogout.setVisible(true); //open sectionlogout panel
        close.setIcon(null); //remove icon at close
    }//GEN-LAST:event_closeMouseClicked

    private void closeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseEntered

    }//GEN-LAST:event_closeMouseEntered

    private void closeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseExited

    }//GEN-LAST:event_closeMouseExited

    private void setactivitytypescombo() {
        try {
            ResultSet rs = DB.DB.search("SELECT DISTINCT `activitytype` FROM `log`");
            while (rs.next()) {
                activityfieldcombo.addItem(rs.getString(1));
            }
        } catch (Exception e) {
        }
    }

    private void refreshstockupdatetable() {
        try {
            ResultSet rs = DB.DB.search("SELECT * FROM `stock` WHERE `Quantity` =0");
            DefaultTableModel dtm = (DefaultTableModel) stockupdatetable.getModel();
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString(2));
                v.add(rs.getString(3));
                v.add(rs.getString(13));
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void generateInvoiceID() {
        try {

            ResultSet rs = DB.DB.search("select count(DISTINCT Bill_number) as x from `salesrecords` ");
            if (rs.next()) {

                int rowcount = Integer.parseInt(rs.getString("x"));
                rowcount++;
                this.Sellidfield.setText("" + rowcount);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void generatenewempID() {
        try {

            ResultSet rs = DB.DB.search("select count(DISTINCT `empid`) as x from `emp` ");
            if (rs.next()) {

                int rowcount = Integer.parseInt(rs.getString("x"));
                rowcount++;
                this.empidfield.setText("" + rowcount);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void generatenewaccID() {
        try {

            ResultSet rs = DB.DB.search("select count(DISTINCT `accountId`) as x from `account` ");
            if (rs.next()) {

                int rowcount = Integer.parseInt(rs.getString("x"));
                this.jTextField11.setText("" + rowcount);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void generatenewcusID() {
        try {

            ResultSet rs = DB.DB.search("select count(DISTINCT `cusid`) as x from `customers` ");
            if (rs.next()) {

                int rowcount = Integer.parseInt(rs.getString("x"));
                rowcount++;
                this.customeridfield.setText("" + rowcount);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void settodaysalesearned() {
        try {
            ResultSet rs = DB.DB.search("SELECT SUM(Sale_Earnings)  FROM `salesrecords` WHERE cast(DateTime as date) = '" + salesday.getText() + "' ");
            if (rs.next()) {
                double todyearn = rs.getDouble(1);
                String currencyunit = currencyinvisible.getText();
                todayearned.setText(currencyunit + " " + todyearn);
            }
            String month = salesday.getText().toString().substring(0, 7);
            ResultSet rs2 = DB.DB.search("SELECT SUM(Sale_Earnings)  FROM `salesrecords` WHERE cast(DateTime as date) LIKE '" + month + "%' ");
            if (rs2.next()) {
                double todyearn = rs2.getDouble(1);
                String currencyunit = currencyinvisible.getText();
                jLabel11.setText(currencyunit + " " + todyearn);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void settodaysalesnumber() {
        try {
            ResultSet rs = DB.DB.search("SELECT COUNT(DISTINCT Bill_number) FROM `salesrecords` WHERE cast(DateTime as date) = '" + salesday.getText() + "' ");
            if (rs.next()) {
                todaysaleslbl.setText(rs.getString(1));
            }
            String month = salesday.getText().substring(0, 7);

            ResultSet rs2 = DB.DB.search("SELECT COUNT(DISTINCT Bill_number) FROM `salesrecords` WHERE cast(DateTime as date) LIKE '" + month + "%' ");
            if (rs2.next()) {
                jLabel12.setText(rs2.getString(1));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    private void hometoggleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hometoggleMouseEntered
        hometoggle.setText("Home");
        hometoggle.setIcon(null);
    }//GEN-LAST:event_hometoggleMouseEntered

    private void hometoggleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hometoggleMouseExited
        hometoggle.setText(null);
        icon = new ImageIcon(getClass().getResource("images/home-icon-silhouette (1).png"));
        hometoggle.setIcon(icon);
    }//GEN-LAST:event_hometoggleMouseExited

    private void stockstoggleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stockstoggleMouseExited
        stockstoggle.setText(null);
        icon = new ImageIcon(getClass().getResource("images/factory-stock-house (1).png"));
        stockstoggle.setIcon(icon);
    }//GEN-LAST:event_stockstoggleMouseExited

    private void salestoggleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salestoggleMouseExited
        salestoggle.setText(null);
        icon = new ImageIcon(getClass().getResource("images/tag (1).png"));
        salestoggle.setIcon(icon);
    }//GEN-LAST:event_salestoggleMouseExited

    private void employeetoggleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeetoggleMouseExited
        employeetoggle.setText(null);
        icon = new ImageIcon(getClass().getResource("images/businessmen-having-a-meeting (1).png"));
        employeetoggle.setIcon(icon);
    }//GEN-LAST:event_employeetoggleMouseExited

    private void customertoggleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customertoggleMouseExited
        customertoggle.setText(null);
        icon = new ImageIcon(getClass().getResource("images/customer (1).png"));
        customertoggle.setIcon(icon);
    }//GEN-LAST:event_customertoggleMouseExited

    private void logtoggleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logtoggleMouseExited
        logtoggle.setText(null);
        icon = new ImageIcon(getClass().getResource("images/log-file-format (1).png"));
        logtoggle.setIcon(icon);
    }//GEN-LAST:event_logtoggleMouseExited

    private void settingstoggleMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingstoggleMouseExited
        settingstoggle.setText(null);
        icon = new ImageIcon(getClass().getResource("images/settings-gears (1).png"));
        settingstoggle.setIcon(icon);
    }//GEN-LAST:event_settingstoggleMouseExited

    private void stockstoggleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stockstoggleMouseEntered
        stockstoggle.setText("Stock");
        stockstoggle.setIcon(null);
    }//GEN-LAST:event_stockstoggleMouseEntered

    private void salestoggleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salestoggleMouseEntered
        salestoggle.setText("Sales");
        salestoggle.setIcon(null);
    }//GEN-LAST:event_salestoggleMouseEntered

    private void employeetoggleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeetoggleMouseEntered
        employeetoggle.setText("Employees");
        employeetoggle.setIcon(null);
    }//GEN-LAST:event_employeetoggleMouseEntered

    private void customertoggleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customertoggleMouseEntered
        customertoggle.setText("Customers");
        customertoggle.setIcon(null);
    }//GEN-LAST:event_customertoggleMouseEntered

    private void logtoggleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logtoggleMouseEntered
        logtoggle.setText("Logs");
        logtoggle.setIcon(null);
    }//GEN-LAST:event_logtoggleMouseEntered

    private void hometoggleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hometoggleMouseClicked
        hometoggle.setBackground(new Color(206, 252, 151));
        settingstoggle.setBackground(new Color(111, 204, 0));
        stockstoggle.setBackground(new Color(111, 204, 0));
        customertoggle.setBackground(new Color(111, 204, 0));
        employeetoggle.setBackground(new Color(111, 204, 0));
        logtoggle.setBackground(new Color(111, 204, 0));
        salestoggle.setBackground(new Color(111, 204, 0));
        homepnl.setVisible(true);
        stockpnl.setVisible(false);
        salespnl.setVisible(false);
        employeepnl.setVisible(false);
        customerpnl.setVisible(false);
        logspnl.setVisible(false);
        settingspnl.setVisible(false);
    }//GEN-LAST:event_hometoggleMouseClicked

    private void settingstoggleMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingstoggleMouseEntered
        settingstoggle.setText("Settings");
        settingstoggle.setIcon(null);
    }//GEN-LAST:event_settingstoggleMouseEntered

    private void stockstoggleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stockstoggleMouseClicked
        stockstoggle.setBackground(new Color(206, 252, 151));
        settingstoggle.setBackground(new Color(111, 204, 0));
        hometoggle.setBackground(new Color(111, 204, 0));
        customertoggle.setBackground(new Color(111, 204, 0));
        employeetoggle.setBackground(new Color(111, 204, 0));
        logtoggle.setBackground(new Color(111, 204, 0));
        salestoggle.setBackground(new Color(111, 204, 0));
        homepnl.setVisible(false);
        stockpnl.setVisible(true);
        salespnl.setVisible(false);
        employeepnl.setVisible(false);
        customerpnl.setVisible(false);
        logspnl.setVisible(false);
        settingspnl.setVisible(false);
    }//GEN-LAST:event_stockstoggleMouseClicked

    private void salestoggleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salestoggleMouseClicked
        salestoggle.setBackground(new Color(206, 252, 151));
        settingstoggle.setBackground(new Color(111, 204, 0));
        stockstoggle.setBackground(new Color(111, 204, 0));
        customertoggle.setBackground(new Color(111, 204, 0));
        employeetoggle.setBackground(new Color(111, 204, 0));
        logtoggle.setBackground(new Color(111, 204, 0));
        hometoggle.setBackground(new Color(111, 204, 0));
        homepnl.setVisible(false);
        stockpnl.setVisible(false);
        salespnl.setVisible(true);
        employeepnl.setVisible(false);
        customerpnl.setVisible(false);
        logspnl.setVisible(false);
        settingspnl.setVisible(false);
    }//GEN-LAST:event_salestoggleMouseClicked

    private void employeetoggleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeetoggleMouseClicked
        employeetoggle.setBackground(new Color(206, 252, 151));
        settingstoggle.setBackground(new Color(111, 204, 0));
        stockstoggle.setBackground(new Color(111, 204, 0));
        customertoggle.setBackground(new Color(111, 204, 0));
        hometoggle.setBackground(new Color(111, 204, 0));
        logtoggle.setBackground(new Color(111, 204, 0));
        salestoggle.setBackground(new Color(111, 204, 0));
        homepnl.setVisible(false);
        stockpnl.setVisible(false);
        salespnl.setVisible(false);
        employeepnl.setVisible(true);
        customerpnl.setVisible(false);
        logspnl.setVisible(false);
        settingspnl.setVisible(false);
        DefaultTableModel dtm = (DefaultTableModel) employeetable.getModel();
        dtm.setRowCount(0);
        DefaultTableModel dtm2 = (DefaultTableModel) emptable2.getModel();
        dtm2.setRowCount(0);
        refreshemptable();
        generatenewempID();
        setempfiltercombo();
    }//GEN-LAST:event_employeetoggleMouseClicked

    private void customertoggleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customertoggleMouseClicked
        customertoggle.setBackground(new Color(206, 252, 151));
        settingstoggle.setBackground(new Color(111, 204, 0));
        stockstoggle.setBackground(new Color(111, 204, 0));
        hometoggle.setBackground(new Color(111, 204, 0));
        employeetoggle.setBackground(new Color(111, 204, 0));
        logtoggle.setBackground(new Color(111, 204, 0));
        salestoggle.setBackground(new Color(111, 204, 0));
        homepnl.setVisible(false);
        stockpnl.setVisible(false);
        salespnl.setVisible(false);
        employeepnl.setVisible(false);
        customerpnl.setVisible(true);
        logspnl.setVisible(false);
        settingspnl.setVisible(false);
        generatenewcusID();
        DefaultTableModel dtm = (DefaultTableModel) customertable.getModel();
        dtm.setRowCount(0);
        refreshcustable();
        membershipstuff();

    }//GEN-LAST:event_customertoggleMouseClicked

    private void membershipstuff() {
        try {
            ResultSet rs = DB.DB.search("SELECT * FROM  `memberships` ");
            if (!rs.isBeforeFirst()) {
                DB.DB.iud("INSERT INTO `memberships`(`membershiptypes`,`ordersneeded`, `membershipdiscount`) VALUES ('Copper','0','0')");
                DB.DB.iud("INSERT INTO `memberships`(`membershiptypes`,`ordersneeded`, `membershipdiscount`) VALUES ('Silver','0','0')");
                DB.DB.iud("INSERT INTO `memberships`(`membershiptypes`,`ordersneeded`, `membershipdiscount`) VALUES ('Gold','0','0')");
                DB.DB.iud("INSERT INTO `memberships`(`membershiptypes`,`ordersneeded`, `membershipdiscount`) VALUES ('Platinum','0','0')");
                DB.DB.iud("INSERT INTO `memberships`(`membershiptypes`,`ordersneeded`, `membershipdiscount`) VALUES ('Diamond','0','0')");

            }
            int copperorders = 0;
            int silverorders = 0;
            int goldorders = 0;
            int platorders = 0;
            int diamondorders = 0;

            ResultSet copperrs = DB.DB.search("SELECT `ordersneeded` FROM `memberships` WHERE membershiptypes='Copper' ");
            while (copperrs.next()) {
                copperorders = copperrs.getInt(1);
            }
            ResultSet silverrs = DB.DB.search("SELECT `ordersneeded` FROM `memberships` WHERE membershiptypes='Silver' ");
            while (copperrs.next()) {
                silverorders = silverrs.getInt(1);
            }
            ResultSet goldrs = DB.DB.search("SELECT `ordersneeded` FROM `memberships` WHERE membershiptypes='Gold' ");
            while (copperrs.next()) {
                goldorders = goldrs.getInt(1);
            }
            ResultSet platinumrs = DB.DB.search("SELECT `ordersneeded` FROM `memberships` WHERE membershiptypes='Plantinum' ");
            while (copperrs.next()) {
                platorders = platinumrs.getInt(1);
            }
            ResultSet diamondrs = DB.DB.search("SELECT `ordersneeded` FROM `memberships` WHERE membershiptypes='Diamond' ");
            while (copperrs.next()) {
                diamondorders = diamondrs.getInt(1);
            }
            ResultSet ordersrs = DB.DB.search("SELECT  `cusid`,`nooforders` FROM `customers`");
            while (ordersrs.next()) {
                if (ordersrs.getInt(2) >= copperorders) {
                    DB.DB.iud("Update `customers` SET membership='Copper' ");
                } else if (ordersrs.getInt(2) >= silverorders) {
                    DB.DB.iud("Update `customers` SET membership='Silver' ");
                } else if (ordersrs.getInt(2) >= goldorders) {
                    DB.DB.iud("Update `customers` SET membership='Gold' ");
                } else if (ordersrs.getInt(2) >= platorders) {
                    DB.DB.iud("Update `customers` SET membership='Platinum' ");
                } else if (ordersrs.getInt(2) >= diamondorders) {
                    DB.DB.iud("Update `customers` SET membership='Diamond' ");
                }

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void logtoggleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logtoggleMouseClicked
        logtoggle.setBackground(new Color(206, 252, 151));
        settingstoggle.setBackground(new Color(111, 204, 0));
        stockstoggle.setBackground(new Color(111, 204, 0));
        customertoggle.setBackground(new Color(111, 204, 0));
        employeetoggle.setBackground(new Color(111, 204, 0));
        hometoggle.setBackground(new Color(111, 204, 0));
        salestoggle.setBackground(new Color(111, 204, 0));
        homepnl.setVisible(false);
        stockpnl.setVisible(false);
        salespnl.setVisible(false);
        employeepnl.setVisible(false);
        customerpnl.setVisible(false);
        logspnl.setVisible(true);
        settingspnl.setVisible(false);
        DefaultTableModel dtmlog = (DefaultTableModel) Activitylogtable.getModel();
        dtmlog.setRowCount(0);
        refreshlogtable();
    }//GEN-LAST:event_logtoggleMouseClicked

    private void settingstoggleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingstoggleMouseClicked
        settingstoggle.setBackground(new Color(206, 252, 151));
        hometoggle.setBackground(new Color(111, 204, 0));
        stockstoggle.setBackground(new Color(111, 204, 0));
        customertoggle.setBackground(new Color(111, 204, 0));
        employeetoggle.setBackground(new Color(111, 204, 0));
        logtoggle.setBackground(new Color(111, 204, 0));
        salestoggle.setBackground(new Color(111, 204, 0));
        homepnl.setVisible(false);
        stockpnl.setVisible(false);
        salespnl.setVisible(false);
        employeepnl.setVisible(false);
        customerpnl.setVisible(false);
        logspnl.setVisible(false);
        settingspnl.setVisible(true);
        generatenewaccID();
    }//GEN-LAST:event_settingstoggleMouseClicked

    private void passwrdchangebtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwrdchangebtnMouseEntered
        passwrdchangebtn.setBackground(new java.awt.Color(0, 112, 0));
    }//GEN-LAST:event_passwrdchangebtnMouseEntered

    private void passwrdchangebtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwrdchangebtnMouseExited
        passwrdchangebtn.setBackground(new java.awt.Color(0, 50, 0));
    }//GEN-LAST:event_passwrdchangebtnMouseExited

    private void passwrdchangebtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwrdchangebtnMousePressed
        passwrdchangebtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_passwrdchangebtnMousePressed

    private void passwrdchangebtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwrdchangebtnMouseReleased
        passwrdchangebtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_passwrdchangebtnMouseReleased

    private void passwrdchangebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwrdchangebtnActionPerformed
        if (newadminpasswordfield.getText().toString().equals(retypenewadminpasswordfield.getText().toString())) {
            ImageIcon statusiconcurrentpassword = new ImageIcon(getClass().getResource("images/success.png"));
            stateofcurrentpasswordadmin1.setIcon(statusiconcurrentpassword);
            try {
                DB.DB.iud("update accounts  set password='" + retypenewadminpasswordfield.getText() + "' where accounttype='Admin'");
                DB.DB.iud("INSERT INTO `log`(`accountId`,`user`, `activitytype`, `description`) VALUES ('0','Admin','Password Change','Admin Chnaged Password Success')");
                JOptionPane.showMessageDialog(this, "Admin Password Changed !");
                newadminpasswordfield.setEnabled(false);
                retypenewadminpasswordfield.setEnabled(false);
                admincurrentpasswordinsettings.setText(null);
                newadminpasswordfield.setText(null);
                retypenewadminpasswordfield.setText(null);
                admincurrentpasswordinsettings.setEditable(true);
                stateofcurrentpasswordadmin.setIcon(null);
                stateofcurrentpasswordadmin1.setIcon(null);
                stateofcurrentpasswordadmin2.setIcon(null);
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Retype Incorrect !");
            ImageIcon statusiconcurrentpassword = new ImageIcon(getClass().getResource("images/failed.png"));
            stateofcurrentpasswordadmin2.setIcon(statusiconcurrentpassword);
            newadminpasswordfield.setText(null);
            retypenewadminpasswordfield.setText(null);
            admincurrentpasswordinsettings.setEditable(false);
        }
    }//GEN-LAST:event_passwrdchangebtnActionPerformed

    private void admincurrentpasswordinsettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admincurrentpasswordinsettingsActionPerformed

        String admincurrentpassword = String.valueOf(admincurrentpasswordinsettings.getPassword());
        boolean currentpasswordsuccess = false;
        try {
            ResultSet rs = DB.DB.search("SELECT * FROM  `accounts` WHERE  `username` LIKE  'Admin' AND `accounttype` LIKE  'Admin' AND  `password` =  '" + admincurrentpassword + "'");
            if (rs.next()) {
                currentpasswordsuccess = true;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        if (currentpasswordsuccess) {
            ImageIcon statusiconcurrentpassword = new ImageIcon(getClass().getResource("images/success.png"));
            stateofcurrentpasswordadmin.setIcon(statusiconcurrentpassword);
            newadminpasswordfield.setEnabled(true);

            admincurrentpasswordinsettings.setEditable(false);
            newadminpasswordfield.grabFocus();

        } else {
            ImageIcon statusiconcurrentpassword = new ImageIcon(getClass().getResource("images/failed.png"));
            stateofcurrentpasswordadmin.setIcon(statusiconcurrentpassword);
            try {
                DB.DB.iud("INSERT INTO `log`(`accountId`,`user`, `activitytype`, `description`) VALUES ('0','Admin','Password Change','Admin Chnaged Password Failed')");
            } catch (Exception ex) {

            }
        }
    }//GEN-LAST:event_admincurrentpasswordinsettingsActionPerformed

    private void newadminpasswordfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newadminpasswordfieldActionPerformed
        if (newadminpasswordfield.getText().isEmpty()) {
            ImageIcon statusiconcurrentpassword = new ImageIcon(getClass().getResource("images/failed.png"));
            stateofcurrentpasswordadmin1.setIcon(statusiconcurrentpassword);
        } else {
            ImageIcon statusiconcurrentpassword = new ImageIcon(getClass().getResource("images/success.png"));
            stateofcurrentpasswordadmin1.setIcon(statusiconcurrentpassword);
            retypenewadminpasswordfield.setEnabled(true);
        }
    }//GEN-LAST:event_newadminpasswordfieldActionPerformed

    private void retypenewadminpasswordfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retypenewadminpasswordfieldActionPerformed
        if (newadminpasswordfield.getText().toString().equals(retypenewadminpasswordfield.getText().toString())) {
            ImageIcon statusiconcurrentpassword = new ImageIcon(getClass().getResource("images/success.png"));
            stateofcurrentpasswordadmin1.setIcon(statusiconcurrentpassword);
            try {
                DB.DB.iud("update accounts  set password='" + retypenewadminpasswordfield.getText() + "' where accounttype='Admin'");
                DB.DB.iud("INSERT INTO `log`(`accountId`,`user`, `activitytype`, `description`) VALUES ('0','Admin','Password Change','Admin Chnaged Password Success')");
                JOptionPane.showMessageDialog(this, "Admin Password Changed !");
                newadminpasswordfield.setEnabled(false);
                retypenewadminpasswordfield.setEnabled(false);
                admincurrentpasswordinsettings.setText(null);
                newadminpasswordfield.setText(null);
                retypenewadminpasswordfield.setText(null);
                admincurrentpasswordinsettings.setEditable(true);
                stateofcurrentpasswordadmin.setIcon(null);
                stateofcurrentpasswordadmin1.setIcon(null);
                stateofcurrentpasswordadmin2.setIcon(null);
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Retype Incorrect !");
            ImageIcon statusiconcurrentpassword = new ImageIcon(getClass().getResource("images/failed.png"));
            stateofcurrentpasswordadmin2.setIcon(statusiconcurrentpassword);
            newadminpasswordfield.setText(null);
            retypenewadminpasswordfield.setText(null);
            admincurrentpasswordinsettings.setEditable(false);
        }

    }//GEN-LAST:event_retypenewadminpasswordfieldActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        sectionlogout.setVisible(false);
        icon = new ImageIcon(getClass().getResource("images/log-out-symbol.png"));
        close.setIcon(icon);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         String activitylogapplicationexit = "INSERT INTO `log`(`accountId`,`user`, `activitytype`, `description`) VALUES ('0','Admin','Admin Logout','Admin Logged Out')"; 
        try {
            DB.DB.iud(activitylogapplicationexit); //update log
        } catch (Exception e) {
            e.printStackTrace();
        }
        Login logn = new Login();
        this.dispose(); //close this frame
        logn.setVisible(true); //open login frame
    }//GEN-LAST:event_jButton1ActionPerformed

    private void lastactivitiesrefresh() {
         try {
            ResultSet rs = DB.DB.search("SELECT cast(datetime as TIME),`activitytype` FROM `log` ORDER BY `log`.datetime DESC LIMIT 10");
            Vector v = new Vector();  //new vector object
            while (rs.next()) { //if quary has results
                v.add("  " + rs.getString(1) + "-" + rs.getString(2));
            }
            jList1.setListData(v); //add vector to jlist1
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void printloglblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printloglblMouseClicked
        jTabbedPane1.removeAll();
        new Thread() {
            public void run() {
                try {
                    String path = "C:\\JasperReports\\ActivityLogReportGFS.jrxml";
                    JasperReport compileReport = JasperCompileManager.compileReport(path);
                    JasperPrint jp = JasperFillManager.fillReport(compileReport, null, DB.DB.getConnection());
                    //                JasperViewer.viewReport(jp);
                    jTabbedPane1.add("report", new JPanel().add(new JRViewer(jp)));
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }.start();

        activitylogpanel.setVisible(false);
        printlogpanel.setVisible(true);

        attendancereportpnl.setVisible(false);
        Activityloglbl.setBackground(new Color(100, 183, 0));
        printloglbl.setBackground(new Color(0, 50, 0));

        attendancereportlbl.setBackground(new Color(100, 183, 0));
    }//GEN-LAST:event_printloglblMouseClicked

    private void printloglblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printloglblMouseEntered

    }//GEN-LAST:event_printloglblMouseEntered

    private void printloglblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printloglblMouseExited

    }//GEN-LAST:event_printloglblMouseExited

    private void ActivityloglblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ActivityloglblMouseClicked

        DefaultTableModel dtmlog = (DefaultTableModel) Activitylogtable.getModel();
        dtmlog.setRowCount(0);
        refreshlogtable();
        activitylogpanel.setVisible(true);
        printlogpanel.setVisible(false);
        attendancereportpnl.setVisible(false);
        printloglbl.setBackground(new Color(100, 183, 0));
        Activityloglbl.setBackground(new Color(0, 50, 0));
        attendancereportlbl.setBackground(new Color(100, 183, 0));
    }//GEN-LAST:event_ActivityloglblMouseClicked

    private void ActivityloglblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ActivityloglblMouseEntered

    }//GEN-LAST:event_ActivityloglblMouseEntered

    private void ActivityloglblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ActivityloglblMouseExited

    }//GEN-LAST:event_ActivityloglblMouseExited

    private void refreshinlogbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshinlogbtnMouseEntered
        refreshinlogbtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_refreshinlogbtnMouseEntered

    private void refreshinlogbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshinlogbtnMouseExited
        refreshinlogbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_refreshinlogbtnMouseExited

    private void refreshinlogbtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshinlogbtnMousePressed
        refreshinlogbtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_refreshinlogbtnMousePressed

    private void refreshinlogbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshinlogbtnMouseReleased
        refreshinlogbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_refreshinlogbtnMouseReleased

    private void refreshinlogbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshinlogbtnActionPerformed
        DefaultTableModel dtmlog = (DefaultTableModel) Activitylogtable.getModel();
        dtmlog.setRowCount(0);
        refreshlogtable();
    }//GEN-LAST:event_refreshinlogbtnActionPerformed

    private void settodaysalestable() {

        try {
            ResultSet rs = DB.DB.search("SELECT * FROM `salesrecords` WHERE cast(DateTime as date) = '" + salesday.getText() + "' ORDER BY DateTime DESC"); 
            DefaultTableModel dtm = (DefaultTableModel) todaysales.getModel(); //new table midel
            while (rs.next()) { //if quary got results
                Vector v = new Vector(); //new vector
                v.add(rs.getString(4));
                v.add(rs.getString(2));
                v.add(rs.getString(3));
                v.add(rs.getString(5));
                v.add(rs.getString(16));
                dtm.addRow(v); //add raw to table model
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setmonthlysalestable() {
         String month = salesday.getText().substring(0, 7); // substring of vlaue at salesday
        try {
            ResultSet rs = DB.DB.search("SELECT * FROM `salesrecords` WHERE cast(DateTime as date) LIKE '" + month + "%' ORDER BY DateTime DESC");
            DefaultTableModel dtm = (DefaultTableModel) monthlysales.getModel(); //new table model
            while (rs.next()) { //if quary got results
                Vector v = new Vector(); //new vector
                v.add(rs.getString(4));
                v.add(rs.getString(2));
                v.add(rs.getString(3));
                v.add(rs.getString(5));
                v.add(rs.getString(16));
                dtm.addRow(v); //add raw to table
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void refreshlogtable() {
        try {
            ResultSet rs = DB.DB.search("SELECT * FROM `log` ORDER BY `log`.datetime DESC");
            DefaultTableModel dtm = (DefaultTableModel) Activitylogtable.getModel(); //new table model
            while (rs.next()) { //if quary got results
                Vector v = new Vector(); //new vector
                v.add(rs.getString(5));
                v.add(rs.getString(3));
                v.add(rs.getString(4));
                v.add(rs.getString(6));
                dtm.addRow(v); //add raw to table
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void filteruserfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filteruserfieldActionPerformed

         try {

            ResultSet rs = DB.DB.search("SELECT * FROM  `log` WHERE  `user` LIKE  '" + filteruserfield.getSelectedItem().toString() + "' AND `activitytype` LIKE  '" + activityfieldcombo.getSelectedItem().toString() + "' ORDER BY `log`.datetime DESC");
            DefaultTableModel dtm = (DefaultTableModel) Activitylogtable.getModel(); //new table model
            dtm.setRowCount(0); //raw count 0
            while (rs.next()) { //if quary got results
                Vector v = new Vector(); //new vector
                v.add(rs.getString(5));
                v.add(rs.getString(3));
                v.add(rs.getString(4));
                v.add(rs.getString(6));
                dtm.addRow(v); //add raw to table model
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_filteruserfieldActionPerformed

    private void activityfieldcomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activityfieldcomboActionPerformed

        try {

            ResultSet rs = DB.DB.search("SELECT * FROM  `log` WHERE  `user` LIKE  '" + filteruserfield.getSelectedItem().toString() + "' AND `activitytype` LIKE  '" + activityfieldcombo.getSelectedItem().toString() + "' ORDER BY `log`.datetime DESC");
            DefaultTableModel dtm = (DefaultTableModel) Activitylogtable.getModel(); //new table
            dtm.setRowCount(0); //raw count 0
            while (rs.next()) {//if quary got results
                Vector v = new Vector();
                v.add(rs.getString(5));
                v.add(rs.getString(3));
                v.add(rs.getString(4));
                v.add(rs.getString(6));
                dtm.addRow(v); //add raw to table model
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_activityfieldcomboActionPerformed

    private void ViewStockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewStockMouseClicked

        DefaultTableModel dtm = (DefaultTableModel) viewstocktable.getModel();
        dtm.setRowCount(0);
        refreshstocktable();
        tableview.setVisible(true);
        detailmode.setVisible(false);

        Viewstockpanel.setVisible(true);
        Addstockpanel.setVisible(false);

        grnrecordspanel.setVisible(false);
        stockupdatepanel.setVisible(false);
        printstockpanel.setVisible(false);
        printgrnpanel.setVisible(false);
        printstocktabbed.removeAll();
        ViewStock.setBackground(new Color(0, 50, 0));
        AddStock.setBackground(new Color(100, 183, 0));
        stockupdate.setBackground(new Color(100, 183, 0));
        PrintStock.setBackground(new Color(100, 183, 0));
        PrintGRN.setBackground(new Color(100, 183, 0));
        grnrecordslbl.setBackground(new Color(100, 183, 0));
    }//GEN-LAST:event_ViewStockMouseClicked

    private void AddStockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddStockMouseClicked
        AddStock.setBackground(new Color(0, 50, 0));
        ViewStock.setBackground(new Color(100, 183, 0));
        AddStock.setBackground(new Color(0, 50, 0));
        stockupdate.setBackground(new Color(100, 183, 0));
        PrintStock.setBackground(new Color(100, 183, 0));
        PrintGRN.setBackground(new Color(100, 183, 0));
        grnrecordslbl.setBackground(new Color(100, 183, 0));
        printstocktabbed.removeAll();
        Viewstockpanel.setVisible(false);
        Addstockpanel.setVisible(true);
        grnrecordspanel.setVisible(false);
        stockupdatepanel.setVisible(false);
        printstockpanel.setVisible(false);
        printgrnpanel.setVisible(false);
    }//GEN-LAST:event_AddStockMouseClicked

    private void stockupdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stockupdateMouseClicked
        DefaultTableModel dtmupdatestk = (DefaultTableModel) stockupdatetable.getModel();//new table model
        dtmupdatestk.setRowCount(0);//raw count 0
        refreshstockupdatetable();
        jTextField2.setText(null);
        jTextField1.setText(null);
        jTextField3.setText(null);
        jTextField6.setText(null);
        jTextField4.setText(null);
        jTextField5.setText(null);
        ViewStock.setBackground(new Color(100, 183, 0));
        AddStock.setBackground(new Color(100, 183, 0));
        stockupdate.setBackground(new Color(0, 50, 0));
        PrintStock.setBackground(new Color(100, 183, 0));
        PrintGRN.setBackground(new Color(100, 183, 0));
        grnrecordslbl.setBackground(new Color(100, 183, 0));
        Viewstockpanel.setVisible(false);
        Addstockpanel.setVisible(false);
        grnrecordspanel.setVisible(false);
        stockupdatepanel.setVisible(true);
        printstockpanel.setVisible(false);
        printgrnpanel.setVisible(false);
    }//GEN-LAST:event_stockupdateMouseClicked

    private void PrintStockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrintStockMouseClicked
         printstocktabbed.removeAll(); //reamove all components from printstocktabbed
        new Thread() {
            public void run() {
                try {
                    String path = "C:\\JasperReports\\StockReportGFS.jrxml";
                    JasperReport compileReport = JasperCompileManager.compileReport(path);
                    JasperPrint jp = JasperFillManager.fillReport(compileReport, null, DB.DB.getConnection());
                    printstocktabbed.add("report", new JPanel().add(new JRViewer(jp)));
                } catch (Exception e) {

                }
            }
        }.start();

        ViewStock.setBackground(new Color(100, 183, 0));//background change
        AddStock.setBackground(new Color(100, 183, 0));
        stockupdate.setBackground(new Color(100, 183, 0));
        PrintStock.setBackground(new Color(0, 50, 0));
        PrintGRN.setBackground(new Color(100, 183, 0));
        grnrecordslbl.setBackground(new Color(100, 183, 0));
        Viewstockpanel.setVisible(false); //close and open
        Addstockpanel.setVisible(false);
        printstockpanel.setVisible(true);
        grnrecordspanel.setVisible(false);
        printgrnpanel.setVisible(false);
        stockupdatepanel.setVisible(false);
    }//GEN-LAST:event_PrintStockMouseClicked

    private void PrintGRNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrintGRNMouseClicked
        printgrnbtn.setEnabled(false);
        printstocktabbed.removeAll();//reamove all components from printstocktabbed
        ViewStock.setBackground(new Color(100, 183, 0));
        AddStock.setBackground(new Color(100, 183, 0));
        stockupdate.setBackground(new Color(100, 183, 0));
        PrintStock.setBackground(new Color(100, 183, 0));
        PrintGRN.setBackground(new Color(0, 50, 0));
        grnrecordslbl.setBackground(new Color(100, 183, 0));
        Viewstockpanel.setVisible(false);
        Addstockpanel.setVisible(false);
        grnrecordspanel.setVisible(false);
        stockupdatepanel.setVisible(false);
        printstockpanel.setVisible(false);
        printgrnpanel.setVisible(true);
    }//GEN-LAST:event_PrintGRNMouseClicked

    private void grnrecordslblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grnrecordslblMouseClicked
        Viewstockpanel.setVisible(false);
        Addstockpanel.setVisible(false);
        grnrecordspanel.setVisible(true);
        stockupdatepanel.setVisible(false);
        printstockpanel.setVisible(false);
        printgrnpanel.setVisible(false);
        ViewStock.setBackground(new Color(100, 183, 0));
        AddStock.setBackground(new Color(100, 183, 0));
        stockupdate.setBackground(new Color(100, 183, 0));
        PrintStock.setBackground(new Color(100, 183, 0));
        PrintGRN.setBackground(new Color(100, 183, 0));
        grnrecordslbl.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_grnrecordslblMouseClicked

    private void refreshMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshMouseEntered
        refresh.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_refreshMouseEntered

    private void refreshMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshMouseExited
        refresh.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_refreshMouseExited

    private void refreshMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshMousePressed
        refresh.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_refreshMousePressed

    private void refreshMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshMouseReleased
        refresh.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_refreshMouseReleased

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
               quciksearchviewstock.setEditable(true); //enabled quciksearchviewstock
        tableview.setVisible(true); //open tableview
        detailmode.setVisible(false); //close detailmode
        DefaultTableModel dtm = (DefaultTableModel) viewstocktable.getModel(); //new table model
        dtm.setRowCount(0);// raw count 0
        refreshstocktable();
        refreshstocktableinpos();
    }//GEN-LAST:event_refreshActionPerformed

    private void refreshstocktableinpos() {
       try {
            ResultSet rs = DB.DB.search("SELECT * FROM `stock` WHERE `Quantity`>0");
            DefaultTableModel dtm = (DefaultTableModel) stocktableinpostable.getModel(); //new table model
            dtm.setRowCount(0); //raw count 0
            while (rs.next()) { //if quary got results
                Vector v = new Vector(); //new vector
                v.add(rs.getString(2));
                v.add(rs.getString(3));
                v.add(rs.getString(13));
                v.add(rs.getString(7));
                dtm.addRow(v); //add raw to table
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void quciksearchviewstockKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quciksearchviewstockKeyReleased
      try {
            ResultSet rs = DB.DB.search("SELECT * FROM  `stock` WHERE  Item_Id LIKE  '" + quciksearchviewstock.getText() + "%' ");
            DefaultTableModel dtm = (DefaultTableModel) viewstocktable.getModel(); //new table model
            dtm.setRowCount(0); //raw count 0
            while (rs.next()) { //if quary got results
                Vector v = new Vector(); //new vector
                v.add(rs.getString(2));
                v.add(rs.getString(3));
                v.add(rs.getString(13));
                v.add(rs.getString(7));
                dtm.addRow(v); //add raw
                viewstocktable.selectAll(); //select all at viewstocktable
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_quciksearchviewstockKeyReleased

    private void detailmodebtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detailmodebtnMouseEntered
        detailmodebtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_detailmodebtnMouseEntered

    private void detailmodebtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detailmodebtnMouseExited
        detailmodebtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_detailmodebtnMouseExited

    private void detailmodebtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detailmodebtnMousePressed
        detailmodebtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_detailmodebtnMousePressed

    private void detailmodebtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detailmodebtnMouseReleased
        detailmodebtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_detailmodebtnMouseReleased

    private void detailmodebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailmodebtnActionPerformed
        if (quciksearchviewstock.getText().isEmpty()) { //if value at quciksearchviewstock is empty
            JOptionPane.showMessageDialog(null, "Search or Select an item first !"); //user message
        } else {
            String quciksearch = quciksearchviewstock.getText(); //get value at quciksearchviewstock
            try {
                ResultSet rs = DB.DB.search("SELECT * FROM  `stock` WHERE  Item_Id LIKE  '" + quciksearch + "' ");
                DefaultTableModel dtm = (DefaultTableModel) viewstocktable.getModel(); //new table model
                dtm.setRowCount(0); //raw count 0
                while (rs.next()) { //if quary got results
                    Vector v = new Vector(); //new vector
                    v.add(rs.getString(2));
                    itemidfield1.setText(rs.getString(2));
                    v.add(rs.getString(3));
                    itemnamefield1.setText(rs.getString(3));
                    v.add(rs.getString(4));
                    stocknumberfield1.setText(rs.getString(4));
                    v.add(rs.getString(5));
                    itemdescriptionfield1.setText(rs.getString(5));
                    v.add(rs.getString(6));
                    stockpricefield1.setText(rs.getString(6));
                    v.add(rs.getString(7));
                    sellingpricefield1.setText(rs.getString(7));
                    v.add(rs.getString(8));
                    barcodefield1.setText(rs.getString(8));
                    v.add(rs.getString(9));
                    supplieridfield1.setText(rs.getString(9));
                    v.add(rs.getString(10));
                    brandfield1.setText(rs.getString(10));
                    v.add(rs.getString(11));
                    conditionfield1.setText(rs.getString(11));
                    v.add(rs.getString(12));
                    warrantyfield1.setText(rs.getString(12));
                    v.add(rs.getString(13));
                    quantityfield1.setText(rs.getString(13));
                    dtm.addRow(v);
                }
            } catch (Exception e) {
            }
            //open and close
            quciksearchviewstock.setEditable(false);
            tableview.setVisible(false);
            detailmode.setVisible(true);
            ok.setVisible(false);
            editdetailmodebtn.setVisible(true);
        }
    }//GEN-LAST:event_detailmodebtnActionPerformed

    private void viewstocktableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewstocktableMouseClicked
        int row = viewstocktable.getSelectedRow();
        quciksearchviewstock.setText((String) viewstocktable.getValueAt(row, 0));//get value at a cell

    }//GEN-LAST:event_viewstocktableMouseClicked

    private void viewstocktableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_viewstocktableKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) { //when enter pressed
            int row = viewstocktable.getSelectedRow(); //values at selected raw
            quciksearchviewstock.setText((String) viewstocktable.getValueAt(row, 0)); //get value at a cell
        }
    }//GEN-LAST:event_viewstocktableKeyPressed

    private void deletethisidMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletethisidMouseEntered
        deletethisid.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_deletethisidMouseEntered

    private void deletethisidMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletethisidMouseExited
        deletethisid.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_deletethisidMouseExited

    private void deletethisidMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletethisidMousePressed
        deletethisid.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_deletethisidMousePressed

    private void deletethisidMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletethisidMouseReleased
        deletethisid.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_deletethisidMouseReleased

    private void deletethisidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletethisidActionPerformed
        int n = JOptionPane.showConfirmDialog(null, "Want to Delete this Item ?", "", JOptionPane.YES_NO_OPTION);
        if (n == 0) {
            String deletingid = quciksearchviewstock.getText();
            try {
                DB.DB.iud("delete from stock where Item_Id='" + deletingid + "' ");
                String activityloghm = "INSERT INTO `log`(`accountId`,`user`, `activitytype`, `description`) VALUES ('0','Admin','Stock Item Delete','Item " + deletingid + " deleted by Admin')";
                DB.DB.iud(activityloghm);

                JOptionPane.showMessageDialog(this, "Item Deleted !");
                itemidfield1.setText(null);
                itemnamefield1.setText(null);
                stocknumberfield1.setText(null);
                itemdescriptionfield1.setText(null);
                stockpricefield1.setText(null);
                sellingpricefield1.setText(null);
                barcodefield1.setText(null);
                supplieridfield1.setText(null);
                brandfield1.setText(null);
                conditionfield1.setText(null);
                warrantyfield1.setText(null);
                quantityfield1.setText(null);
                quciksearchviewstock.setText(null);
                quciksearchviewstock.setEditable(true);
                tableview.setVisible(true);
                detailmode.setVisible(false);
                DefaultTableModel dtm = (DefaultTableModel) viewstocktable.getModel();
                dtm.setRowCount(0);
                refreshstocktable();
                refreshstocktableinpos();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_deletethisidActionPerformed

    private void okMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okMouseEntered
        ok.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_okMouseEntered

    private void okMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okMouseExited
        ok.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_okMouseExited

    private void okMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okMousePressed
        ok.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_okMousePressed

    private void okMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okMouseReleased
        ok.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_okMouseReleased

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed

        try {
            DB.DB.iud("UPDATE stock SET Item_Name='" + itemnamefield1.getText() + "', Stock_Number='" + stocknumberfield1.getText() + "', Item_Description='" + itemdescriptionfield1.getText() + "', Stock_Price='" + stockpricefield1.getText() + "', Selling_Price='" + sellingpricefield1.getText() + "', `Barcode`='" + barcodefield1.getText() + "', Supplier_Id='" + supplieridfield1.getText() + "', `Brand`='" + brandfield1.getText() + "', Condition_of_Item='" + conditionfield1.getText() + "', `Warranty`='" + warrantyfield1.getText() + "', `Quantity`='" + quantityfield1.getText() + "'  WHERE Item_Id='" + itemidfield1.getText() + "'");
            String activityloghn = "INSERT INTO `log`(`accountId`,`user`, `activitytype`, `description`) VALUES ('0','Admin','Stock Edit','Item: " + itemidfield1.getText() + ' ' + jComboBox1.getSelectedItem().toString() + "d by Admin')";
            DB.DB.iud(activityloghn);
            JOptionPane.showMessageDialog(null, "Edit Success !");
        } catch (Exception e) {
            e.printStackTrace();
        }
        editdetailmodebtn.setVisible(true);
        ok.setVisible(false);
        itemnamefield1.setEditable(false);
        stocknumberfield1.setEditable(false);
        itemdescriptionfield1.setEditable(false);
        stockpricefield1.setEditable(false);
        sellingpricefield1.setEditable(false);
        barcodefield1.setEditable(false);
        supplieridfield1.setEditable(false);
        brandfield1.setEditable(false);
        conditionfield1.setEditable(false);
        warrantyfield1.setEditable(false);
        quantityfield1.setEditable(false);
    }//GEN-LAST:event_okActionPerformed

    private void editdetailmodebtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editdetailmodebtnMouseEntered
        editdetailmodebtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_editdetailmodebtnMouseEntered

    private void editdetailmodebtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editdetailmodebtnMouseExited
        editdetailmodebtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_editdetailmodebtnMouseExited

    private void editdetailmodebtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editdetailmodebtnMousePressed
        editdetailmodebtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_editdetailmodebtnMousePressed

    private void editdetailmodebtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editdetailmodebtnMouseReleased
        editdetailmodebtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_editdetailmodebtnMouseReleased

    private void editdetailmodebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editdetailmodebtnActionPerformed
        if (jComboBox1.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Select Reason to Edit");
        } else if (jComboBox1.getSelectedIndex() == 1) {
            stockpricefield1.setEditable(true);
            ok.setVisible(true);
        } else if (jComboBox1.getSelectedIndex() == 2) {
            sellingpricefield1.setEditable(true);
            ok.setVisible(true);
        } else if (jComboBox1.getSelectedIndex() == 3) {
            itemdescriptionfield1.setEditable(true);
            ok.setVisible(true);
        } else if (jComboBox1.getSelectedIndex() == 4) {
            conditionfield1.setEditable(true);
            ok.setVisible(true);
        } else if (jComboBox1.getSelectedIndex() == 5) {
            barcodefield1.setEditable(true);
            ok.setVisible(true);
        } else if (jComboBox1.getSelectedIndex() == 6) {
            supplieridfield1.setEditable(true);
            ok.setVisible(true);
        } else if (jComboBox1.getSelectedIndex() == 7) {
            brandfield1.setEditable(true);
            ok.setVisible(true);
        } else if (jComboBox1.getSelectedIndex() == 8) {
            warrantyfield1.setEditable(true);
            ok.setVisible(true);
        }
    }//GEN-LAST:event_editdetailmodebtnActionPerformed

    private void quantityfield1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityfield1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityfield1ActionPerformed

    private void quantityfield1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_quantityfield1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityfield1FocusLost

    private void warrantyfield1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_warrantyfield1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_warrantyfield1ActionPerformed

    private void warrantyfield1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_warrantyfield1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_warrantyfield1FocusLost

    private void conditionfield1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conditionfield1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_conditionfield1ActionPerformed

    private void conditionfield1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_conditionfield1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_conditionfield1FocusLost

    private void brandfield1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brandfield1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_brandfield1ActionPerformed

    private void brandfield1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_brandfield1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_brandfield1FocusLost

    private void supplieridfield1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplieridfield1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_supplieridfield1ActionPerformed

    private void supplieridfield1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_supplieridfield1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_supplieridfield1FocusLost

    private void barcodefield1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barcodefield1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_barcodefield1ActionPerformed

    private void barcodefield1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_barcodefield1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_barcodefield1FocusLost

    private void sellingpricefield1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellingpricefield1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sellingpricefield1ActionPerformed

    private void sellingpricefield1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sellingpricefield1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_sellingpricefield1FocusLost

    private void stockpricefield1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockpricefield1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stockpricefield1ActionPerformed

    private void stockpricefield1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stockpricefield1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_stockpricefield1FocusLost

    private void itemdescriptionfield1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemdescriptionfield1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemdescriptionfield1ActionPerformed

    private void itemdescriptionfield1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_itemdescriptionfield1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_itemdescriptionfield1FocusLost

    private void stocknumberfield1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stocknumberfield1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stocknumberfield1ActionPerformed

    private void stocknumberfield1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stocknumberfield1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_stocknumberfield1FocusLost

    private void itemnamefield1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemnamefield1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemnamefield1ActionPerformed

    private void itemnamefield1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_itemnamefield1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_itemnamefield1FocusLost

    private void itemidfield1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemidfield1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemidfield1ActionPerformed

    private void itemidfield1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_itemidfield1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_itemidfield1FocusLost

    private void grnrecordstableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grnrecordstableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_grnrecordstableMouseClicked

    private void previewgrnrecordMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previewgrnrecordMouseEntered
        previewgrnrecord.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_previewgrnrecordMouseEntered

    private void previewgrnrecordMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previewgrnrecordMouseExited
        previewgrnrecord.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_previewgrnrecordMouseExited

    private void previewgrnrecordMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previewgrnrecordMousePressed
        previewgrnrecord.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_previewgrnrecordMousePressed

    private void previewgrnrecordMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previewgrnrecordMouseReleased
        previewgrnrecord.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_previewgrnrecordMouseReleased

    private void previewgrnrecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previewgrnrecordActionPerformed
        grnrecordstab.removeAll();
        new Thread() {
            public void run() {
                try {
                    String path = "C:\\JasperReports\\GRNGFS.jrxml";
                    JasperReport compileReport = JasperCompileManager.compileReport(path);
                    HashMap hm = new HashMap();
                    hm.put("grnno", grnrecordfield.getText());
                    JasperPrint jp = JasperFillManager.fillReport(compileReport, hm, DB.DB.getConnection());
                    grnrecordstab.add("Preview Invoice", new JPanel().add(new JRViewer(jp)));

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }.start();

    }//GEN-LAST:event_previewgrnrecordActionPerformed

    private void grnrecordfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grnrecordfieldActionPerformed
        if (grnrecordfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Search Sell Record First !");
        } else {
            DefaultTableModel dtm = (DefaultTableModel) grnrecordstable.getModel();
            dtm.setRowCount(0);
            refreshgrnrecords();
        }
    }//GEN-LAST:event_grnrecordfieldActionPerformed

    private void findbtn1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findbtn1MouseEntered
        findbtn1.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_findbtn1MouseEntered

    private void findbtn1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findbtn1MouseExited
        findbtn1.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_findbtn1MouseExited

    private void findbtn1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findbtn1MousePressed
        findbtn1.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_findbtn1MousePressed

    private void findbtn1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findbtn1MouseReleased
        findbtn1.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_findbtn1MouseReleased

    private void findbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findbtn1ActionPerformed
        if (grnrecordfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Search Sell Record First !");
        } else {
            DefaultTableModel dtm = (DefaultTableModel) grnrecordstable.getModel();
            dtm.setRowCount(0);
            refreshgrnrecords();
        }
    }//GEN-LAST:event_findbtn1ActionPerformed

    private void refreshgrnrecords() {
        try {
            ResultSet rs = DB.DB.search("select * from `grnrecords` where grnnumber = '" + grnrecordfield.getText() + "'");
            DefaultTableModel dtm = (DefaultTableModel) grnrecordstable.getModel();
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString(9));
                v.add(rs.getString(10));
                v.add(rs.getString(11));
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    private void printgrnbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printgrnbtnMouseEntered
        printgrnbtn.setBackground(new java.awt.Color(0, 112, 0));
    }//GEN-LAST:event_printgrnbtnMouseEntered

    private void printgrnbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printgrnbtnMouseExited
        printgrnbtn.setBackground(new java.awt.Color(0, 50, 0));
    }//GEN-LAST:event_printgrnbtnMouseExited

    private void printgrnbtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printgrnbtnMousePressed
        printgrnbtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_printgrnbtnMousePressed

    private void printgrnbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printgrnbtnMouseReleased
        printgrnbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_printgrnbtnMouseReleased

    private void printgrnbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printgrnbtnActionPerformed
        new Thread() {
            public void run() {
                try {
                    String path = "C:\\JasperReports\\GRNGFS.jrxml";
                    JasperReport compileReport = JasperCompileManager.compileReport(path);
                    HashMap hm = new HashMap();
                    hm.put("grnno", grnnumberfield.getText());
                    JasperPrint jp = JasperFillManager.fillReport(compileReport, hm, DB.DB.getConnection());
                    grntabbed.add("Preview GRN", new JPanel().add(new JRViewer(jp)));
                    grntabbed.setSelectedIndex(1);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }.start();

    }//GEN-LAST:event_printgrnbtnActionPerformed

    private void suppliergrnfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suppliergrnfieldActionPerformed
        invoicenoingrn.grabFocus();
    }//GEN-LAST:event_suppliergrnfieldActionPerformed

    private void billdateingrnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billdateingrnActionPerformed
        invoiceamountingrn.grabFocus();
    }//GEN-LAST:event_billdateingrnActionPerformed

    private void invoicenoingrnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoicenoingrnActionPerformed
        billdateingrn.grabFocus();
    }//GEN-LAST:event_invoicenoingrnActionPerformed

    private void invoiceamountingrnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceamountingrnActionPerformed
        productcodeingrn.grabFocus();
    }//GEN-LAST:event_invoiceamountingrnActionPerformed

    private void productquantityingrnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productquantityingrnActionPerformed
        productamountingrn.grabFocus();
    }//GEN-LAST:event_productquantityingrnActionPerformed

    private void productcodeingrnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productcodeingrnActionPerformed
        Productnamegrn.grabFocus();
    }//GEN-LAST:event_productcodeingrnActionPerformed

    private void ProductnamegrnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductnamegrnActionPerformed
        productquantityingrn.grabFocus();
    }//GEN-LAST:event_ProductnamegrnActionPerformed

    private void grnaddtotablebtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grnaddtotablebtnMouseEntered
        grnaddtotablebtn.setBackground(new java.awt.Color(0, 112, 0));
    }//GEN-LAST:event_grnaddtotablebtnMouseEntered

    private void grnaddtotablebtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grnaddtotablebtnMouseExited
        grnaddtotablebtn.setBackground(new java.awt.Color(0, 50, 0));
    }//GEN-LAST:event_grnaddtotablebtnMouseExited

    private void grnaddtotablebtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grnaddtotablebtnMousePressed
        grnaddtotablebtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_grnaddtotablebtnMousePressed

    private void grnaddtotablebtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grnaddtotablebtnMouseReleased
        grnaddtotablebtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_grnaddtotablebtnMouseReleased

    private void grnaddtotablebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grnaddtotablebtnActionPerformed
        if (productcodeingrn.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter Product Code !");
        } else if (Productnamegrn.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter Product Name !");
        } else if (productquantityingrn.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter Product Quantity !");
        } else if (productamountingrn.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter Product Amount !");
        } else {
            DefaultTableModel dtm = (DefaultTableModel) grncountingtable.getModel();
            int productqty = Integer.parseInt(productquantityingrn.getText());
            double productamount = Double.parseDouble(productamountingrn.getText());
            int index = grncountingtable.getRowCount();

            index++;
            Vector v = new Vector();
            v.add(index);
            v.add(productcodeingrn.getText());
            v.add(Productnamegrn.getText());
            v.add(productqty);
            v.add(productamount);
            v.add(productqty * productamount);
            dtm.addRow(v);
            int count = grncountingtable.getRowCount();
            double total = 0.0;
            for (int i = 0; i < count; i++) {
                double amount = Double.parseDouble(grncountingtable.getValueAt(i, 5) + "");
                //                     total = Double.parseDouble(grncountingtable.getValueAt(i, 5)+"");
                total += amount;
            }
            grntotal.setText(total + "");
        }
    }//GEN-LAST:event_grnaddtotablebtnActionPerformed

    private void productamountingrnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productamountingrnActionPerformed
        if (productcodeingrn.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter Product Code !");
        } else if (Productnamegrn.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter Product Name !");
        } else if (productquantityingrn.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter Product Quantity !");
        } else if (productamountingrn.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter Product Amount !");
        } else {
            DefaultTableModel dtm = (DefaultTableModel) grncountingtable.getModel();
            int productqty = Integer.parseInt(productquantityingrn.getText());
            double productamount = Double.parseDouble(productamountingrn.getText());
            int index = grncountingtable.getRowCount();

            index++;
            Vector v = new Vector();
            v.add(index);
            v.add(productcodeingrn.getText());
            v.add(Productnamegrn.getText());
            v.add(productqty);
            v.add(productamount);
            v.add(productqty * productamount);
            dtm.addRow(v);
            int count = grncountingtable.getRowCount();
            double total = 0.0;
            for (int i = 0; i < count; i++) {
                double amount = Double.parseDouble(grncountingtable.getValueAt(i, 5) + "");
                total = Double.parseDouble(grncountingtable.getValueAt(i, 5) + "");
                total += amount;
            }
            grntotal.setText(total + "");
        }
    }//GEN-LAST:event_productamountingrnActionPerformed

    private void okbtngrnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okbtngrnMouseEntered
        okbtngrn.setBackground(new java.awt.Color(0, 112, 0));
    }//GEN-LAST:event_okbtngrnMouseEntered

    private void okbtngrnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okbtngrnMouseExited
        okbtngrn.setBackground(new java.awt.Color(0, 50, 0));
    }//GEN-LAST:event_okbtngrnMouseExited

    private void okbtngrnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okbtngrnMousePressed
        okbtngrn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_okbtngrnMousePressed

    private void okbtngrnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okbtngrnMouseReleased
        okbtngrn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_okbtngrnMouseReleased

    private void generateGRNID() {
        try {

            ResultSet rs = DB.DB.search("select count(DISTINCT  grnnumber) as x from `grnrecords` ");
            if (rs.next()) {

                int rowcount = Integer.parseInt(rs.getString("x"));
                rowcount++;
                grnnumberfield.setText("" + rowcount);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void okbtngrnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okbtngrnActionPerformed
        if (suppliergrnfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter Supplier !");
        } else if (invoicenoingrn.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter Invoice Number !");
        } else if (billdateingrn.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter Invoice Date !");
        } else if (invoiceamountingrn.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter Invoice Amount !");
        } else {
            int grntablecount = grncountingtable.getRowCount();
            for (int i = 0; i < grntablecount; i++) {
                String ids = grncountingtable.getValueAt(i, 0).toString();
                String productcode = grncountingtable.getValueAt(i, 1).toString();
                String productname = grncountingtable.getValueAt(i, 2).toString();
                String quantitiesn = grncountingtable.getValueAt(i, 3).toString();
                String perprice = grncountingtable.getValueAt(i, 4).toString();
                String rowtotal = grncountingtable.getValueAt(i, 5).toString();
                String grnnumber = grnnumberfield.getText();
                String supp = suppliergrnfield.getText();
                String dategrn = dateingrn.getText();
                String invoicenogrn = invoicenoingrn.getText();
                String billdategrn = billdateingrn.getText();
                String invoiceamountgrn = invoiceamountingrn.getText();
                String fulltotalgrn = grntotal.getText().toString();
                try {
                    DB.DB.iud("INSERT INTO `grnrecords` (grnnumber, `supplier`, `date`, `invoiceno`, invoicedate,`invoiceamount`,`listid`,`productcode`, `productname`, `quantity`, perproductamount, `amountxquantity`,`generatedtotal`) VALUES ('" + grnnumber + "', '" + supp + "', '" + dategrn + "', '" + invoicenogrn + "', '" + billdategrn + "', '" + invoiceamountgrn + "', '" + ids + "', '" + productcode + "', '" + productname + "', '" + quantitiesn + "', '" + perprice + "', '" + rowtotal + "', '" + fulltotalgrn + "');");
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            printgrnbtn.setEnabled(true);
    }//GEN-LAST:event_okbtngrnActionPerformed
    }
    private void stockupdatetableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stockupdatetableMouseClicked
        if (jComboBox2.getSelectedIndex() == 1) {
            jTextField2.setText((String) stockupdatetable.getValueAt(stockupdatetable.getSelectedRow(), 0));
        } else if (jComboBox2.getSelectedIndex() == 2) {
            jTextField6.setText((String) stockupdatetable.getValueAt(stockupdatetable.getSelectedRow(), 0));
        }
    }//GEN-LAST:event_stockupdatetableMouseClicked

    private void refreshstocktable() {
        try {
            ResultSet rs = DB.DB.search("SELECT * FROM `stock` WHERE `Quantity`>0");
            DefaultTableModel dtm = (DefaultTableModel) viewstocktable.getModel();
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString(2));
                v.add(rs.getString(3));
                v.add(rs.getString(4));
                v.add(rs.getString(5));
                v.add(rs.getString(6));
                v.add(rs.getString(7));
                v.add(rs.getString(8));
                v.add(rs.getString(9));
                v.add(rs.getString(10));
                v.add(rs.getString(11));
                v.add(rs.getString(12));
                v.add(rs.getString(13));
                v.add(rs.getString(14));
                v.add(rs.getString(15));
                v.add(rs.getString(16));
                v.add(rs.getString(17));
                v.add(rs.getString(18));
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void refreshemptable() {
        try {
            ResultSet rs = DB.DB.search("SELECT * FROM `emp` ");
            DefaultTableModel dtm = (DefaultTableModel) employeetable.getModel();
            DefaultTableModel dtm2 = (DefaultTableModel) emptable2.getModel();
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString(1));
                v.add(rs.getString(2));
                v.add(rs.getString(3));
                v.add(rs.getString(4));
                v.add(rs.getString(5));
                v.add(rs.getString(6));
                dtm.addRow(v);
                dtm2.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void refreshcustable() {
        try {
            ResultSet rs = DB.DB.search("SELECT * FROM `customers` ");
            DefaultTableModel dtm = (DefaultTableModel) customertable.getModel();
            dtm.setRowCount(0);
            DefaultTableModel dtm2 = (DefaultTableModel) customertabl2.getModel();
            dtm2.setRowCount(0);
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString(1));
                v.add(rs.getString(2));
                v.add(rs.getString(3));
                v.add(rs.getString(4));
                v.add(rs.getString(5));
                dtm.addRow(v);
                dtm2.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void refreshcustomertable() {
        try {
            ResultSet rs = DB.DB.search("SELECT * FROM `stock` WHERE `Quantity`>0");
            DefaultTableModel dtm = (DefaultTableModel) viewstocktable.getModel();
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString(2));
                v.add(rs.getString(3));
                v.add(rs.getString(4));
                v.add(rs.getString(5));
                v.add(rs.getString(6));
                v.add(rs.getString(7));
                v.add(rs.getString(8));
                v.add(rs.getString(9));
                v.add(rs.getString(10));
                v.add(rs.getString(11));
                v.add(rs.getString(12));
                v.add(rs.getString(13));
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        DefaultTableModel dtmupdatestk = (DefaultTableModel) stockupdatetable.getModel();
        dtmupdatestk.setRowCount(0);
        refreshstockupdatetable();
        if (jComboBox2.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Select Reason to Update");
            jTextField3.setEnabled(false);
            jTextField4.setEnabled(false);
            jTextField5.setEnabled(false);
            searchbillbtn.setEnabled(false);
            jTextField6.setEnabled(false);
            updatestockqbtn1.setEnabled(false);

        } else if (jComboBox2.getSelectedIndex() == 1) {
            jTextField2.setEnabled(true);
            jTextField1.setEnabled(true);
            updatestockqbtn.setEnabled(true);
            jTextField3.setEnabled(false);
            jTextField4.setEnabled(false);
            jTextField5.setEnabled(false);
            searchbillbtn.setEnabled(false);
            updatestockqbtn1.setEnabled(false);
//            refreshstockupdatetable();
        } else if (jComboBox2.getSelectedIndex() == 2) {
            jTextField3.setEnabled(true);
            jTextField4.setEnabled(true);
            jTextField5.setEnabled(true);
            searchbillbtn.setEnabled(true);
            jTextField6.setEnabled(true);
            updatestockqbtn1.setEnabled(true);
            jTextField2.setEnabled(false);
            jTextField1.setEnabled(false);
            updatestockqbtn.setEnabled(false);
            DefaultTableModel ddatestk = (DefaultTableModel) stockupdatetable.getModel();
            ddatestk.setRowCount(0);
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void updatestockqbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatestockqbtnMouseEntered
        updatestockqbtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_updatestockqbtnMouseEntered

    private void updatestockqbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatestockqbtnMouseExited
        updatestockqbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_updatestockqbtnMouseExited

    private void updatestockqbtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatestockqbtnMousePressed
        updatestockqbtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_updatestockqbtnMousePressed

    private void updatestockqbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatestockqbtnMouseReleased
        updatestockqbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_updatestockqbtnMouseReleased

    private void updatestockqbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatestockqbtnActionPerformed
        if (jComboBox2.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Select Reason to Update !");
        } else if (jComboBox2.getSelectedIndex() == 1) {
            if (jTextField2.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Select Item !");
            } else if (jTextField2.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Select Quantity !");

            } else {
                try {
                    DB.DB.iud("UPDATE stock SET  `Quantity`='" + jTextField1.getText() + "'  WHERE Item_Id='" + jTextField2.getText() + "'");
                    String activityloghn = "INSERT INTO `log`(`accountId`,`user`, `activitytype`, `description`) VALUES ('0','Admin','Stock Update','" + jTextField2.getText().toString() + "Updated Stock by Admin')";
                    DB.DB.iud(activityloghn);
                    JOptionPane.showMessageDialog(null, "Update Success !");
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_updatestockqbtnActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyReleased
        try {
            ResultSet rs = DB.DB.search("select * from `salesrecords` where Bill_number = '" + jTextField3.getText() + "'");
            DefaultTableModel dtmupdatestk = (DefaultTableModel) stockupdatetable.getModel();
            dtmupdatestk.setRowCount(0);
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString(15));
                v.add(rs.getString(8));
                v.add(rs.getString(14));
                dtmupdatestk.addRow(v);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTextField3KeyReleased

    private void searchbillbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbillbtnMouseEntered
        searchbillbtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_searchbillbtnMouseEntered

    private void searchbillbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbillbtnMouseExited
        searchbillbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_searchbillbtnMouseExited

    private void searchbillbtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbillbtnMousePressed
        searchbillbtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_searchbillbtnMousePressed

    private void searchbillbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbillbtnMouseReleased
        searchbillbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_searchbillbtnMouseReleased

    private void searchbillbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbillbtnActionPerformed
        if (jTextField3.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Fill Inovoice Number !");
        } else if (jTextField6.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Fill Item Id !");
        } else {
            DefaultTableModel dtm = (DefaultTableModel) stockupdatetable.getModel();
            dtm.setRowCount(0);
//            searchbills();
        }
    }//GEN-LAST:event_searchbillbtnActionPerformed

    private void updatestockqbtn1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatestockqbtn1MouseEntered
        updatestockqbtn1.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_updatestockqbtn1MouseEntered

    private void updatestockqbtn1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatestockqbtn1MouseExited
        updatestockqbtn1.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_updatestockqbtn1MouseExited

    private void updatestockqbtn1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatestockqbtn1MousePressed
        updatestockqbtn1.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_updatestockqbtn1MousePressed

    private void updatestockqbtn1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatestockqbtn1MouseReleased
        updatestockqbtn1.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_updatestockqbtn1MouseReleased

    private void updatestockqbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatestockqbtn1ActionPerformed
        if (jTextField3.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter Return Quantity !");
        } else {
            try {
                int quantityreturn = parseInt(jTextField5.getText().toString());
                int quantityinstock = 0;
                int finalquantity = 0;
                ResultSet rs = DB.DB.search("select `Quantity` from `stock` WHERE Item_Id='" + jTextField6.getText() + "' ");
                while (rs.next()) {
                    quantityinstock = rs.getInt(1);
                }
                finalquantity = quantityreturn + quantityinstock;
                int quaininvoice = parseInt(jTextField4.getText().toString());
                int invoicereturn = parseInt(jTextField5.getText().toString());
                int finalquatoinvoice = quaininvoice - invoicereturn;
                String ids = jTextField6.getText();
                String ItemIdsandQuantities = ids + "  x  " + finalquatoinvoice;
                DB.DB.iud("UPDATE stock SET  `Quantity`='" + finalquantity + "'  WHERE Item_Id='" + ids + "'");
                DB.DB.iud("UPDATE `salesrecords` SET  `quantity`='" + finalquatoinvoice + "', Item_Ids_and_Quantities='" + ItemIdsandQuantities + "'  WHERE `itemid`='" + ids + "'");
                String activityloghn = "INSERT INTO `log`(`accountId`,`user`, `activitytype`, `description`) VALUES ('0','Admin','Customer Return','" + ids + " Item(s) Returned to Stock by Admin')";
                DB.DB.iud(activityloghn);
                JOptionPane.showMessageDialog(null, "Item Returned to Stock Successfully !");
            } catch (Exception e) {
                e.printStackTrace();
            }
            DefaultTableModel dtmupdatestk = (DefaultTableModel) stockupdatetable.getModel();
            dtmupdatestk.setRowCount(0);
//            refreshstockupdatetable();
            jTextField3.setText(null);
            jTextField6.setText(null);
            jTextField4.setText(null);
            jTextField5.setText(null);
        }
    }//GEN-LAST:event_updatestockqbtn1ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void itemidfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemidfieldActionPerformed
        try {
            Boolean found = false;
            ResultSet rs = DB.DB.search("select Item_Id from `stock` where Item_Id = '" + itemidfield.getText() + "'");
            found = rs.next();
            if (found) {
                if (itemidfield.getText().equalsIgnoreCase(rs.getString(1))) {
                    ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
                    itemidfieldstate.setIcon(itemnamefieldstatus);
                    JOptionPane.showMessageDialog(this, "Item Already Exist !");
                    itemnamefield.setEnabled(false);
                    stocknumberfield.setEnabled(false);
                    itemdescriptionfield.setEnabled(false);
                    stockpricefield.setEnabled(false);
                    sellingpricefield.setEnabled(false);
                    barcodefield.setEnabled(false);
                    supplieridfield.setEnabled(false);
                    brandfield.setEnabled(false);
                    conditionfield.setEnabled(false);
                    warrantyfield.setEnabled(false);
                    quantityfield.setEnabled(false);
                }
            } else {
                ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/success.png"));
                itemidfieldstate.setIcon(itemnamefieldstatus);
                itemnamefield.setEnabled(true);
                stocknumberfield.setEnabled(true);
                itemdescriptionfield.setEnabled(true);
                stockpricefield.setEnabled(true);
                sellingpricefield.setEnabled(true);
                barcodefield.setEnabled(true);
                supplieridfield.setEnabled(true);
                brandfield.setEnabled(true);
                conditionfield.setEnabled(true);
                warrantyfield.setEnabled(true);
                quantityfield.setEnabled(true);
                itemnamefield.grabFocus();
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_itemidfieldActionPerformed

    private void itemnamefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemnamefieldActionPerformed
        if (itemnamefield.getText().isEmpty()) {
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
            itemnamefieldstate.setIcon(itemnamefieldstatus);
        } else {
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/success.png"));
            itemnamefieldstate.setIcon(itemnamefieldstatus);
            stocknumberfield.grabFocus();
        }
    }//GEN-LAST:event_itemnamefieldActionPerformed

    private void stocknumberfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stocknumberfieldActionPerformed
        if (stocknumberfield.getText().isEmpty()) {
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
            stocknumberfieldstate.setIcon(itemnamefieldstatus);
        } else {
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/success.png"));
            stocknumberfieldstate.setIcon(itemnamefieldstatus);
            itemdescriptionfield.grabFocus();
        }
    }//GEN-LAST:event_stocknumberfieldActionPerformed

    private void itemdescriptionfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemdescriptionfieldActionPerformed
        if (itemdescriptionfield.getText().isEmpty()) {
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
            itemdescriptionfieldstate.setIcon(itemnamefieldstatus);
        } else {
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/success.png"));
            itemdescriptionfieldstate.setIcon(itemnamefieldstatus);
            stockpricefield.grabFocus();
        }
    }//GEN-LAST:event_itemdescriptionfieldActionPerformed

    private void stockpricefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockpricefieldActionPerformed
        if (stockpricefield.getText().isEmpty()) {
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
            stockpricefieldstate.setIcon(itemnamefieldstatus);
        } else {
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/success.png"));
            stockpricefieldstate.setIcon(itemnamefieldstatus);
            sellingpricefield.grabFocus();
        }
    }//GEN-LAST:event_stockpricefieldActionPerformed

    private void stockpricefieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stockpricefieldKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE) || (c == KeyEvent.VK_PERIOD) || (c == KeyEvent.VK_ENTER))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_stockpricefieldKeyTyped

    private void sellingpricefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellingpricefieldActionPerformed
        if (sellingpricefield.getText().isEmpty()) {
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
            sellingpricefieldstate.setIcon(itemnamefieldstatus);
        } else {
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/success.png"));
            sellingpricefieldstate.setIcon(itemnamefieldstatus);
            barcodefield.grabFocus();
        }
    }//GEN-LAST:event_sellingpricefieldActionPerformed

    private void sellingpricefieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sellingpricefieldKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE) || (c == KeyEvent.VK_PERIOD) || (c == KeyEvent.VK_ENTER))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_sellingpricefieldKeyTyped

    private void quantityfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityfieldActionPerformed
        if (quantityfield.getText().isEmpty()) {
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
            quantityfieldstate.setIcon(itemnamefieldstatus);
        } else {
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/success.png"));
            quantityfieldstate.setIcon(itemnamefieldstatus);
        }
    }//GEN-LAST:event_quantityfieldActionPerformed

    private void quantityfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantityfieldKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE) || (c == KeyEvent.VK_ENTER))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_quantityfieldKeyTyped

    private void warrantyfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_warrantyfieldActionPerformed
        if (warrantyfield.getText().isEmpty()) {
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
            warrantyfieldstate.setIcon(itemnamefieldstatus);
        } else {
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/success.png"));
            warrantyfieldstate.setIcon(itemnamefieldstatus);
            quantityfield.grabFocus();
        }
    }//GEN-LAST:event_warrantyfieldActionPerformed

    private void conditionfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conditionfieldActionPerformed
        if (conditionfield.getText().isEmpty()) {
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
            conditionfieldstate.setIcon(itemnamefieldstatus);
        } else {
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/success.png"));
            conditionfieldstate.setIcon(itemnamefieldstatus);
            warrantyfield.grabFocus();
        }
    }//GEN-LAST:event_conditionfieldActionPerformed

    private void brandfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brandfieldActionPerformed
        if (brandfield.getText().isEmpty()) {
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
            brandfieldstate.setIcon(itemnamefieldstatus);
        } else {
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/success.png"));
            brandfieldstate.setIcon(itemnamefieldstatus);
            conditionfield.grabFocus();
        }
    }//GEN-LAST:event_brandfieldActionPerformed

    private void supplieridfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplieridfieldActionPerformed
        if (supplieridfield.getText().isEmpty()) {
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
            supplieridfieldstate.setIcon(itemnamefieldstatus);
        } else {
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/success.png"));
            supplieridfieldstate.setIcon(itemnamefieldstatus);
            brandfield.grabFocus();
        }
    }//GEN-LAST:event_supplieridfieldActionPerformed

    private void barcodefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barcodefieldActionPerformed
        if (barcodefield.getText().isEmpty()) {
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
            barcodefieldstate.setIcon(itemnamefieldstatus);
        } else {
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/success.png"));
            barcodefieldstate.setIcon(itemnamefieldstatus);
            supplieridfield.grabFocus();
        }
    }//GEN-LAST:event_barcodefieldActionPerformed

    private void AddstockbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddstockbtnMouseEntered
        Addstockbtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_AddstockbtnMouseEntered

    private void AddstockbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddstockbtnMouseExited
        Addstockbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_AddstockbtnMouseExited

    private void AddstockbtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddstockbtnMousePressed
        Addstockbtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_AddstockbtnMousePressed

    private void AddstockbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddstockbtnMouseReleased
        Addstockbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_AddstockbtnMouseReleased

    private void AddstockbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddstockbtnActionPerformed

        if (itemidfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter Item Id !");
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
            itemidfieldstate.setIcon(itemnamefieldstatus);
        } else if (itemnamefield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter Item Name !");
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
            itemnamefieldstate.setIcon(itemnamefieldstatus);
        } else if (stocknumberfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter Item Stock Number");
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
            stocknumberfieldstate.setIcon(itemnamefieldstatus);
        } else if (itemdescriptionfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter Item Descriptionr !");
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
            itemdescriptionfieldstate.setIcon(itemnamefieldstatus);
        } else if (stockpricefield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter Item Stock price !");
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
            stockpricefieldstate.setIcon(itemnamefieldstatus);
        } else if (sellingpricefield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter Item Selling price !");
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
            sellingpricefieldstate.setIcon(itemnamefieldstatus);
        } else if (barcodefield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter Item Barcode !");
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
            barcodefieldstate.setIcon(itemnamefieldstatus);
        } else if (supplieridfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter Item Supplier !");
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
            supplieridfieldstate.setIcon(itemnamefieldstatus);
        } else if (brandfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter Item Brand !");
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
            brandfieldstate.setIcon(itemnamefieldstatus);
        } else if (conditionfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter Item Condition !");
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
            conditionfieldstate.setIcon(itemnamefieldstatus);
        } else if (warrantyfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter Item Warranty !");
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
            warrantyfieldstate.setIcon(itemnamefieldstatus);
        } else if (quantityfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter Item Quantity !");
            ImageIcon itemnamefieldstatus = new ImageIcon(getClass().getResource("images/failed.png"));
            quantityfieldstate.setIcon(itemnamefieldstatus);
        } else {
            String activitylogadminaddedstock = "INSERT INTO `log`(`accountId`,`user`, `activitytype`, `description`) VALUES ('0','Admin','Stock Add','Admin Added Item to stock')";
            String sqlstock = "INSERT INTO `stock`(Item_Id,Item_Name, Stock_Number,Item_Description,Stock_Price,Selling_Price,`Barcode`,Supplier_Id,`Brand`,Condition_of_Item,`Warranty`,`Quantity`,`cate1`,`cate2`,`cate3`,`cate4`,`cate5`) VALUES ('" + itemidfield.getText() + "','" + itemnamefield.getText() + "','" + stocknumberfield.getText() + "','" + itemdescriptionfield.getText() + "','" + stockpricefield.getText() + "','" + sellingpricefield.getText() + "','" + barcodefield.getText() + "','" + supplieridfield.getText() + "','" + brandfield.getText() + "','" + conditionfield.getText() + "','" + warrantyfield.getText() + "','" + quantityfield.getText() + "','" + cate1.getText() + "','" + cate2.getText() + "','" + cate3.getText() + "','" + cate4.getText() + "','" + cate5.getText() + "')";
            try {
                DB.DB.iud(sqlstock);
                DB.DB.iud(activitylogadminaddedstock);
                JOptionPane.showMessageDialog(this, "Item Added to stock");

                itemidfield.setText(null);
                itemnamefield.setText(null);
                stocknumberfield.setText(null);
                itemdescriptionfield.setText(null);
                stockpricefield.setText(null);
                sellingpricefield.setText(null);
                barcodefield.setText(null);
                supplieridfield.setText(null);
                brandfield.setText(null);
                conditionfield.setText(null);
                warrantyfield.setText(null);
                quantityfield.setText(null);
                itemidfieldstate.setIcon(null);
                itemidfieldstate.setIcon(null);
                itemnamefieldstate.setIcon(null);
                stocknumberfieldstate.setIcon(null);
                itemdescriptionfieldstate.setIcon(null);
                stockpricefieldstate.setIcon(null);
                sellingpricefieldstate.setIcon(null);
                barcodefieldstate.setIcon(null);
                supplieridfieldstate.setIcon(null);
                brandfieldstate.setIcon(null);
                conditionfieldstate.setIcon(null);
                warrantyfieldstate.setIcon(null);
                quantityfieldstate.setIcon(null);
                itemidfield.grabFocus();
                refreshstocktable();
            } catch (Exception ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Item Not Added");
            }

        }
    }//GEN-LAST:event_AddstockbtnActionPerformed

    private void poslblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_poslblMouseClicked
        pospanel.setVisible(true);
        sellrecordspanel.setVisible(false);
        chartspnl.setVisible(false);

        poslbl.setBackground(new Color(0, 50, 0));
        salerecordslbl.setBackground(new Color(100, 183, 0));
        chartslbl.setBackground(new Color(100, 183, 0));


    }//GEN-LAST:event_poslblMouseClicked

    private void poslblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_poslblMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_poslblMouseEntered

    private void poslblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_poslblMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_poslblMouseExited

    private void salerecordslblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salerecordslblMouseClicked
        pospanel.setVisible(false);
        sellrecordspanel.setVisible(true);
        chartspnl.setVisible(false);

        poslbl.setBackground(new Color(100, 183, 0));
        salerecordslbl.setBackground(new Color(0, 50, 0));
        chartslbl.setBackground(new Color(100, 183, 0));

    }//GEN-LAST:event_salerecordslblMouseClicked

    private void salerecordslblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salerecordslblMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_salerecordslblMouseEntered

    private void salerecordslblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salerecordslblMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_salerecordslblMouseExited

    private void printinvoicebtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printinvoicebtnMouseEntered
        printinvoicebtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_printinvoicebtnMouseEntered

    private void printinvoicebtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printinvoicebtnMouseExited
        printinvoicebtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_printinvoicebtnMouseExited

    private void printinvoicebtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printinvoicebtnMousePressed
        printinvoicebtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_printinvoicebtnMousePressed

    private void printinvoicebtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printinvoicebtnMouseReleased
        printinvoicebtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_printinvoicebtnMouseReleased

    private void printinvoicebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printinvoicebtnActionPerformed
        pospanelk.setVisible(false);
        invoice.setVisible(true);
        invoicetab.removeAll();
        new Thread() {
            public void run() {
                try {
                    String path = "C:\\JasperReports\\INVOICEGFS.jrxml";
                    JasperReport compileReport = JasperCompileManager.compileReport(path);
                    HashMap hm = new HashMap();
                    hm.put("Sellidfield", Sellidfield.getText());
                     hm.put("cusid", customerid.getText());
                    JasperPrint jp = JasperFillManager.fillReport(compileReport, hm, DB.DB.getConnection());
                    invoicetab.add("Preview Invoice", new JPanel().add(new JRViewer(jp)));

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }.start();

    }//GEN-LAST:event_printinvoicebtnActionPerformed

    private void poscancelbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_poscancelbtnMouseEntered
        poscancelbtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_poscancelbtnMouseEntered

    private void poscancelbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_poscancelbtnMouseExited
        poscancelbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_poscancelbtnMouseExited

    private void poscancelbtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_poscancelbtnMousePressed
        poscancelbtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_poscancelbtnMousePressed

    private void poscancelbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_poscancelbtnMouseReleased
        poscancelbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_poscancelbtnMouseReleased

    private void poscancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poscancelbtnActionPerformed
        searchinposfield.setText(null);
        searchinposfield.grabFocus();
        quantityinpos.setText(null);
        searchcomboinpos.setSelectedIndex(0);
         generateInvoiceID();
        DefaultTableModel dtmsalesstock = (DefaultTableModel) stocktableinpostable.getModel();
        dtmsalesstock.setRowCount(0);
        refreshstocktableinpos();
        DefaultTableModel dtmlist = (DefaultTableModel) cartlisttable.getModel();
        dtmlist.setRowCount(0);
        totalinpos.setText(null);
        discountfield.setText(null);
        vatfield.setText(null);
        nettotalfield.setText(null);
        paymentfield.setText(null);
        balancefield.setText(null);
        jCheckBox1.setSelected(false);
        jCheckBox2.setSelected(false);
    }//GEN-LAST:event_poscancelbtnActionPerformed

    private void sellbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sellbtnMouseEntered
        sellbtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_sellbtnMouseEntered

    private void sellbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sellbtnMouseExited
        sellbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_sellbtnMouseExited

    private void sellbtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sellbtnMousePressed
        sellbtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_sellbtnMousePressed

    private void sellbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sellbtnMouseReleased
        sellbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_sellbtnMouseReleased

    private void sellbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellbtnActionPerformed
        if (nettotalfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Plz fill !!!");
        } else if (nettotalfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Plz fill Pyament field !!!");
        } else {
            int newestcount = cartlisttable.getRowCount();
            for (int i = 0; i < newestcount; i++) {
                String ids = cartlisttable.getValueAt(i, 0).toString();
                String quantitiesn = cartlisttable.getValueAt(i, 3).toString();
                String perprice = cartlisttable.getValueAt(i, 4).toString();
                String itemname = cartlisttable.getValueAt(i, 1).toString();
                String ItemIdsandQuantities = ids + "  x  " + quantitiesn;
                try {
                    DB.DB.iud("INSERT INTO `salesrecords` (Item_Ids_and_Quantities, Sale_Earnings, Bill_number, DateTime, `salesatus`,`Billtotal`,`itemname`,`justtoatal`, `discount`, `vat`, `payment`, `balance`,`quantity`, `itemid`,`billedby`,`accountid`) VALUES ('" + ItemIdsandQuantities + "', '" + perprice + "', '" + Sellidfield.getText() + "', CURRENT_TIMESTAMP,  'SUCCESS', '" + nettotalfield.getText() + "', '" + itemname + "', '" + totalinpos.getText() + "', '" + discountfield.getText() + "', '" + vatfield.getText() + "', '" + paymentfield.getText() + "', '" + balancefield.getText() + "', '" + quantitiesn + "', '" + ids + "', 'Admin','0');");
                    JOptionPane.showMessageDialog(this, "Success !");
                    ResultSet cusidrs = DB.DB.search("SELECT `nooforders` FROM `customers` WHERE `cusid`='" + customerid.getText() + "'  ");
                    int newnoorders = 0;
                    while (cusidrs.next()) {
                        newnoorders = cusidrs.getInt(1) + 1;
                    }
                    DB.DB.iud("Update `customers` SET `nooforders` ='" + newnoorders + "'  ");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Failed !");
                    JOptionPane.showMessageDialog(this, e);
                    e.printStackTrace();
                }
            }
            int updatedstockcount = stocktableinpostable.getRowCount();
            for (int i = 0; i < updatedstockcount; i++) {
                String ids = stocktableinpostable.getValueAt(i, 0).toString();
                String quantitiesn = stocktableinpostable.getValueAt(i, 2).toString();
                try {
                    DB.DB.iud("UPDATE `stock` SET  `Quantity`='" + quantitiesn + "'  WHERE Item_Id='" + ids + "' ");
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_sellbtnActionPerformed

    private void paymentfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentfieldActionPerformed
        double d1 = Double.parseDouble(nettotalfield.getText());
        double d2 = Double.parseDouble(paymentfield.getText());
        double d3 = d2 - d1;
        balancefield.setText("" + d3);
    }//GEN-LAST:event_paymentfieldActionPerformed

    private void paymentfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paymentfieldKeyReleased
        double d1 = Double.parseDouble(nettotalfield.getText());
        double d2 = Double.parseDouble(paymentfield.getText());
        double d3 = d2 - d1;
        balancefield.setText("" + d3);
    }//GEN-LAST:event_paymentfieldKeyReleased

    private void paymentfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paymentfieldKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE) || (c == KeyEvent.VK_PERIOD) || (c == KeyEvent.VK_ENTER))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_paymentfieldKeyTyped

    private void discountfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountfieldActionPerformed
        double d1 = Double.parseDouble(totalinpos.getText());
        double d2 = Double.parseDouble(discountfield.getText());
        double d3 = d1 * (100 - d2) / 100;
        nettotalfield.setText("" + d3);
        nettotalfield.grabFocus();
    }//GEN-LAST:event_discountfieldActionPerformed

    private void vatfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vatfieldActionPerformed
        double d1 = Double.parseDouble(totalinpos.getText());
        double d2 = Double.parseDouble(vatfield.getText());
        double d3 = d1 * (100 + d2) / 100;
        nettotalfield.setText("" + d3);
        nettotalfield.grabFocus();
    }//GEN-LAST:event_vatfieldActionPerformed

    private void nettotalfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nettotalfieldActionPerformed

    }//GEN-LAST:event_nettotalfieldActionPerformed

    private void balancefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_balancefieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_balancefieldActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed

        if (jCheckBox1.isSelected()) {
            discountfield.setEditable(true);
            discountfield.grabFocus();
        } else {
            discountfield.setEditable(false);
            discountfield.setText("0");
            nettotalfield.setText(totalinpos.getText());
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        if (jCheckBox2.isSelected()) {
            vatfield.setEditable(true);
            vatfield.grabFocus();
        } else {
            vatfield.setEditable(false);
            vatfield.setText("0");
            nettotalfield.setText(totalinpos.getText());
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void cartlisttableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cartlisttableMouseClicked

    }//GEN-LAST:event_cartlisttableMouseClicked

    private void stocktableinpostableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stocktableinpostableMouseClicked
        searchinposfield.setText((String) stocktableinpostable.getValueAt(stocktableinpostable.getSelectedRow(), 0));
        quantityinpos.setEnabled(true);
        quantityinpos.setEditable(true);
        quantityinpos.grabFocus();
    }//GEN-LAST:event_stocktableinpostableMouseClicked

    private void searchinposfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchinposfieldActionPerformed
        if (searchinposfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Search / Select Item !");
        } else {
            quantityinpos.setEditable(true);
            quantityinpos.grabFocus();
        }
    }//GEN-LAST:event_searchinposfieldActionPerformed

    private void searchinposfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchinposfieldKeyReleased
        if (searchcomboinpos.getSelectedIndex() == 0) {
            try {
                ResultSet rs = DB.DB.search("SELECT * FROM  `stock` WHERE  Item_Id LIKE  '" + searchinposfield.getText() + "%' AND `Quantity`>0");
                DefaultTableModel dtm = (DefaultTableModel) stocktableinpostable.getModel();
                dtm.setRowCount(0);
                while (rs.next()) {
                    Vector v = new Vector();
                    v.add(rs.getString(2));
                    v.add(rs.getString(3));
                    v.add(rs.getString(13));
                    v.add(rs.getString(7));
                    dtm.addRow(v);
                    stocktableinpostable.selectAll();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        if (searchcomboinpos.getSelectedIndex() == 1) {
            try {
                ResultSet rs = DB.DB.search("SELECT * FROM  `stock` WHERE  Item_Name LIKE  '" + searchinposfield.getText() + "%' ");
                DefaultTableModel dtm = (DefaultTableModel) stocktableinpostable.getModel();
                dtm.setRowCount(0);
                while (rs.next()) {
                    Vector v = new Vector();
                    v.add(rs.getString(2));
                    v.add(rs.getString(3));
                    v.add(rs.getString(13));
                    v.add(rs.getString(7));
                    dtm.addRow(v);

                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_searchinposfieldKeyReleased

    private void searchcomboinposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchcomboinposActionPerformed

        try {

            ResultSet rs = DB.DB.search("SELECT * FROM  `stock` WHERE  '" + searchcomboinpos.getSelectedItem().toString() + "' LIKE '" + searchinposfield.getText() + "' ");
            DefaultTableModel dtm = (DefaultTableModel) stocktableinpostable.getModel();
            dtm.setRowCount(0);
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString(2));
                v.add(rs.getString(3));
                v.add(rs.getString(13));
                v.add(rs.getString(7));
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_searchcomboinposActionPerformed

    private void quantityinposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityinposActionPerformed

    }//GEN-LAST:event_quantityinposActionPerformed

    private void quantityinposKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantityinposKeyReleased

    }//GEN-LAST:event_quantityinposKeyReleased

    private void quantityinposKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantityinposKeyTyped

        char c = evt.getKeyChar();

        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE) || (c == KeyEvent.VK_ENTER))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_quantityinposKeyTyped

    private void additeminposMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_additeminposMouseEntered
        additeminpos.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_additeminposMouseEntered

    private void additeminposMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_additeminposMouseExited
        additeminpos.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_additeminposMouseExited

    private void additeminposMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_additeminposMousePressed
        additeminpos.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_additeminposMousePressed

    private void additeminposMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_additeminposMouseReleased
        additeminpos.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_additeminposMouseReleased

    private void additeminposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_additeminposActionPerformed
        if (searchinposfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Search / Select Item !");
        } else if (quantityinpos.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter Quntity !");
        } else {
            int quantitytyped = parseInt(quantityinpos.getText());
            String stockcount = stocktableinpostable.getValueAt(stocktableinpostable.getSelectedRow(), 2).toString();
            int stockintii = Integer.parseInt(stockcount);
            if (stockintii < quantitytyped) {
                JOptionPane.showMessageDialog(this, "Enter Quantity less than " + stockintii + " ");
            } else if (quantitytyped == 0) {
                JOptionPane.showMessageDialog(this, "Out of Item Quantity !");
            } else {
                int tostocktableup = stockintii - quantitytyped;
                DefaultTableModel dtm = (DefaultTableModel) stocktableinpostable.getModel();
                dtm.setValueAt(tostocktableup, stocktableinpostable.getSelectedRow(), 2);
                String itemID = searchinposfield.getText().toString();
                String itemName = stocktableinpostable.getValueAt(stocktableinpostable.getSelectedRow(), 1).toString();
                String stock = stocktableinpostable.getValueAt(stocktableinpostable.getSelectedRow(), 2).toString();
                String PerPrice = stocktableinpostable.getValueAt(stocktableinpostable.getSelectedRow(), 3).toString();
                int Perpriceint = Integer.parseInt(PerPrice);
                int quantity = Integer.parseInt(quantityinpos.getText());
                int stockint = Integer.parseInt(stock);
                if (quantityinpos.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Add quantity");
                } else {
                    DefaultTableModel dtml = (DefaultTableModel) cartlisttable.getModel();

                    int count = cartlisttable.getRowCount();

                    boolean flag = true;
                    for (int i = 0; i < count; i++) {
                        String prerow = (String) cartlisttable.getValueAt(i, 0);
                        if (itemID.equals(prerow)) {
                            flag = false;
                            quantity++;
                            int cartquaex = (int) dtml.getValueAt(i, 3);
                            int exisquantity = quantity + cartquaex;
                            dtml.removeRow(i);
                            Vector v = new Vector();
                            v.add(itemID);
                            v.add(itemName);
                            v.add(PerPrice);
                            v.add(exisquantity);
                            v.add(Perpriceint * (exisquantity));
                            dtml.addRow(v);

                        }
                    }
                    if (flag) {
                        Vector v = new Vector();
                        v.add(itemID);
                        v.add(itemName);
                        v.add(PerPrice);
                        v.add(quantity);
                        v.add(Perpriceint * (quantity));
                        dtml.addRow(v);

                    }
                }
            }
        }
    }//GEN-LAST:event_additeminposActionPerformed

    private void removeitemfromlistbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeitemfromlistbtnMouseEntered
        removeitemfromlistbtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_removeitemfromlistbtnMouseEntered

    private void removeitemfromlistbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeitemfromlistbtnMouseExited
        removeitemfromlistbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_removeitemfromlistbtnMouseExited

    private void removeitemfromlistbtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeitemfromlistbtnMousePressed
        removeitemfromlistbtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_removeitemfromlistbtnMousePressed

    private void removeitemfromlistbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeitemfromlistbtnMouseReleased
        removeitemfromlistbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_removeitemfromlistbtnMouseReleased

    private void removeitemfromlistbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeitemfromlistbtnActionPerformed
        if (cartlisttable.getSelectionModel().isSelectionEmpty()) {
            JOptionPane.showMessageDialog(this, "Select Row to Delete");
        } else {
            if (stocktableinpostable.getSelectedRow() == cartlisttable.getSelectedRow()) {
                String stockcount = stocktableinpostable.getValueAt(stocktableinpostable.getSelectedRow(), 2).toString();
                int stockintii = Integer.parseInt(stockcount);
                String cartcount = cartlisttable.getValueAt(cartlisttable.getSelectedRow(), 3).toString();
                int quantitytyped = Integer.parseInt(cartcount);
                int tostocktableup = stockintii + quantitytyped;
                DefaultTableModel dtm = (DefaultTableModel) stocktableinpostable.getModel();
                dtm.setValueAt(tostocktableup, stocktableinpostable.getSelectedRow(), 2);
                DefaultTableModel dtmremv = (DefaultTableModel) cartlisttable.getModel();
                dtmremv.removeRow(cartlisttable.getSelectedRow());
            }

            //        int[] i = cartlisttable.getSelectedRows();
            //        DefaultTableModel dtmremv = (DefaultTableModel) cartlisttable.getModel();
            //        for (int j = i.length - 1; j >= 0; j--) {
            //            dtmremv.removeRow(i[j]);
            //        }
        }
    }//GEN-LAST:event_removeitemfromlistbtnActionPerformed

    private void SellidfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SellidfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SellidfieldActionPerformed

    private void SellidfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SellidfieldKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_SellidfieldKeyReleased

    private void BillokbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BillokbtnMouseEntered
        Billokbtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_BillokbtnMouseEntered

    private void BillokbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BillokbtnMouseExited
        Billokbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_BillokbtnMouseExited

    private void BillokbtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BillokbtnMousePressed
        Billokbtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_BillokbtnMousePressed

    private void BillokbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BillokbtnMouseReleased
        Billokbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_BillokbtnMouseReleased

    private void BillokbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BillokbtnActionPerformed
        double totcookie = 0;
        int count2 = cartlisttable.getRowCount();
        for (int i = 0; i < count2; i++) {
            totcookie += Double.parseDouble(cartlisttable.getValueAt(i, 4).toString());
        }
        totalinpos.setText("" + totcookie);
        nettotalfield.setText("" + totcookie);
        quantityinpos.setText(null);
        searchinposfield.setText(null);
        searchinposfield.grabFocus();
        paymentfield.grabFocus();
    }//GEN-LAST:event_BillokbtnActionPerformed

    private void backtoposMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtoposMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_backtoposMouseEntered

    private void backtoposMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtoposMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_backtoposMouseExited

    private void backtoposMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtoposMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_backtoposMousePressed

    private void backtoposMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backtoposMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_backtoposMouseReleased

    private void backtoposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backtoposActionPerformed
        pospanelk.setVisible(true);
        invoice.setVisible(false);
    }//GEN-LAST:event_backtoposActionPerformed

    private void salesrecordstableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salesrecordstableMouseClicked

    }//GEN-LAST:event_salesrecordstableMouseClicked

    private void printinvoicebtninsellrecordsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printinvoicebtninsellrecordsMouseEntered
        printinvoicebtninsellrecords.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_printinvoicebtninsellrecordsMouseEntered

    private void printinvoicebtninsellrecordsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printinvoicebtninsellrecordsMouseExited
        printinvoicebtninsellrecords.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_printinvoicebtninsellrecordsMouseExited

    private void printinvoicebtninsellrecordsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printinvoicebtninsellrecordsMousePressed
        printinvoicebtninsellrecords.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_printinvoicebtninsellrecordsMousePressed

    private void printinvoicebtninsellrecordsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printinvoicebtninsellrecordsMouseReleased
        printinvoicebtninsellrecords.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_printinvoicebtninsellrecordsMouseReleased

    private void printinvoicebtninsellrecordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printinvoicebtninsellrecordsActionPerformed
        sellrecordstab.removeAll();
        new Thread() {
            public void run() {
                try {
                    String path = "C:\\JasperReports\\INVOICEGFS.jrxml";
                    JasperReport compileReport = JasperCompileManager.compileReport(path);
                    HashMap hm = new HashMap();
                    hm.put("Sellidfield", billbumberfieldinsellrecords.getText());
                    JasperPrint jp = JasperFillManager.fillReport(compileReport, hm, DB.DB.getConnection());
                    sellrecordstab.add("Preview Invoice", new JPanel().add(new JRViewer(jp)));

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }.start();

    }//GEN-LAST:event_printinvoicebtninsellrecordsActionPerformed

    private void billbumberfieldinsellrecordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billbumberfieldinsellrecordsActionPerformed
        if (billbumberfieldinsellrecords.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Search Sell Record First !");
        } else {
            DefaultTableModel dtm = (DefaultTableModel) salesrecordstable.getModel();
            dtm.setRowCount(0);
            refreshsellrecords();
        }
    }//GEN-LAST:event_billbumberfieldinsellrecordsActionPerformed

    private void findbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findbtnMouseEntered
        findbtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_findbtnMouseEntered

    private void findbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findbtnMouseExited
        findbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_findbtnMouseExited

    private void findbtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findbtnMousePressed
        findbtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_findbtnMousePressed

    private void findbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findbtnMouseReleased
        findbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_findbtnMouseReleased

    private void findbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findbtnActionPerformed
        if (billbumberfieldinsellrecords.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Search Sell Record First !");
        } else {
            DefaultTableModel dtm = (DefaultTableModel) salesrecordstable.getModel();
            dtm.setRowCount(0);
            refreshsellrecords();
        }
    }//GEN-LAST:event_findbtnActionPerformed

    private void refreshsellrecords() {
        try {
            ResultSet rs = DB.DB.search("select * from `salesrecords` where Bill_number = '" + billbumberfieldinsellrecords.getText() + "'");
            DefaultTableModel dtm = (DefaultTableModel) salesrecordstable.getModel();
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString(8));
                v.add(rs.getString(2));
                v.add(rs.getString(7));
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        jButton1.setBackground(new Color(0, 234, 0));
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        jButton1.setBackground(new Color(0, 204, 0));
    }//GEN-LAST:event_jButton1MouseExited

    private void jButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseEntered
        jButton2.setBackground(new Color(255, 102, 102));
    }//GEN-LAST:event_jButton2MouseEntered

    private void jButton2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseExited
        jButton2.setBackground(new Color(255, 51, 0));
    }//GEN-LAST:event_jButton2MouseExited

    private void accountssettingslblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountssettingslblMouseClicked
        genaral.setVisible(true);
        backuprestorepanel.setVisible(false);
        about.setVisible(false);
        Email.setVisible(false);
        accountssettingslbl.setBackground(new Color(0, 50, 0));
        backuprestorelbl.setBackground(new Color(100, 183, 0));
        aboutlbl.setBackground(new Color(100, 183, 0));
        emaillbl.setBackground(new Color(100, 183, 0));
    }//GEN-LAST:event_accountssettingslblMouseClicked

    private void accountssettingslblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountssettingslblMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_accountssettingslblMouseEntered

    private void accountssettingslblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountssettingslblMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_accountssettingslblMouseExited

    private void manageemplblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_manageemplblMouseClicked
        manageemplbl.setBackground(new Color(0, 50, 0));
        empreportlbl.setBackground(new Color(100, 183, 0));
        empprofileslbl.setBackground(new Color(100, 183, 0));
        profilereportslbl.setBackground(new Color(100, 183, 0));
        payrolllbl.setBackground(new Color(100, 183, 0));
        mngemppnl.setVisible(true);
        empreportpnl.setVisible(false);
        empprofilepnl.setVisible(false);
        empprofilereportpnl.setVisible(false);
        payrollpnl.setVisible(false);
        DefaultTableModel dtm = (DefaultTableModel) employeetable.getModel();
        dtm.setRowCount(0);
        refreshemptable();

        setempfiltercombo();
    }//GEN-LAST:event_manageemplblMouseClicked
    private void setempfiltercombo() {
        try {
            jComboBox3.removeAllItems();
            ResultSet rs = DB.DB.search("SELECT DISTINCT `employeetype` FROM `emp`");

            while (rs.next()) {

                jComboBox3.addItem(rs.getString(1));
            }
        } catch (Exception e) {
        }
    }

    private void deletebtnempMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletebtnempMouseEntered
        deletebtnemp.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_deletebtnempMouseEntered

    private void deletebtnempMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletebtnempMouseExited
        deletebtnemp.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_deletebtnempMouseExited

    private void deletebtnempMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletebtnempMousePressed
        deletebtnemp.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_deletebtnempMousePressed

    private void deletebtnempMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletebtnempMouseReleased
        deletebtnemp.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_deletebtnempMouseReleased

    private void deletebtnempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnempActionPerformed

        int n = JOptionPane.showConfirmDialog(null, "Want to Delete this Employee ?", "", JOptionPane.YES_NO_OPTION);
        if (n == 0) {
            String deletingid = empidfield.getText();
            try {
                DB.DB.iud("delete from `emp` where `empid`='" + deletingid + "' ");
                String activityloghm = "INSERT INTO `log`(`accountId`,`user`, `activitytype`, `description`) VALUES ('0','Admin','Employee Delete','Employee " + deletingid + " removed by Admin')";
                DB.DB.iud(activityloghm);

                JOptionPane.showMessageDialog(this, "Item Deleted !");
                empidfield.setText(null);
                namefieldemp.setText(null);
                agefieldemp.setText(null);
                genderemp.setSelectedIndex(0);
                positionemp.setText(null);
                salaryemp.setText(null);
                DefaultTableModel dtm = (DefaultTableModel) employeetable.getModel();
                dtm.setRowCount(0);
                refreshemptable();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_deletebtnempActionPerformed

    private void BackupbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackupbtnMouseEntered
        Backupbtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_BackupbtnMouseEntered

    private void BackupbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackupbtnMouseExited
        Backupbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_BackupbtnMouseExited

    private void BackupbtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackupbtnMousePressed
        Backupbtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_BackupbtnMousePressed

    private void BackupbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackupbtnMouseReleased
        Backupbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_BackupbtnMouseReleased

    private void BackupbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackupbtnActionPerformed
        Process p = null;
        try {
            Runtime runtime = Runtime.getRuntime();
            p = runtime.exec("C:/xampp/mysql/bin/mysqldump.exe  -uroot  --add-drop-database -B stockplus  -r" + path);
            int processcomplete = p.waitFor();
            if (processcomplete == 0) {
                ImageIcon statusicon = new ImageIcon(getClass().getResource("images/success.png"));
                stateofbackuplbl.setIcon(statusicon);
            } else {
                ImageIcon statusicon = new ImageIcon(getClass().getResource("images/failed.png"));
                stateofbackuplbl.setIcon(statusicon);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_BackupbtnActionPerformed

    private void browsepathinbackupMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_browsepathinbackupMouseEntered
        browsepathinbackup.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_browsepathinbackupMouseEntered

    private void browsepathinbackupMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_browsepathinbackupMouseExited
        browsepathinbackup.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_browsepathinbackupMouseExited

    private void browsepathinbackupMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_browsepathinbackupMousePressed
        browsepathinbackup.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_browsepathinbackupMousePressed

    private void browsepathinbackupMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_browsepathinbackupMouseReleased
        browsepathinbackup.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_browsepathinbackupMouseReleased

    private void browsepathinbackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browsepathinbackupActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.showSaveDialog(this);
        String datefc = new SimpleDateFormat("dd-MM-yyyy").format(new Date());
        try {
            File f = fc.getSelectedFile();
            path = f.getAbsolutePath();
            path = path.replace('\\', '/');
            path = path + "_" + datefc + ".sql";
            backuplocationfield.setText(path);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_browsepathinbackupActionPerformed

    private void restorebtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_restorebtnMouseEntered
        restorebtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_restorebtnMouseEntered

    private void restorebtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_restorebtnMouseExited
        restorebtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_restorebtnMouseExited

    private void restorebtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_restorebtnMousePressed
        restorebtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_restorebtnMousePressed

    private void restorebtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_restorebtnMouseReleased
        restorebtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_restorebtnMouseReleased

    private void restorebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restorebtnActionPerformed
        String user = "root";
        String pass = "";
        String[] restoreCmd = new String[]{"C:/xampp/mysql/bin/mysql.exe", "--user=" + user, "--password=" + pass, "-e", "source " + path};
        Process process;
        try {
            process = Runtime.getRuntime().exec(restoreCmd);
            int procCom = process.waitFor();
            if (procCom == 0) {
                ImageIcon statusicon = new ImageIcon(getClass().getResource("images/success.png"));
                stateofrestorelbl.setIcon(statusicon);
            } else {
                ImageIcon statusicon = new ImageIcon(getClass().getResource("images/failed.png"));
                stateofrestorelbl.setIcon(statusicon);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_restorebtnActionPerformed

    private void browsepathinrestoreMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_browsepathinrestoreMouseEntered
        browsepathinrestore.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_browsepathinrestoreMouseEntered

    private void browsepathinrestoreMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_browsepathinrestoreMouseExited
        browsepathinrestore.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_browsepathinrestoreMouseExited

    private void browsepathinrestoreMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_browsepathinrestoreMousePressed
        browsepathinrestore.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_browsepathinrestoreMousePressed

    private void browsepathinrestoreMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_browsepathinrestoreMouseReleased
        browsepathinrestore.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_browsepathinrestoreMouseReleased

    private void browsepathinrestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browsepathinrestoreActionPerformed
        JFileChooser fcrestore = new JFileChooser();
        fcrestore.showOpenDialog(this);
        try {
            File f = fcrestore.getSelectedFile();
            path = f.getAbsolutePath();
            path = path.replace('\\', '/');
            restorelocationfield.setText(path);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_browsepathinrestoreActionPerformed

    private void backuprestorelblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backuprestorelblMouseClicked
        genaral.setVisible(false);
        backuprestorepanel.setVisible(true);
        about.setVisible(false);
        Email.setVisible(false);
        emaillbl.setBackground(new Color(100, 183, 0));
        backuprestorelbl.setBackground(new Color(0, 50, 0));
        accountssettingslbl.setBackground(new Color(100, 183, 0));
        aboutlbl.setBackground(new Color(100, 183, 0));

    }//GEN-LAST:event_backuprestorelblMouseClicked

    private void backuprestorelblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backuprestorelblMouseEntered

    }//GEN-LAST:event_backuprestorelblMouseEntered

    private void backuprestorelblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backuprestorelblMouseExited

    }//GEN-LAST:event_backuprestorelblMouseExited

    private void aboutlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutlblMouseClicked
        genaral.setVisible(false);
        backuprestorepanel.setVisible(false);
        about.setVisible(true);
        Email.setVisible(false);
        emaillbl.setBackground(new Color(100, 183, 0));
        aboutlbl.setBackground(new Color(0, 50, 0));
        backuprestorelbl.setBackground(new Color(100, 183, 0));
        accountssettingslbl.setBackground(new Color(100, 183, 0));

    }//GEN-LAST:event_aboutlblMouseClicked

    private void aboutlblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutlblMouseEntered

    }//GEN-LAST:event_aboutlblMouseEntered

    private void aboutlblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutlblMouseExited

    }//GEN-LAST:event_aboutlblMouseExited

    private void quciksearchviewstockKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quciksearchviewstockKeyPressed

    }//GEN-LAST:event_quciksearchviewstockKeyPressed

    private void quciksearchviewstockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quciksearchviewstockActionPerformed
        if (viewstocktable.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Not Found !");
        }
    }//GEN-LAST:event_quciksearchviewstockActionPerformed

    private void cate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cate1ActionPerformed
        cate2.grabFocus();
    }//GEN-LAST:event_cate1ActionPerformed

    private void cate1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cate1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_cate1KeyTyped

    private void cate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cate2ActionPerformed
        cate3.grabFocus();
    }//GEN-LAST:event_cate2ActionPerformed

    private void cate2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cate2KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_cate2KeyTyped

    private void cate3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cate3ActionPerformed
        cate4.grabFocus();
    }//GEN-LAST:event_cate3ActionPerformed

    private void cate3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cate3KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_cate3KeyTyped

    private void cate4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cate4ActionPerformed
        cate5.grabFocus();
    }//GEN-LAST:event_cate4ActionPerformed

    private void cate4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cate4KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_cate4KeyTyped

    private void cate5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cate5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cate5ActionPerformed

    private void cate5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cate5KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_cate5KeyTyped

    private void addbtnempMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addbtnempMouseEntered
        addbtnemp.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_addbtnempMouseEntered

    private void addbtnempMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addbtnempMouseExited
        addbtnemp.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_addbtnempMouseExited

    private void addbtnempMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addbtnempMousePressed
        addbtnemp.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_addbtnempMousePressed

    private void addbtnempMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addbtnempMouseReleased
        addbtnemp.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_addbtnempMouseReleased

    private void addbtnempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnempActionPerformed
        String activitylogempadd = "INSERT INTO `log`(`accountId`,`user`, `activitytype`, `description`) VALUES ('0','Admin','Employee Add','Admin Added New Employee')";
        String empadd = "INSERT INTO `emp`(`name`, `age`,`gender`,`employeetype`,`salary`) VALUES ('" + namefieldemp.getText().trim() + "','" + agefieldemp.getText() + "','" + genderemp.getSelectedItem().toString() + "','" + positionemp.getText() + "','" + salaryemp.getText() + "')";
        try {
            DB.DB.iud(empadd);
            DB.DB.iud(activitylogempadd);
            generatenewempID();
            DefaultTableModel dtm = (DefaultTableModel) employeetable.getModel();
            dtm.setRowCount(0);
            refreshemptable();
            JOptionPane.showMessageDialog(this, "Employee Added");
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_addbtnempActionPerformed

    private void updatebtnempMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebtnempMouseEntered
        updatebtnemp.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_updatebtnempMouseEntered

    private void updatebtnempMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebtnempMouseExited
        updatebtnemp.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_updatebtnempMouseExited

    private void updatebtnempMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebtnempMousePressed
        updatebtnemp.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_updatebtnempMousePressed

    private void updatebtnempMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebtnempMouseReleased
        updatebtnemp.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_updatebtnempMouseReleased

    private void updatebtnempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnempActionPerformed
        try {
            DB.DB.iud("UPDATE `emp` SET `name`='" + namefieldemp.getText() + "', `age`='" + agefieldemp.getText() + "', `gender`='" + genderemp.getSelectedItem() + "', `employeetype`='" + positionemp.getText() + "', `salary`='" + salaryemp.getText() + "' where `empid`='" + empidfield.getText() + "' ");
            JOptionPane.showMessageDialog(null, "Employee Update Success !");
            DefaultTableModel dtm = (DefaultTableModel) employeetable.getModel();
            dtm.setRowCount(0);
            refreshemptable();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_updatebtnempActionPerformed

    private void refreshbtnempMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshbtnempMouseEntered
        refreshbtnemp.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_refreshbtnempMouseEntered

    private void refreshbtnempMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshbtnempMouseExited
        refreshbtnemp.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_refreshbtnempMouseExited

    private void refreshbtnempMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshbtnempMousePressed
        refreshbtnemp.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_refreshbtnempMousePressed

    private void refreshbtnempMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshbtnempMouseReleased
        refreshbtnemp.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_refreshbtnempMouseReleased

    private void refreshbtnempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshbtnempActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) employeetable.getModel();
        dtm.setRowCount(0);
        refreshemptable();
        DefaultTableModel dtm2 = (DefaultTableModel) emptable2.getModel();
        dtm.setRowCount(0);
        refreshemptable();
        generatenewempID();
    }//GEN-LAST:event_refreshbtnempActionPerformed

    private void updatebtnemp2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebtnemp2MouseEntered
        updatebtnemp2.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_updatebtnemp2MouseEntered

    private void updatebtnemp2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebtnemp2MouseExited
        updatebtnemp2.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_updatebtnemp2MouseExited

    private void updatebtnemp2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebtnemp2MousePressed
        updatebtnemp2.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_updatebtnemp2MousePressed

    private void updatebtnemp2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebtnemp2MouseReleased
        updatebtnemp2.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_updatebtnemp2MouseReleased

    private void updatebtnemp2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnemp2ActionPerformed
        employeereporttab.removeAll();
        new Thread() {
            public void run() {
                try {
                    String path = "C:\\JasperReports\\Employee_Position.jrxml";
                    JasperReport compileReport = JasperCompileManager.compileReport(path);
                    HashMap map = new HashMap();
                    map.put("employeetype", jComboBox3.getSelectedItem().toString());
                    JasperPrint jp = JasperFillManager.fillReport(compileReport, null, DB.DB.getConnection());
                    employeereporttab.add(jComboBox3.getSelectedItem().toString() + " Employees Report", new JPanel().add(new JRViewer(jp)));
                } catch (Exception e) {
                    e.printStackTrace();
                }
                try {
                    String path = "C:\\JasperReports\\EmployeeReportGFS.jrxml";
                    JasperReport compileReport = JasperCompileManager.compileReport(path);
                    JasperPrint jp = JasperFillManager.fillReport(compileReport, null, DB.DB.getConnection());
                    employeereporttab.add("Employee List Report", new JPanel().add(new JRViewer(jp)));
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }.start();
    }//GEN-LAST:event_updatebtnemp2ActionPerformed

    private void empreportlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_empreportlblMouseClicked
        new Thread() {
            public void run() {
                try {
                    String path = "C:\\JasperReports\\EmployeeReportGFS.jrxml";
                    JasperReport compileReport = JasperCompileManager.compileReport(path);
                    JasperPrint jp = JasperFillManager.fillReport(compileReport, null, DB.DB.getConnection());
                    employeereporttab.add("Employee List Report", new JPanel().add(new JRViewer(jp)));
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }.start();
        empreportlbl.setBackground(new Color(0, 50, 0));
        manageemplbl.setBackground(new Color(100, 183, 0));
        empprofileslbl.setBackground(new Color(100, 183, 0));
        profilereportslbl.setBackground(new Color(100, 183, 0));
        payrolllbl.setBackground(new Color(100, 183, 0));
        mngemppnl.setVisible(false);
        empreportpnl.setVisible(true);
        empprofilepnl.setVisible(false);
        empprofilereportpnl.setVisible(false);
        payrollpnl.setVisible(false);
    }//GEN-LAST:event_empreportlblMouseClicked

    private void empprofileslblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_empprofileslblMouseClicked
        empprofileslbl.setBackground(new Color(0, 50, 0));
        empreportlbl.setBackground(new Color(100, 183, 0));
        manageemplbl.setBackground(new Color(100, 183, 0));
        profilereportslbl.setBackground(new Color(100, 183, 0));
        payrolllbl.setBackground(new Color(100, 183, 0));
        mngemppnl.setVisible(false);
        empreportpnl.setVisible(false);
        empprofilepnl.setVisible(true);
        empprofilereportpnl.setVisible(false);
        payrollpnl.setVisible(false);
    }//GEN-LAST:event_empprofileslblMouseClicked

    private void profilereportslblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profilereportslblMouseClicked
        profilereportslbl.setBackground(new Color(0, 50, 0));
        empprofileslbl.setBackground(new Color(100, 183, 0));
        empreportlbl.setBackground(new Color(100, 183, 0));
        manageemplbl.setBackground(new Color(100, 183, 0));
        payrolllbl.setBackground(new Color(100, 183, 0));
        mngemppnl.setVisible(false);
        empreportpnl.setVisible(false);
        empprofilepnl.setVisible(false);
        empprofilereportpnl.setVisible(true);
        payrollpnl.setVisible(false);
    }//GEN-LAST:event_profilereportslblMouseClicked

    private void payrolllblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_payrolllblMouseClicked
        payrolllbl.setBackground(new Color(0, 50, 0));
        profilereportslbl.setBackground(new Color(100, 183, 0));
        empprofileslbl.setBackground(new Color(100, 183, 0));
        empreportlbl.setBackground(new Color(100, 183, 0));
        manageemplbl.setBackground(new Color(100, 183, 0));
        mngemppnl.setVisible(false);
        empreportpnl.setVisible(false);
        empprofilepnl.setVisible(false);
        empprofilereportpnl.setVisible(false);
        payrollpnl.setVisible(true);
        paymentsuitemployees();
        refreshpayroll();
    }//GEN-LAST:event_payrolllblMouseClicked

    private void refreshpayroll() {

        String roll = "SELECT * FROM payroll ";
        DefaultTableModel tm = (DefaultTableModel) employeestopaytable.getModel();
        tm.setRowCount(0);
        try {
            ResultSet prs = DB.DB.search(roll);
            while (prs.next()) {
                Vector v = new Vector();
                v.add(prs.getString(2));
                v.add(prs.getString(3));
                v.add(prs.getString(4));
                v.add(prs.getString(6));
                tm.addRow(v);
                jTextField8.setText(jLabel11.getText());
                int payrolltablerowcount = employeestopaytable.getRowCount();
                double total = 0.0;
                for (int i = 0; i < payrolltablerowcount; i++) {
                    double amount = Double.parseDouble(employeestopaytable.getValueAt(i, 3) + "");
                    total += amount;
                }
                jTextField7.setText(total + "");
                String month = salesday.getText().toString().substring(0, 7);
                ResultSet rsss = DB.DB.search("SELECT SUM(Sale_Earnings)  FROM `salesrecords` WHERE cast(DateTime as date) LIKE '" + month + "%' ");
                if (rsss.next()) {

                    double cshbnk = rsss.getDouble(1);
                    String currencyunit = currencyinvisible.getText();
                    jLabel11.setText(currencyunit + " " + cshbnk);
                }
                double cashbalancefiel = Double.parseDouble(jTextField8.getText()) - Double.parseDouble(jTextField7.getText());
                jTextField9.setText("" + cashbalancefiel);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void paymentsuitemployees() {
        String month = salesday.getText().toString().substring(5, 7);
        String year = salesday.getText().toString().substring(0, 4);
        String x = attendanceneedfrpay.getText();

        String select = "SELECT DISTINCT employee_id FROM employee_attendance WHERE (SELECT COUNT(employee_id) FROM employee_attendance) >= '" + x + "' AND month='" + month + "' AND year='" + year + "' ";
        String delete = "DELETE FROM payroll";
        try {
            DB.DB.iud(delete);
            ResultSet slt = DB.DB.search(select);
            while (slt.next()) {
                int salary = slt.getInt(1);
                String inst = "INSERT INTO payroll (empid,empname,month,year,payment) VALUES ('" + salary + "',(SELECT name FROM emp WHERE empid = '" + salary + "') ,'" + month + "', '" + year + "', (SELECT salary FROM emp WHERE empid = '" + salary + "'))";
                DB.DB.iud(inst);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void searchbtnemp1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbtnemp1MouseEntered
        searchbtnemp1.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_searchbtnemp1MouseEntered

    private void searchbtnemp1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbtnemp1MouseExited
        searchbtnemp1.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_searchbtnemp1MouseExited

    private void searchbtnemp1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbtnemp1MousePressed
        searchbtnemp1.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_searchbtnemp1MousePressed

    private void searchbtnemp1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbtnemp1MouseReleased
        searchbtnemp1.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_searchbtnemp1MouseReleased

    private void searchbtnemp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnemp1ActionPerformed
        try {
            ResultSet rs = DB.DB.search("SELECT * FROM  `emp` WHERE  `empid` LIKE  '" + searchfiledemp1.getText() + "' ");
            DefaultTableModel dtm = (DefaultTableModel) emptable2.getModel();
            dtm.setRowCount(0);
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString(1));
                empid2.setText(rs.getString(1));
                v.add(rs.getString(2));
                empname2.setText(rs.getString(2));
                v.add(rs.getString(3));
                empage2.setText(rs.getString(3));
                v.add(rs.getString(4));
                empgender2.setSelectedItem(rs.getString(4));
                v.add(rs.getString(5));
                empposition2.setText(rs.getString(5));
                v.add(rs.getString(6));
                empsallery2.setText(rs.getString(6));
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_searchbtnemp1ActionPerformed

    private void refreshbtnemp1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshbtnemp1MouseEntered
        refreshbtnemp1.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_refreshbtnemp1MouseEntered

    private void refreshbtnemp1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshbtnemp1MouseExited
        refreshbtnemp1.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_refreshbtnemp1MouseExited

    private void refreshbtnemp1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshbtnemp1MousePressed
        refreshbtnemp1.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_refreshbtnemp1MousePressed

    private void refreshbtnemp1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshbtnemp1MouseReleased
        refreshbtnemp1.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_refreshbtnemp1MouseReleased

    private void refreshbtnemp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshbtnemp1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_refreshbtnemp1ActionPerformed

    private void updatebtnemp5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebtnemp5MouseEntered
        updatebtnemp5.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_updatebtnemp5MouseEntered

    private void updatebtnemp5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebtnemp5MouseExited
        updatebtnemp5.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_updatebtnemp5MouseExited

    private void updatebtnemp5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebtnemp5MousePressed
        updatebtnemp5.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_updatebtnemp5MousePressed

    private void updatebtnemp5MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebtnemp5MouseReleased
        updatebtnemp5.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_updatebtnemp5MouseReleased

    private void updatebtnemp5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnemp5ActionPerformed
        new Thread() {
            public void run() {
                try {
                    String path = "C:\\JasperReports\\EmployeeProfileReportGFS.jrxml";
                    JasperReport compileReport = JasperCompileManager.compileReport(path);
                    HashMap hm = new HashMap();
                    hm.put("empidpara", empid2.getText());
                    JasperPrint jp = JasperFillManager.fillReport(compileReport, hm, DB.DB.getConnection());
                    empprofileprinttab.add("Profile Report", new JPanel().add(new JRViewer(jp)));
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }.start();

    }//GEN-LAST:event_updatebtnemp5ActionPerformed

    private void managecuslblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_managecuslblMouseClicked
        managecuslbl.setBackground(new Color(0, 50, 0));
        cusreportlbl.setBackground(new Color(100, 183, 0));
        cusprofileslbl.setBackground(new Color(100, 183, 0));
        cusprofilereportslbl.setBackground(new Color(100, 183, 0));
        membershipmnglbl.setBackground(new Color(100, 183, 0));
        mngcustomerpnl.setVisible(true);
        cusreportpnl.setVisible(false);
        cusprofilepnl.setVisible(false);
        cusprofilereportpnl.setVisible(false);
        membershipmng.setVisible(false);
        generatenewcusID();
        DefaultTableModel dtm = (DefaultTableModel) customertable.getModel();
        dtm.setRowCount(0);
        refreshcustable();
        membershipstuff();
    }//GEN-LAST:event_managecuslblMouseClicked

    private void managecuslblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_managecuslblMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_managecuslblMouseEntered

    private void managecuslblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_managecuslblMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_managecuslblMouseExited

    private void cusreportlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cusreportlblMouseClicked
        managecuslbl.setBackground(new Color(100, 183, 0));
        cusreportlbl.setBackground(new Color(0, 50, 0));
        cusprofileslbl.setBackground(new Color(100, 183, 0));
        cusprofilereportslbl.setBackground(new Color(100, 183, 0));
        membershipmnglbl.setBackground(new Color(100, 183, 0));
        mngcustomerpnl.setVisible(false);
        cusreportpnl.setVisible(true);
        cusprofilepnl.setVisible(false);
        cusprofilereportpnl.setVisible(false);
        membershipmng.setVisible(false);
        employeereporttab.removeAll();
        new Thread() {
            public void run() {
                try {
                    String path = "C:\\JasperReports\\CustomerReportGFS.jrxml";
                    JasperReport compileReport = JasperCompileManager.compileReport(path);
                    JasperPrint jp = JasperFillManager.fillReport(compileReport, null, DB.DB.getConnection());
                    jTabbedPane5.add("Customer List Report", new JPanel().add(new JRViewer(jp)));
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }.start();

    }//GEN-LAST:event_cusreportlblMouseClicked

    private void cusreportlblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cusreportlblMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_cusreportlblMouseEntered

    private void cusreportlblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cusreportlblMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_cusreportlblMouseExited

    private void cusprofileslblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cusprofileslblMouseClicked
        managecuslbl.setBackground(new Color(100, 183, 0));
        cusreportlbl.setBackground(new Color(100, 183, 0));
        cusprofileslbl.setBackground(new Color(0, 50, 0));
        cusprofilereportslbl.setBackground(new Color(100, 183, 0));
        membershipmnglbl.setBackground(new Color(100, 183, 0));
        mngcustomerpnl.setVisible(false);
        cusreportpnl.setVisible(false);
        cusprofilepnl.setVisible(true);
        cusprofilereportpnl.setVisible(false);
        membershipmng.setVisible(false);
    }//GEN-LAST:event_cusprofileslblMouseClicked

    private void cusprofileslblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cusprofileslblMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_cusprofileslblMouseEntered

    private void cusprofileslblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cusprofileslblMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_cusprofileslblMouseExited

    private void cusprofilereportslblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cusprofilereportslblMouseClicked
        managecuslbl.setBackground(new Color(100, 183, 0));
        cusreportlbl.setBackground(new Color(100, 183, 0));
        cusprofileslbl.setBackground(new Color(100, 183, 0));
        cusprofilereportslbl.setBackground(new Color(0, 50, 0));
        membershipmnglbl.setBackground(new Color(100, 183, 0));
        mngcustomerpnl.setVisible(false);
        cusreportpnl.setVisible(false);
        cusprofilepnl.setVisible(false);
        cusprofilereportpnl.setVisible(true);
        membershipmng.setVisible(false);
    }//GEN-LAST:event_cusprofilereportslblMouseClicked

    private void cusprofilereportslblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cusprofilereportslblMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_cusprofilereportslblMouseEntered

    private void cusprofilereportslblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cusprofilereportslblMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_cusprofilereportslblMouseExited

    private void membershipmnglblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_membershipmnglblMouseClicked
        managecuslbl.setBackground(new Color(100, 183, 0));
        cusreportlbl.setBackground(new Color(100, 183, 0));
        cusprofileslbl.setBackground(new Color(100, 183, 0));
        cusprofilereportslbl.setBackground(new Color(100, 183, 0));
        membershipmnglbl.setBackground(new Color(0, 50, 0));
        mngcustomerpnl.setVisible(false);
        cusreportpnl.setVisible(false);
        cusprofilepnl.setVisible(false);
        cusprofilereportpnl.setVisible(false);
        membershipmng.setVisible(true);
        membershipstuff();
    }//GEN-LAST:event_membershipmnglblMouseClicked

    private void membershipmnglblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_membershipmnglblMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_membershipmnglblMouseEntered

    private void membershipmnglblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_membershipmnglblMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_membershipmnglblMouseExited

    private void deletecustomerbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletecustomerbtnMouseEntered
        deletecustomerbtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_deletecustomerbtnMouseEntered

    private void deletecustomerbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletecustomerbtnMouseExited
        deletecustomerbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_deletecustomerbtnMouseExited

    private void deletecustomerbtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletecustomerbtnMousePressed
        deletecustomerbtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_deletecustomerbtnMousePressed

    private void deletecustomerbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletecustomerbtnMouseReleased
        deletecustomerbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_deletecustomerbtnMouseReleased

    private void deletecustomerbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletecustomerbtnActionPerformed
        int n = JOptionPane.showConfirmDialog(null, "Want to Delete this Customer ?", "", JOptionPane.YES_NO_OPTION);
        if (n == 0) {
            String deletingid = customeridfield.getText();
            try {
                DB.DB.iud("delete from `customers` where `cusid`='" + deletingid + "' ");
                String activityloghm = "INSERT INTO `log`(`accountId`,`user`, `activitytype`, `description`) VALUES ('0','Admin','Customer Delete','Customer " + deletingid + " removed by Admin')";
                DB.DB.iud(activityloghm);
                JOptionPane.showMessageDialog(this, "Customer Deleted !");
                customeridfield.setText(null);
                customernamefield.setText(null);
                customeragefield.setText(null);
                customergendercombo.setSelectedIndex(0);
                copperlogo1.setVisible(true);
                silverlogo1.setVisible(false);
                goldenlogo1.setVisible(false);
                platinumlogo1.setVisible(false);
                diamondlogo1.setVisible(false);
                DefaultTableModel dtm = (DefaultTableModel) customertable.getModel();
                dtm.setRowCount(0);
                refreshemptable();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_deletecustomerbtnActionPerformed

    private void addnewcustomerbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addnewcustomerbtnMouseEntered
        addnewcustomerbtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_addnewcustomerbtnMouseEntered

    private void addnewcustomerbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addnewcustomerbtnMouseExited
        addnewcustomerbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_addnewcustomerbtnMouseExited

    private void addnewcustomerbtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addnewcustomerbtnMousePressed
        addnewcustomerbtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_addnewcustomerbtnMousePressed

    private void addnewcustomerbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addnewcustomerbtnMouseReleased
        addnewcustomerbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_addnewcustomerbtnMouseReleased

    private void addnewcustomerbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addnewcustomerbtnActionPerformed
        String activitylogcusadd = "INSERT INTO `log`(`accountId`,`user`, `activitytype`, `description`) VALUES ('0','Admin','Customer Add','Admin Added New Customer')";
        String cusadd = "INSERT INTO `customers`(`name`, `age`,`gender`,`membership`,`nooforders`,`membershipdiscount`,memberships_id) VALUES ('" + customernamefield.getText().trim() + "','" + customeragefield.getText() + "','" + customergendercombo.getSelectedItem().toString() + "','Copper','0','0','1')";
        try {
            DB.DB.iud(cusadd);
            DB.DB.iud(activitylogcusadd);
            generatenewempID();
            DefaultTableModel dtm = (DefaultTableModel) customertable.getModel();
            dtm.setRowCount(0);
            refreshcustable();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_addnewcustomerbtnActionPerformed

    private void updatecustomerbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatecustomerbtnMouseEntered
        updatecustomerbtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_updatecustomerbtnMouseEntered

    private void updatecustomerbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatecustomerbtnMouseExited
        updatecustomerbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_updatecustomerbtnMouseExited

    private void updatecustomerbtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatecustomerbtnMousePressed
        updatecustomerbtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_updatecustomerbtnMousePressed

    private void updatecustomerbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatecustomerbtnMouseReleased
        updatecustomerbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_updatecustomerbtnMouseReleased

    private void updatecustomerbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatecustomerbtnActionPerformed
        try {
            DB.DB.iud("UPDATE `customers` SET `name`='" + customernamefield.getText() + "', `age`='" + customeragefield.getText() + "', `gender`='" + customergendercombo.getSelectedItem() + "' where `cusid`='" + customeridfield.getText() + "' ");
            JOptionPane.showMessageDialog(null, "Customer Update Success !");
            DefaultTableModel dtm = (DefaultTableModel) customertable.getModel();
            dtm.setRowCount(0);
            refreshcustable();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_updatecustomerbtnActionPerformed

    private void searchbtnemp2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbtnemp2MouseEntered
        searchbtnemp2.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_searchbtnemp2MouseEntered

    private void searchbtnemp2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbtnemp2MouseExited
        searchbtnemp2.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_searchbtnemp2MouseExited

    private void searchbtnemp2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbtnemp2MousePressed
        searchbtnemp2.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_searchbtnemp2MousePressed

    private void searchbtnemp2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbtnemp2MouseReleased
        searchbtnemp2.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_searchbtnemp2MouseReleased

    private void searchbtnemp2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnemp2ActionPerformed
        try {
            ResultSet rs = DB.DB.search("SELECT * FROM  `customers` WHERE  `cusid` LIKE  '" + customersearchfield0.getText() + "' ");
            DefaultTableModel dtm = (DefaultTableModel) customertable.getModel();
            dtm.setRowCount(0);
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString(1));
                customeridfield.setText(rs.getString(1));
                v.add(rs.getString(2));
                customernamefield.setText(rs.getString(2));
                v.add(rs.getString(3));
                customeragefield.setText(rs.getString(3));
                v.add(rs.getString(4));
                customergendercombo.setSelectedItem(rs.getString(4));
                v.add(rs.getString(5));
                if ("Copper".equals(rs.getString(5))) {
                    copperlogo1.setVisible(true);
                    silverlogo1.setVisible(false);
                    goldenlogo1.setVisible(false);
                    platinumlogo1.setVisible(false);
                    diamondlogo1.setVisible(false);
                } else if ("Silver".equals(rs.getString(5))) {
                    copperlogo1.setVisible(false);
                    silverlogo1.setVisible(true);
                    goldenlogo1.setVisible(false);
                    platinumlogo1.setVisible(false);
                    diamondlogo1.setVisible(false);
                } else if ("Gold".equals(rs.getString(5))) {
                    copperlogo1.setVisible(false);
                    silverlogo1.setVisible(false);
                    goldenlogo1.setVisible(true);
                    platinumlogo1.setVisible(false);
                    diamondlogo1.setVisible(false);
                } else if ("Platinum".equals(rs.getString(5))) {
                    copperlogo1.setVisible(false);
                    silverlogo1.setVisible(false);
                    goldenlogo1.setVisible(false);
                    platinumlogo1.setVisible(true);
                    diamondlogo1.setVisible(false);
                } else if ("Diamond".equals(rs.getString(5))) {
                    copperlogo1.setVisible(false);
                    silverlogo1.setVisible(false);
                    goldenlogo1.setVisible(false);
                    platinumlogo1.setVisible(false);
                    diamondlogo1.setVisible(true);
                }
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_searchbtnemp2ActionPerformed

    private void customerpnlrefreshMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerpnlrefreshMouseEntered
        customerpnlrefresh.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_customerpnlrefreshMouseEntered

    private void customerpnlrefreshMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerpnlrefreshMouseExited
        customerpnlrefresh.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_customerpnlrefreshMouseExited

    private void customerpnlrefreshMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerpnlrefreshMousePressed
        customerpnlrefresh.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_customerpnlrefreshMousePressed

    private void customerpnlrefreshMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerpnlrefreshMouseReleased
        customerpnlrefresh.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_customerpnlrefreshMouseReleased

    private void customerpnlrefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerpnlrefreshActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) employeetable.getModel();
        dtm.setRowCount(0);
        refreshemptable();
        DefaultTableModel dtm2 = (DefaultTableModel) emptable2.getModel();
        dtm.setRowCount(0);
        refreshemptable();
        generatenewempID();
        membershipstuff();
    }//GEN-LAST:event_customerpnlrefreshActionPerformed

    private void customerfilterbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerfilterbtnMouseEntered
        customerfilterbtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_customerfilterbtnMouseEntered

    private void customerfilterbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerfilterbtnMouseExited
        customerfilterbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_customerfilterbtnMouseExited

    private void customerfilterbtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerfilterbtnMousePressed
        customerfilterbtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_customerfilterbtnMousePressed

    private void customerfilterbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerfilterbtnMouseReleased
        customerfilterbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_customerfilterbtnMouseReleased

    private void customerfilterbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerfilterbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerfilterbtnActionPerformed

    private void customerlistprintreportbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerlistprintreportbtnMouseEntered
        customerlistprintreportbtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_customerlistprintreportbtnMouseEntered

    private void customerlistprintreportbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerlistprintreportbtnMouseExited
        customerlistprintreportbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_customerlistprintreportbtnMouseExited

    private void customerlistprintreportbtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerlistprintreportbtnMousePressed
        customerlistprintreportbtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_customerlistprintreportbtnMousePressed

    private void customerlistprintreportbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerlistprintreportbtnMouseReleased
        customerlistprintreportbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_customerlistprintreportbtnMouseReleased

    private void customerlistprintreportbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerlistprintreportbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerlistprintreportbtnActionPerformed

    private void searchbtnemp3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbtnemp3MouseEntered
        searchbtnemp3.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_searchbtnemp3MouseEntered

    private void searchbtnemp3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbtnemp3MouseExited
        searchbtnemp3.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_searchbtnemp3MouseExited

    private void searchbtnemp3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbtnemp3MousePressed
        searchbtnemp3.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_searchbtnemp3MousePressed

    private void searchbtnemp3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbtnemp3MouseReleased
        searchbtnemp3.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_searchbtnemp3MouseReleased

    private void searchbtnemp3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnemp3ActionPerformed
        try {
            ResultSet rs = DB.DB.search("SELECT * FROM  `customers` WHERE  `cusid` LIKE  '" + searchcusfield2.getText() + "' ");
            DefaultTableModel dtm = (DefaultTableModel) customertabl2.getModel();
            dtm.setRowCount(0);
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString(1));
                customerid2.setText(rs.getString(1));
                v.add(rs.getString(2));
                cusnamefield2.setText(rs.getString(2));
                v.add(rs.getString(3));
                cusagefield2.setText(rs.getString(3));
                v.add(rs.getString(4));
                cusgender2.setSelectedItem(rs.getString(4));
                v.add(rs.getString(5));
                if ("Copper".equals(rs.getString(5))) {
                    copperlogo2.setVisible(true);
                    silverlogo2.setVisible(false);
                    goldenlogo2.setVisible(false);
                    platinumlogo2.setVisible(false);
                    diamondlogo2.setVisible(false);
                } else if ("Silver".equals(rs.getString(5))) {
                    copperlogo2.setVisible(false);
                    silverlogo2.setVisible(true);
                    goldenlogo2.setVisible(false);
                    platinumlogo2.setVisible(false);
                    diamondlogo2.setVisible(false);
                } else if ("Gold".equals(rs.getString(5))) {
                    copperlogo2.setVisible(false);
                    silverlogo2.setVisible(false);
                    goldenlogo2.setVisible(true);
                    platinumlogo2.setVisible(false);
                    diamondlogo2.setVisible(false);
                } else if ("Platinum".equals(rs.getString(5))) {
                    copperlogo2.setVisible(false);
                    silverlogo2.setVisible(false);
                    goldenlogo2.setVisible(false);
                    platinumlogo2.setVisible(true);
                    diamondlogo2.setVisible(false);
                } else if ("Diamond".equals(rs.getString(5))) {
                    copperlogo2.setVisible(false);
                    silverlogo2.setVisible(false);
                    goldenlogo2.setVisible(false);
                    platinumlogo2.setVisible(false);
                    diamondlogo2.setVisible(true);
                }
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_searchbtnemp3ActionPerformed

    private void refreshbtnemp3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshbtnemp3MouseEntered
        refreshbtnemp3.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_refreshbtnemp3MouseEntered

    private void refreshbtnemp3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshbtnemp3MouseExited
        refreshbtnemp3.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_refreshbtnemp3MouseExited

    private void refreshbtnemp3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshbtnemp3MousePressed
        refreshbtnemp3.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_refreshbtnemp3MousePressed

    private void refreshbtnemp3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshbtnemp3MouseReleased
        refreshbtnemp3.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_refreshbtnemp3MouseReleased

    private void refreshbtnemp3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshbtnemp3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_refreshbtnemp3ActionPerformed

    private void printcusprofileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printcusprofileMouseEntered
        printcusprofile.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_printcusprofileMouseEntered

    private void printcusprofileMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printcusprofileMouseExited
        printcusprofile.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_printcusprofileMouseExited

    private void printcusprofileMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printcusprofileMousePressed
        printcusprofile.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_printcusprofileMousePressed

    private void printcusprofileMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printcusprofileMouseReleased
        printcusprofile.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_printcusprofileMouseReleased

    private void printcusprofileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printcusprofileActionPerformed
        new Thread() {
            public void run() {
                try {
                    String path = "C:\\JasperReports\\CustomerProfileReportGFS.jrxml";
                    JasperReport compileReport = JasperCompileManager.compileReport(path);
                    HashMap hm = new HashMap();
                    hm.put("cuspara", customerid2.getText());
                    JasperPrint jp = JasperFillManager.fillReport(compileReport, hm, DB.DB.getConnection());
                    customerprofiletabbed.add("Profile Report", new JPanel().add(new JRViewer(jp)));
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }.start();

    }//GEN-LAST:event_printcusprofileActionPerformed

    private void searchbtnemp1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchbtnemp1KeyReleased

    }//GEN-LAST:event_searchbtnemp1KeyReleased

    private void employeetableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeetableMouseClicked
        empidfield.setText((String) employeetable.getValueAt(employeetable.getSelectedRow(), 0));
        searchfiledemp0.setText((String) employeetable.getValueAt(employeetable.getSelectedRow(), 0));
        namefieldemp.setText((String) employeetable.getValueAt(employeetable.getSelectedRow(), 1));
        agefieldemp.setText((String) employeetable.getValueAt(employeetable.getSelectedRow(), 2));
        genderemp.setSelectedItem((String) employeetable.getValueAt(employeetable.getSelectedRow(), 3));
        positionemp.setText((String) employeetable.getValueAt(employeetable.getSelectedRow(), 4));
        salaryemp.setText((String) employeetable.getValueAt(employeetable.getSelectedRow(), 5));
    }//GEN-LAST:event_employeetableMouseClicked

    private void searchbtnemp4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbtnemp4MouseEntered
        searchbtnemp4.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_searchbtnemp4MouseEntered

    private void searchbtnemp4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbtnemp4MouseExited
        searchbtnemp4.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_searchbtnemp4MouseExited

    private void searchbtnemp4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbtnemp4MousePressed
        searchbtnemp4.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_searchbtnemp4MousePressed

    private void searchbtnemp4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbtnemp4MouseReleased
        searchbtnemp4.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_searchbtnemp4MouseReleased

    private void searchbtnemp4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnemp4ActionPerformed
        try {
            ResultSet rs = DB.DB.search("SELECT * FROM  `emp` WHERE  `empid` LIKE  '" + searchfiledemp0.getText() + "' ");
            DefaultTableModel dtm = (DefaultTableModel) employeetable.getModel();
            dtm.setRowCount(0);
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString(1));
                empidfield.setText(rs.getString(1));
                v.add(rs.getString(2));
                namefieldemp.setText(rs.getString(2));
                v.add(rs.getString(3));
                agefieldemp.setText(rs.getString(3));
                v.add(rs.getString(4));
                genderemp.setSelectedItem(rs.getString(4));
                v.add(rs.getString(5));
                positionemp.setText(rs.getString(5));
                v.add(rs.getString(6));
                salaryemp.setText(rs.getString(6));
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_searchbtnemp4ActionPerformed

    private void chartslblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chartslblMouseClicked
        pospanel.setVisible(false);
        sellrecordspanel.setVisible(false);
        chartspnl.setVisible(true);
        poslbl.setBackground(new Color(100, 183, 0));
        salerecordslbl.setBackground(new Color(100, 183, 0));
        chartslbl.setBackground(new Color(0, 50, 0));
        chartstab.removeAll();
        DefaultCategoryDataset Dataset = new DefaultCategoryDataset();
        try {
            ResultSet rs = DB.DB.search("SELECT `itemid`,SUM(`quantity`) FROM `salesrecords` WHERE cast(DateTime as date) = '" + salesday.getText() + "' GROUP BY `itemid`");
            while (rs.next()) {
                Dataset.setValue(rs.getInt(2), "Quantity", rs.getString(1));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        JFreeChart chart = ChartFactory.createBarChart3D("Daily Items and Sold Quantities Chart", "Item Id", "Quantity", Dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot P = chart.getCategoryPlot();
        P.setRangeGridlinePaint(Color.WHITE);
        P.setBackgroundPaint(Color.WHITE);
        ((BarRenderer) P.getRenderer()).setBarPainter(new StandardBarPainter());
        BarRenderer r = (BarRenderer) chart.getCategoryPlot().getRenderer();
        r.setSeriesPaint(0, new Color(100, 183, 0));
        chartstab.add("Daily Items and Sold Quantities", new JPanel().add(new ChartPanel(chart)));
        DefaultCategoryDataset Datasettwo = new DefaultCategoryDataset();
        try {
            String month = salesday.getText().toString().substring(0, 7);
            ResultSet rs = DB.DB.search("SELECT `itemid`,SUM(`quantity`) FROM `salesrecords` WHERE cast(DateTime as date) LIKE '" + month + "%'  GROUP BY `itemid`");
            while (rs.next()) {
                Datasettwo.setValue(rs.getInt(2), "Quantity", rs.getString(1));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        JFreeChart chart2 = ChartFactory.createBarChart3D("Monthly Items and Sold Quantities Chart", "Item Id", "Quantity", Datasettwo, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot P2 = chart2.getCategoryPlot();
        P2.setRangeGridlinePaint(Color.WHITE);
        P2.setBackgroundPaint(Color.WHITE);
        ((BarRenderer) P2.getRenderer()).setBarPainter(new StandardBarPainter());
        BarRenderer r2 = (BarRenderer) chart2.getCategoryPlot().getRenderer();
        r2.setSeriesPaint(0, new Color(0, 112, 0));
        chartstab.add("Monthly Items and Sold Quantities", new JPanel().add(new ChartPanel(chart2)));
    }//GEN-LAST:event_chartslblMouseClicked

    private void chartslblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chartslblMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_chartslblMouseEntered

    private void chartslblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chartslblMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_chartslblMouseExited

    private void membershipalliinonebtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_membershipalliinonebtnMouseEntered
        membershipalliinonebtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_membershipalliinonebtnMouseEntered

    private void membershipalliinonebtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_membershipalliinonebtnMouseExited
        membershipalliinonebtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_membershipalliinonebtnMouseExited

    private void membershipalliinonebtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_membershipalliinonebtnMousePressed
        membershipalliinonebtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_membershipalliinonebtnMousePressed

    private void membershipalliinonebtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_membershipalliinonebtnMouseReleased
        membershipalliinonebtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_membershipalliinonebtnMouseReleased

    private void membershipalliinonebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_membershipalliinonebtnActionPerformed
        try {
            DB.DB.iud("UPDATE `memberships` SET `ordersneeded` = '" + ordersneededfield.getText() + "', `membershipdiscount` = '" + membeshipdiscountfield.getText() + "' WHERE `membershiptypes` = '" + membershipcombo.getSelectedItem().toString() + "' ");
            JOptionPane.showMessageDialog(this, "Member Settings Changed");
        } catch (Exception e) {
        }
        membershipstuff();
    }//GEN-LAST:event_membershipalliinonebtnActionPerformed

    private void membershipcomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_membershipcomboActionPerformed

        try {

            ResultSet rs = DB.DB.search("SELECT * FROM  `customers` WHERE  `membership` LIKE  '" + membershipcombo.getSelectedItem().toString() + "' ");
            DefaultTableModel dtm = (DefaultTableModel) membershiptable.getModel();
            dtm.setRowCount(0);
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString(1));
                v.add(rs.getString(2));
                v.add(rs.getString(5));
                v.add(rs.getString(6));
                v.add(rs.getString(7));
                dtm.addRow(v);

            }
            ResultSet cop = DB.DB.search("SELECT * FROM  `memberships` WHERE  `membershiptypes` LIKE  '" + membershipcombo.getSelectedItem().toString() + "' ");
            while (cop.next()) {
                ordersneededfield.setText(cop.getString(3));
                membeshipdiscountfield.setText(cop.getString(4));
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        if (membershipcombo.getSelectedIndex() == 0) {
            copperlogo.setVisible(true);
            silverlogo.setVisible(false);
            goldenlogo.setVisible(false);
            platinumlogo.setVisible(false);
            diamondlogo.setVisible(false);
        } else if (membershipcombo.getSelectedIndex() == 1) {
            copperlogo.setVisible(false);
            silverlogo.setVisible(true);
            goldenlogo.setVisible(false);
            platinumlogo.setVisible(false);
            diamondlogo.setVisible(false);
        } else if (membershipcombo.getSelectedIndex() == 2) {
            copperlogo.setVisible(false);
            silverlogo.setVisible(false);
            goldenlogo.setVisible(true);
            platinumlogo.setVisible(false);
            diamondlogo.setVisible(false);
        } else if (membershipcombo.getSelectedIndex() == 3) {
            copperlogo.setVisible(false);
            silverlogo.setVisible(false);
            goldenlogo.setVisible(false);
            platinumlogo.setVisible(true);
            diamondlogo.setVisible(false);
        } else if (membershipcombo.getSelectedIndex() == 4) {
            copperlogo.setVisible(false);
            silverlogo.setVisible(false);
            goldenlogo.setVisible(false);
            platinumlogo.setVisible(false);
            diamondlogo.setVisible(true);
        }
    }//GEN-LAST:event_membershipcomboActionPerformed

    private void newemppasswordfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newemppasswordfieldActionPerformed
        if (newemppasswordfield.getText().isEmpty()) {
            ImageIcon statusiconcurrentpassword = new ImageIcon(getClass().getResource("images/failed.png"));
            employeenewpassstateinsettings.setIcon(statusiconcurrentpassword);
        } else {
            ImageIcon statusiconcurrentpassword = new ImageIcon(getClass().getResource("images/success.png"));
            employeenewpassstateinsettings.setIcon(statusiconcurrentpassword);
            retypenewemppasswordfield3.setEnabled(true);
            retypenewemppasswordfield3.grabFocus();
        }
    }//GEN-LAST:event_newemppasswordfieldActionPerformed

    private void retypenewemppasswordfield3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retypenewemppasswordfield3ActionPerformed
        if (newemppasswordfield.getText().toString().equals(retypenewemppasswordfield3.getText().toString())) {
            ImageIcon statusiconcurrentpassword = new ImageIcon(getClass().getResource("images/success.png"));
            employeeretypepassstateinsettings.setIcon(statusiconcurrentpassword);
            try {
                     } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Retype Incorrect !");
            ImageIcon statusiconcurrentpassword = new ImageIcon(getClass().getResource("images/failed.png"));
            employeeretypepassstateinsettings.setIcon(statusiconcurrentpassword);
            newemppasswordfield.setText(null);
            retypenewemppasswordfield3.setText(null);
            newemppasswordfield.setEditable(true);
            retypenewemppasswordfield3.setEditable(false);
        }
    }//GEN-LAST:event_retypenewemppasswordfield3ActionPerformed

    private void passwrdchangebtn3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwrdchangebtn3MouseEntered
        passwrdchangebtn3.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_passwrdchangebtn3MouseEntered

    private void passwrdchangebtn3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwrdchangebtn3MouseExited
        passwrdchangebtn3.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_passwrdchangebtn3MouseExited

    private void passwrdchangebtn3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwrdchangebtn3MousePressed
        passwrdchangebtn3.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_passwrdchangebtn3MousePressed

    private void passwrdchangebtn3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwrdchangebtn3MouseReleased
        passwrdchangebtn3.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_passwrdchangebtn3MouseReleased

    private void passwrdchangebtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwrdchangebtn3ActionPerformed
        String newpass = String.valueOf(retypenewemppasswordfield3.getPassword());
        String empusernameset = "INSERT INTO `account`(`accountId`, `userName`, `password`, `accountType`) VALUES ('" + jTextField11.getText() + "','" + usernameforempid.getText() + "','" + newpass + "','Member')";
        String updateemp = "UPDATE `emp` SET `accountId` ='" + jTextField11.getText() + "'  WHERE `emp`.`empid` = '" + jTextField11.getText() + "';";
        try {
            DB.DB.iud(empusernameset);
            DB.DB.iud(updateemp);
            JOptionPane.showMessageDialog(this, "Member Account Created");
            usernameforempid.setText(null);
            newemppasswordfield.setText(null);
            retypenewemppasswordfield3.setText(null);
            generatenewaccID();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Username Exists !");
        }

    }//GEN-LAST:event_passwrdchangebtn3ActionPerformed

    private void paybtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paybtnMouseEntered
        paybtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_paybtnMouseEntered

    private void paybtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paybtnMouseExited
        paybtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_paybtnMouseExited

    private void paybtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paybtnMousePressed
        paybtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_paybtnMousePressed

    private void paybtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paybtnMouseReleased
        paybtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_paybtnMouseReleased

    private void paybtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paybtnActionPerformed
        try {
            String inst = "update `payroll`  set status='Payed' where empid='" + jTextField10.getText() + "'  ";
            DB.DB.iud(inst);
        } catch (Exception e) {
        }


    }//GEN-LAST:event_paybtnActionPerformed

    private void printpayedreceiptbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printpayedreceiptbtnMouseEntered
        printpayedreceiptbtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_printpayedreceiptbtnMouseEntered

    private void printpayedreceiptbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printpayedreceiptbtnMouseExited
        printpayedreceiptbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_printpayedreceiptbtnMouseExited

    private void printpayedreceiptbtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printpayedreceiptbtnMousePressed
        printpayedreceiptbtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_printpayedreceiptbtnMousePressed

    private void printpayedreceiptbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printpayedreceiptbtnMouseReleased
        printpayedreceiptbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_printpayedreceiptbtnMouseReleased

    private void printpayedreceiptbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printpayedreceiptbtnActionPerformed
        new Thread() {
            public void run() {
                try {
                    String path = "C:\\JasperReports\\PayrollReceiptGRN.jrxml";
                    JasperReport compileReport = JasperCompileManager.compileReport(path);
                    HashMap hm = new HashMap();
                    String month = salesday.getText().toString().substring(0, 7);
                    hm.put("empid", jTextField10.getText());
                    hm.put("month", month);
                    hm.put("year", "2018");
                    JasperPrint jp = JasperFillManager.fillReport(compileReport, hm, DB.DB.getConnection());
                    twoinonereportforpayroll.add("Preview Payroll List", new JPanel().add(new JRViewer(jp)));
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }.start();

    }//GEN-LAST:event_printpayedreceiptbtnActionPerformed

    private void printpayrollsuitempsbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printpayrollsuitempsbtnMouseEntered
        printpayrollsuitempsbtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_printpayrollsuitempsbtnMouseEntered

    private void printpayrollsuitempsbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printpayrollsuitempsbtnMouseExited
        printpayrollsuitempsbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_printpayrollsuitempsbtnMouseExited

    private void printpayrollsuitempsbtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printpayrollsuitempsbtnMousePressed
        printpayrollsuitempsbtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_printpayrollsuitempsbtnMousePressed

    private void printpayrollsuitempsbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printpayrollsuitempsbtnMouseReleased
        printpayrollsuitempsbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_printpayrollsuitempsbtnMouseReleased

    private void printpayrollsuitempsbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printpayrollsuitempsbtnActionPerformed
        new Thread() {
            public void run() {
                try {
                    String path = "C:\\JasperReports\\PayrolllistGFS.jrxml";
                    JasperReport compileReport = JasperCompileManager.compileReport(path);
                    HashMap hm = new HashMap();
                    String month = salesday.getText().toString().substring(0, 7);
                    hm.put("month", month);
                    hm.put("total", jTextField7.getText());
                    hm.put("banktotal", jTextField8.getText());
                    hm.put("balance", jTextField9.getText());

                    JasperPrint jp = JasperFillManager.fillReport(compileReport, hm, DB.DB.getConnection());
                    twoinonereportforpayroll.add("Preview Payroll List", new JPanel().add(new JRViewer(jp)));
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }.start();

    }//GEN-LAST:event_printpayrollsuitempsbtnActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        if (jCheckBox3.isSelected()) {
            customerid.setEditable(true);
            customerid.grabFocus();
        } else {
            customerid.setEditable(false);

        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void customeridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customeridActionPerformed

        try {
            double d1 = Double.parseDouble(totalinpos.getText());
            double d2 = 0;
            ResultSet rs = DB.DB.search("SELECT membershipdiscount FROM memberships WHERE membershiptypes=(SELECT `membership`FROM customers WHERE `cusid`='1' )");
            while (rs.next()) {
                Vector v = new Vector();
                d2 = Double.parseDouble(rs.getString(1));
            }
            double d3 = d1 * (100 - d2) / 100;
            nettotalfield.setText("" + d3);
            nettotalfield.grabFocus();
        } catch (Exception e) {
        }

    }//GEN-LAST:event_customeridActionPerformed


    private void attendancereportlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendancereportlblMouseClicked
        Activityloglbl.setBackground(new Color(100, 183, 0));
        printloglbl.setBackground(new Color(100, 183, 0));
        attendancereportlbl.setBackground(new Color(0, 50, 0));
        activitylogpanel.setVisible(false);
        printlogpanel.setVisible(false);
        attendancereportpnl.setVisible(true);
        attendancetabb.removeAll();
        new Thread() {
            public void run() {
                try {
                    String path = "C:\\JasperReports\\AttendanceGFS.jrxml";
                    JasperReport compileReport = JasperCompileManager.compileReport(path);
                    JasperPrint jp = JasperFillManager.fillReport(compileReport, null, DB.DB.getConnection());
                    attendancetabb.add("Attendance Report", new JPanel().add(new JRViewer(jp)));
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }.start();

    }//GEN-LAST:event_attendancereportlblMouseClicked

    private void attendancereportlblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendancereportlblMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_attendancereportlblMouseEntered

    private void attendancereportlblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendancereportlblMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_attendancereportlblMouseExited

    private void emaillblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emaillblMouseClicked
        genaral.setVisible(false);
        backuprestorepanel.setVisible(false);
        about.setVisible(false);
        Email.setVisible(true);
        emaillbl.setBackground(new Color(0, 50, 0));
        accountssettingslbl.setBackground(new Color(100, 183, 0));
        backuprestorelbl.setBackground(new Color(100, 183, 0));
        aboutlbl.setBackground(new Color(100, 183, 0));
        DefaultTableModel dtm = (DefaultTableModel) emailrecetable.getModel();
        dtm.setRowCount(0);
        refreshrecepients();

    }//GEN-LAST:event_emaillblMouseClicked

    private void refreshrecepients() {
        try {
            ResultSet rs = DB.DB.search("SELECT * FROM `emp`");
            DefaultTableModel dtm = (DefaultTableModel) emailrecetable.getModel();
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString(1));
                v.add(rs.getString(2));
                v.add(rs.getString(7));
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void emaillblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emaillblMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_emaillblMouseEntered

    private void emaillblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emaillblMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_emaillblMouseExited

    private void sendmailbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendmailbtnMouseEntered
        sendmailbtn.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_sendmailbtnMouseEntered

    private void sendmailbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendmailbtnMouseExited
        sendmailbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_sendmailbtnMouseExited

    private void sendmailbtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendmailbtnMousePressed
        sendmailbtn.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_sendmailbtnMousePressed

    private void sendmailbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendmailbtnMouseReleased
        sendmailbtn.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_sendmailbtnMouseReleased

    private void sendmailbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendmailbtnActionPerformed
        String From = fromfield.getText();
        String To = tofield.getText();
        String Subject = restorelocationfield3.getText();
        String Text = jTextPane1.getText();

        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.socketFactory.port", "465");
        props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.port", "465");

        Session session = Session.getDefaultInstance(props,
                new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(emailfield.getText(), jPasswordField1.getText());
            }
        }
        );
        try {
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(From));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(To));
            message.setSubject(Subject);
            MimeBodyPart messagebodypart = new MimeBodyPart();
            messagebodypart.setText(Text);
            Multipart multipart = new MimeMultipart();
            multipart.addBodyPart(messagebodypart);
            messagebodypart = new MimeBodyPart();
            DataSource source = new FileDataSource(filename);
            messagebodypart.setDataHandler(new DataHandler(source));
            messagebodypart.setFileName(namefrattachment.getText());
            multipart.addBodyPart(messagebodypart);
            message.setContent(multipart);
            Transport.send(message);
            JOptionPane.showMessageDialog(null, "message sent");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }//GEN-LAST:event_sendmailbtnActionPerformed

    private void browsepathinrestore2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_browsepathinrestore2MouseEntered
        browsepathinrestore2.setBackground(new Color(0, 112, 0));
    }//GEN-LAST:event_browsepathinrestore2MouseEntered

    private void browsepathinrestore2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_browsepathinrestore2MouseExited
        browsepathinrestore2.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_browsepathinrestore2MouseExited

    private void browsepathinrestore2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_browsepathinrestore2MousePressed
        browsepathinrestore2.setBackground(new Color(0, 168, 0));
    }//GEN-LAST:event_browsepathinrestore2MousePressed

    private void browsepathinrestore2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_browsepathinrestore2MouseReleased
        browsepathinrestore2.setBackground(new Color(0, 50, 0));
    }//GEN-LAST:event_browsepathinrestore2MouseReleased

    private void browsepathinrestore2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browsepathinrestore2ActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        filename = f.getAbsolutePath();
        attachpathmail.setText(filename);
    }//GEN-LAST:event_browsepathinrestore2ActionPerformed


    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked
        openinweb.lauchvivexsite();
    }//GEN-LAST:event_jLabel13MouseClicked

    private void jLabel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseClicked
        openinweb.lauchvivexsite();
    }//GEN-LAST:event_jLabel22MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        openinweb.lauchvivexsite();
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MouseClicked
        openinweb.lauchsnowfalkestudiotwitter();
    }//GEN-LAST:event_jLabel27MouseClicked

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        try {
            ResultSet rs = DB.DB.search("SELECT * FROM  `emp` WHERE  `employeetype` LIKE  '" + jComboBox3.getSelectedItem().toString() + "' ");
            DefaultTableModel dtm = (DefaultTableModel) employeetable.getModel();
            dtm.setRowCount(0);
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString(1));
                v.add(rs.getString(2));
                v.add(rs.getString(3));
                v.add(rs.getString(4));
                v.add(rs.getString(5));
                v.add(rs.getString(6));
                dtm.addRow(v);
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void attendancereportlblAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_attendancereportlblAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_attendancereportlblAncestorAdded

    private void attendanceneedfrpayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendanceneedfrpayActionPerformed
        paymentsuitemployees();
        refreshpayroll();
    }//GEN-LAST:event_attendanceneedfrpayActionPerformed

    private void employeestopaytableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeestopaytableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_employeestopaytableMouseClicked

    private void emailrecetableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emailrecetableMouseClicked
        receemailfromtable.setText((String) emailrecetable.getValueAt(emailrecetable.getSelectedRow(), 2));
        tofield.setText((String) emailrecetable.getValueAt(emailrecetable.getSelectedRow(), 2));
    }//GEN-LAST:event_emailrecetableMouseClicked

    private void emailfieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailfieldKeyPressed
        fromfield.setText(emailfield.getText());
    }//GEN-LAST:event_emailfieldKeyPressed

    private void namefieldempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namefieldempActionPerformed
        agefieldemp.grabFocus();
    }//GEN-LAST:event_namefieldempActionPerformed

    private void usernameforempidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameforempidActionPerformed
        if (usernameforempid.getText().isEmpty()) {
            ImageIcon statusiconcurrentpassword = new ImageIcon(getClass().getResource("images/failed.png"));
            employeeusernamestateinsettings1.setIcon(statusiconcurrentpassword);
        } else {
            ImageIcon statusiconcurrentpassword = new ImageIcon(getClass().getResource("images/success.png"));
            employeeusernamestateinsettings1.setIcon(statusiconcurrentpassword);
            newemppasswordfield.setEnabled(true);
            newemppasswordfield.grabFocus();
            retypenewemppasswordfield3.setEnabled(false);
        }
    }//GEN-LAST:event_usernameforempidActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Activityloglbl;
    private javax.swing.JTable Activitylogtable;
    private javax.swing.JLabel AddStock;
    private javax.swing.JButton Addstockbtn;
    private javax.swing.JPanel Addstockpanel;
    private javax.swing.JButton Backupbtn;
    private javax.swing.JButton Billokbtn;
    private javax.swing.JPanel Email;
    private javax.swing.JLabel PrintGRN;
    private javax.swing.JLabel PrintStock;
    private javax.swing.JTextField Productnamegrn;
    private javax.swing.JTextField Sellidfield;
    private javax.swing.JLabel ViewStock;
    private javax.swing.JPanel Viewstockpanel;
    private javax.swing.JPanel about;
    private javax.swing.JLabel aboutlbl;
    private javax.swing.JLabel accountssettingslbl;
    private javax.swing.JComboBox<String> activityfieldcombo;
    private javax.swing.JPanel activitylogpanel;
    private javax.swing.JButton addbtnemp;
    private javax.swing.JButton additeminpos;
    private javax.swing.JButton addnewcustomerbtn;
    private javax.swing.JPasswordField admincurrentpasswordinsettings;
    private javax.swing.JTextField agefieldemp;
    private javax.swing.JTextField attachpathmail;
    private javax.swing.JTextField attendanceneedfrpay;
    private javax.swing.JLabel attendancereportlbl;
    private javax.swing.JPanel attendancereportpnl;
    private javax.swing.JTabbedPane attendancetabb;
    private javax.swing.JButton backtopos;
    private javax.swing.JTextField backuplocationfield;
    private javax.swing.JLabel backuprestorelbl;
    private javax.swing.JPanel backuprestorepanel;
    private javax.swing.JTextField balancefield;
    private javax.swing.JTextField barcodefield;
    private javax.swing.JTextField barcodefield1;
    private javax.swing.JLabel barcodefieldstate;
    private javax.swing.JTextField billbumberfieldinsellrecords;
    private javax.swing.JTextField billdateingrn;
    private javax.swing.JPanel black;
    private javax.swing.JTextField brandfield;
    private javax.swing.JTextField brandfield1;
    private javax.swing.JLabel brandfieldstate;
    private javax.swing.JButton browsepathinbackup;
    private javax.swing.JButton browsepathinrestore;
    private javax.swing.JButton browsepathinrestore2;
    private javax.swing.JPanel cardonstock;
    private javax.swing.JTable cartlisttable;
    private javax.swing.JTextField cate1;
    private javax.swing.JTextField cate2;
    private javax.swing.JTextField cate3;
    private javax.swing.JTextField cate4;
    private javax.swing.JTextField cate5;
    private javax.swing.JLabel chartslbl;
    private javax.swing.JPanel chartspnl;
    private javax.swing.JTabbedPane chartstab;
    private javax.swing.JLabel close;
    private javax.swing.JTextField conditionfield;
    private javax.swing.JTextField conditionfield1;
    private javax.swing.JLabel conditionfieldstate;
    private javax.swing.JLabel copperlogo;
    private javax.swing.JLabel copperlogo1;
    private javax.swing.JLabel copperlogo2;
    private javax.swing.JLabel currencyinvisible;
    private javax.swing.JLabel currencyinvisible1;
    private javax.swing.JTextField cusagefield2;
    private javax.swing.JComboBox<String> cusgender2;
    private javax.swing.JTextField cusnamefield2;
    private javax.swing.JPanel cusprofilepnl;
    private javax.swing.JPanel cusprofilereportpnl;
    private javax.swing.JLabel cusprofilereportslbl;
    private javax.swing.JLabel cusprofileslbl;
    private javax.swing.JLabel cusreportlbl;
    private javax.swing.JPanel cusreportpnl;
    private javax.swing.JTextField customeragefield;
    private javax.swing.JPanel customercard;
    private javax.swing.JButton customerfilterbtn;
    private javax.swing.JComboBox<String> customergendercombo;
    private javax.swing.JTextField customerid;
    private javax.swing.JTextField customerid2;
    private javax.swing.JTextField customeridfield;
    private javax.swing.JButton customerlistprintreportbtn;
    private javax.swing.JComboBox<String> customermembershipfiltercombo;
    private javax.swing.JTextField customernamefield;
    private javax.swing.JPanel customerpnl;
    private javax.swing.JButton customerpnlrefresh;
    private javax.swing.JTabbedPane customerprofiletabbed;
    private javax.swing.JTextField customersearchfield0;
    private javax.swing.JTable customertabl2;
    private javax.swing.JTable customertable;
    private javax.swing.JLabel customertoggle;
    private javax.swing.JTextField dateingrn;
    private javax.swing.JLabel datelbl;
    private javax.swing.JButton deletebtnemp;
    private javax.swing.JButton deletecustomerbtn;
    private javax.swing.JButton deletethisid;
    private javax.swing.JPanel detailmode;
    private javax.swing.JButton detailmodebtn;
    private javax.swing.JLabel diamondlogo;
    private javax.swing.JLabel diamondlogo1;
    private javax.swing.JLabel diamondlogo2;
    private javax.swing.JTextField discountfield;
    private javax.swing.JButton editdetailmodebtn;
    private javax.swing.JTextField emailfield;
    private javax.swing.JLabel emaillbl;
    private javax.swing.JTable emailrecetable;
    private javax.swing.JTextField empage2;
    private javax.swing.JComboBox<String> empgender2;
    private javax.swing.JTextField empid2;
    private javax.swing.JTextField empidfield;
    private javax.swing.JLabel employeenewpassstateinsettings;
    private javax.swing.JPanel employeepnl;
    private javax.swing.JTabbedPane employeereporttab;
    private javax.swing.JLabel employeeretypepassstateinsettings;
    private javax.swing.JTable employeestopaytable;
    private javax.swing.JTable employeetable;
    private javax.swing.JLabel employeetoggle;
    private javax.swing.JLabel employeeusernamestateinsettings1;
    private javax.swing.JTextField empname2;
    private javax.swing.JTextField empposition2;
    private javax.swing.JPanel empprofilepnl;
    private javax.swing.JTabbedPane empprofileprinttab;
    private javax.swing.JPanel empprofilereportpnl;
    private javax.swing.JLabel empprofileslbl;
    private javax.swing.JLabel empreportlbl;
    private javax.swing.JPanel empreportpnl;
    private javax.swing.JTextField empsallery2;
    private javax.swing.JPanel empseccard;
    private javax.swing.JTable emptable2;
    private javax.swing.JComboBox<String> filteruserfield;
    private javax.swing.JButton findbtn;
    private javax.swing.JButton findbtn1;
    private javax.swing.JPanel footer;
    private javax.swing.JTextField fromfield;
    private javax.swing.JPanel genaral;
    private javax.swing.JComboBox<String> genderemp;
    private javax.swing.JLabel goldenlogo;
    private javax.swing.JLabel goldenlogo1;
    private javax.swing.JLabel goldenlogo2;
    private javax.swing.JButton grnaddtotablebtn;
    private javax.swing.JTable grncountingtable;
    private javax.swing.JTextField grnnumberfield;
    private javax.swing.JTextField grnrecordfield;
    private javax.swing.JLabel grnrecordslbl;
    private javax.swing.JPanel grnrecordspanel;
    private javax.swing.JTabbedPane grnrecordstab;
    private javax.swing.JTable grnrecordstable;
    private javax.swing.JTabbedPane grntabbed;
    private javax.swing.JTextField grntotal;
    private javax.swing.JPanel header;
    private javax.swing.JPanel holder;
    private javax.swing.JPanel homepnl;
    private javax.swing.JLabel hometoggle;
    private javax.swing.JPanel invoice;
    private javax.swing.JTextField invoiceamountingrn;
    private javax.swing.JTextField invoicenoingrn;
    private javax.swing.JTabbedPane invoicetab;
    private javax.swing.JTextField itemdescriptionfield;
    private javax.swing.JTextField itemdescriptionfield1;
    private javax.swing.JLabel itemdescriptionfieldstate;
    private javax.swing.JTextField itemidfield;
    private javax.swing.JTextField itemidfield1;
    private javax.swing.JLabel itemidfieldstate;
    private javax.swing.JTextField itemnamefield;
    private javax.swing.JTextField itemnamefield1;
    private javax.swing.JLabel itemnamefieldstate;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel48;
    private javax.swing.JPanel jPanel49;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel50;
    private javax.swing.JPanel jPanel54;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JPanel lastactivities;
    private javax.swing.JPanel lastactivities4;
    private javax.swing.JPanel lastactivities5;
    private javax.swing.JPanel lastactivities6;
    private javax.swing.JPanel lastactivities7;
    private javax.swing.JLabel lefticon;
    private javax.swing.JPanel leftside;
    private javax.swing.JPanel logcardpnl;
    private javax.swing.JPanel logoutsection;
    private javax.swing.JPanel logspnl;
    private javax.swing.JLabel logtoggle;
    private javax.swing.JLabel managecuslbl;
    private javax.swing.JLabel manageemplbl;
    private javax.swing.JButton membershipalliinonebtn;
    private javax.swing.JComboBox<String> membershipcombo;
    private javax.swing.JPanel membershipmng;
    private javax.swing.JLabel membershipmnglbl;
    private javax.swing.JPanel membershipsholder;
    private javax.swing.JPanel membershipsholder1;
    private javax.swing.JPanel membershipsholder2;
    private javax.swing.JTable membershiptable;
    private javax.swing.JTextField membeshipdiscountfield;
    private javax.swing.JPanel middle;
    private javax.swing.JPanel mngcustomerpnl;
    private javax.swing.JPanel mngemppnl;
    private javax.swing.JTable monthlysales;
    private javax.swing.JTextField namefieldemp;
    private javax.swing.JTextField namefrattachment;
    private javax.swing.JTextField nettotalfield;
    private javax.swing.JPasswordField newadminpasswordfield;
    private javax.swing.JPasswordField newemppasswordfield;
    private javax.swing.JButton ok;
    private javax.swing.JButton okbtngrn;
    private javax.swing.JTextField ordersneededfield;
    private javax.swing.JButton passwrdchangebtn;
    private javax.swing.JButton passwrdchangebtn3;
    private javax.swing.JButton paybtn;
    private javax.swing.JTextField paymentfield;
    private javax.swing.JLabel payrolllbl;
    private javax.swing.JPanel payrollpnl;
    private javax.swing.JLabel platinumlogo;
    private javax.swing.JLabel platinumlogo1;
    private javax.swing.JLabel platinumlogo2;
    private javax.swing.JButton poscancelbtn;
    private javax.swing.JTextField positionemp;
    private javax.swing.JLabel poslbl;
    private javax.swing.JPanel pospanel;
    private javax.swing.JPanel pospanelk;
    private javax.swing.JButton previewgrnrecord;
    private javax.swing.JButton printcusprofile;
    private javax.swing.JButton printgrnbtn;
    private javax.swing.JPanel printgrnpanel;
    private javax.swing.JButton printinvoicebtn;
    private javax.swing.JButton printinvoicebtninsellrecords;
    private javax.swing.JLabel printloglbl;
    private javax.swing.JPanel printlogpanel;
    private javax.swing.JButton printpayedreceiptbtn;
    private javax.swing.JButton printpayrollsuitempsbtn;
    private javax.swing.JPanel printstockpanel;
    private javax.swing.JTabbedPane printstocktabbed;
    private javax.swing.JTextField productamountingrn;
    private javax.swing.JTextField productcodeingrn;
    private javax.swing.JTextField productquantityingrn;
    private javax.swing.JLabel profilereportslbl;
    private javax.swing.JTextField quantityfield;
    private javax.swing.JTextField quantityfield1;
    private javax.swing.JLabel quantityfieldstate;
    private javax.swing.JTextField quantityinpos;
    private javax.swing.JTextField quciksearchviewstock;
    private javax.swing.JLabel quicksearchitemidlbl;
    private javax.swing.JLabel quicksearchitemidlbl1;
    private javax.swing.JLabel quicksearchitemidlbl10;
    private javax.swing.JLabel quicksearchitemidlbl11;
    private javax.swing.JLabel quicksearchitemidlbl12;
    private javax.swing.JLabel quicksearchitemidlbl13;
    private javax.swing.JLabel quicksearchitemidlbl14;
    private javax.swing.JLabel quicksearchitemidlbl15;
    private javax.swing.JLabel quicksearchitemidlbl16;
    private javax.swing.JLabel quicksearchitemidlbl17;
    private javax.swing.JLabel quicksearchitemidlbl18;
    private javax.swing.JLabel quicksearchitemidlbl19;
    private javax.swing.JLabel quicksearchitemidlbl2;
    private javax.swing.JLabel quicksearchitemidlbl20;
    private javax.swing.JLabel quicksearchitemidlbl21;
    private javax.swing.JLabel quicksearchitemidlbl22;
    private javax.swing.JLabel quicksearchitemidlbl23;
    private javax.swing.JLabel quicksearchitemidlbl24;
    private javax.swing.JLabel quicksearchitemidlbl25;
    private javax.swing.JLabel quicksearchitemidlbl26;
    private javax.swing.JLabel quicksearchitemidlbl27;
    private javax.swing.JLabel quicksearchitemidlbl30;
    private javax.swing.JLabel quicksearchitemidlbl31;
    private javax.swing.JLabel quicksearchitemidlbl32;
    private javax.swing.JLabel quicksearchitemidlbl33;
    private javax.swing.JLabel quicksearchitemidlbl34;
    private javax.swing.JLabel quicksearchitemidlbl35;
    private javax.swing.JLabel quicksearchitemidlbl36;
    private javax.swing.JLabel quicksearchitemidlbl37;
    private javax.swing.JLabel quicksearchitemidlbl38;
    private javax.swing.JLabel quicksearchitemidlbl39;
    private javax.swing.JLabel quicksearchitemidlbl4;
    private javax.swing.JLabel quicksearchitemidlbl40;
    private javax.swing.JLabel quicksearchitemidlbl41;
    private javax.swing.JLabel quicksearchitemidlbl42;
    private javax.swing.JLabel quicksearchitemidlbl43;
    private javax.swing.JLabel quicksearchitemidlbl44;
    private javax.swing.JLabel quicksearchitemidlbl45;
    private javax.swing.JLabel quicksearchitemidlbl47;
    private javax.swing.JLabel quicksearchitemidlbl48;
    private javax.swing.JLabel quicksearchitemidlbl49;
    private javax.swing.JLabel quicksearchitemidlbl5;
    private javax.swing.JLabel quicksearchitemidlbl50;
    private javax.swing.JLabel quicksearchitemidlbl51;
    private javax.swing.JLabel quicksearchitemidlbl52;
    private javax.swing.JLabel quicksearchitemidlbl53;
    private javax.swing.JLabel quicksearchitemidlbl54;
    private javax.swing.JLabel quicksearchitemidlbl55;
    private javax.swing.JLabel quicksearchitemidlbl56;
    private javax.swing.JLabel quicksearchitemidlbl6;
    private javax.swing.JLabel quicksearchitemidlbl7;
    private javax.swing.JLabel quicksearchitemidlbl8;
    private javax.swing.JLabel quicksearchitemidlbl9;
    private javax.swing.JTextField receemailfromtable;
    private javax.swing.JButton refresh;
    private javax.swing.JButton refreshbtnemp;
    private javax.swing.JButton refreshbtnemp1;
    private javax.swing.JButton refreshbtnemp3;
    private javax.swing.JButton refreshinlogbtn;
    private javax.swing.JButton removeitemfromlistbtn;
    private javax.swing.JPanel reportholder;
    private javax.swing.JButton restorebtn;
    private javax.swing.JTextField restorelocationfield;
    private javax.swing.JTextField restorelocationfield3;
    private javax.swing.JPasswordField retypenewadminpasswordfield;
    private javax.swing.JPasswordField retypenewemppasswordfield3;
    private javax.swing.JPanel rightside;
    private javax.swing.JTextField salaryemp;
    private javax.swing.JLabel salerecordslbl;
    private javax.swing.JPanel salescard;
    private javax.swing.JLabel salesday;
    private javax.swing.JLabel salesday1;
    private javax.swing.JPanel salespnl;
    private javax.swing.JTable salesrecordstable;
    private javax.swing.JLabel salestoggle;
    private javax.swing.JButton searchbillbtn;
    private javax.swing.JButton searchbtnemp1;
    private javax.swing.JButton searchbtnemp2;
    private javax.swing.JButton searchbtnemp3;
    private javax.swing.JButton searchbtnemp4;
    private javax.swing.JComboBox<String> searchcomboinpos;
    private javax.swing.JTextField searchcusfield2;
    private javax.swing.JTextField searchfiledemp0;
    private javax.swing.JTextField searchfiledemp1;
    private javax.swing.JTextField searchinposfield;
    private javax.swing.JPanel sectionlogout;
    private javax.swing.JButton sellbtn;
    private javax.swing.JTextField sellingpricefield;
    private javax.swing.JTextField sellingpricefield1;
    private javax.swing.JLabel sellingpricefieldstate;
    private javax.swing.JPanel sellrecordspanel;
    private javax.swing.JTabbedPane sellrecordstab;
    private javax.swing.JButton sendmailbtn;
    private javax.swing.JPanel settingscard;
    private javax.swing.JPanel settingspnl;
    private javax.swing.JLabel settingstoggle;
    private javax.swing.JLabel silverlogo;
    private javax.swing.JLabel silverlogo1;
    private javax.swing.JLabel silverlogo2;
    private javax.swing.JLabel stateofbackuplbl;
    private javax.swing.JLabel stateofcurrentpasswordadmin;
    private javax.swing.JLabel stateofcurrentpasswordadmin1;
    private javax.swing.JLabel stateofcurrentpasswordadmin2;
    private javax.swing.JLabel stateofrestorelbl;
    private javax.swing.JTextField stocknumberfield;
    private javax.swing.JTextField stocknumberfield1;
    private javax.swing.JLabel stocknumberfieldstate;
    private javax.swing.JPanel stockpnl;
    private javax.swing.JTextField stockpricefield;
    private javax.swing.JTextField stockpricefield1;
    private javax.swing.JLabel stockpricefieldstate;
    private javax.swing.JLabel stockstoggle;
    private javax.swing.JTable stocktableinpostable;
    private javax.swing.JLabel stockupdate;
    private javax.swing.JPanel stockupdatepanel;
    private javax.swing.JTable stockupdatetable;
    private javax.swing.JTextField suppliergrnfield;
    private javax.swing.JTextField supplieridfield;
    private javax.swing.JTextField supplieridfield1;
    private javax.swing.JLabel supplieridfieldstate;
    private javax.swing.JPanel tableview;
    private javax.swing.JLabel timelbl;
    private javax.swing.JLabel todayearned;
    private javax.swing.JTable todaysales;
    private javax.swing.JLabel todaysaleslbl;
    private javax.swing.JTextField tofield;
    private javax.swing.JTextField totalinpos;
    private javax.swing.JTabbedPane twoinonereportforpayroll;
    private javax.swing.JButton updatebtnemp;
    private javax.swing.JButton updatebtnemp2;
    private javax.swing.JButton updatebtnemp5;
    private javax.swing.JButton updatecustomerbtn;
    private javax.swing.JButton updatestockqbtn;
    private javax.swing.JButton updatestockqbtn1;
    private javax.swing.JTextField usernameforempid;
    private javax.swing.JTextField vatfield;
    private javax.swing.JTable viewstocktable;
    private javax.swing.JTextField warrantyfield;
    private javax.swing.JTextField warrantyfield1;
    private javax.swing.JLabel warrantyfieldstate;
    // End of variables declaration//GEN-END:variables
    private File file;
    String attachmentpath;
    String filename;
}
